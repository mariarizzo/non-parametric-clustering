(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    464907,       9150]
NotebookOptionsPosition[    461106,       9028]
NotebookOutlinePosition[    461453,       9043]
CellTagsIndexPosition[    461410,       9040]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Testing", " ", "Energy", " ", "Statistics", " ", "and", " ", 
      "comparing", " ", "with", " ", "K"}], "-", "means"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "GMM", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "Guilherme"}],
       " ", 
      RowBox[{"S", ".", " ", "Franca"}]}], " ", "<", 
     RowBox[{
      RowBox[{"guifranca", "@", "gmail"}], ".", "com"}], ">"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"3", "/", "13"}], "/", "2017"}], "\[IndentingNewLine]", "  ", 
     "Johns", " ", "Hopkins", " ", "University"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6984482241431828`*^9, 3.6984483105242505`*^9}, {
  3.698593655385024*^9, 3.698593658517337*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"2", " ", "Clusters", " ", "only"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", 
     RowBox[{"A_", ",", "B_", ",", "\[Alpha]_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["n", "1"], "=", 
       RowBox[{"Length", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["n", "2"], "=", 
       RowBox[{"Length", "[", "B", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          SubscriptBox["n", "1"], 
          SubscriptBox["n", "2"]}]], 
        RowBox[{"Sum", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"A", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", 
             RowBox[{"B", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "\[Alpha]"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            SubscriptBox["n", "1"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            SubscriptBox["n", "2"]}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "g", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Energy", "[", 
     RowBox[{"A_", ",", "B_", ",", "\[Alpha]_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["n", "1"], "=", 
       RowBox[{"Length", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["n", "2"], "=", 
       RowBox[{"Length", "[", "B", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"e", "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          SubscriptBox["n", "1"], " ", 
          SubscriptBox["n", "2"]}], 
         RowBox[{
          SubscriptBox["n", "1"], "+", 
          SubscriptBox["n", "2"]}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"G", "[", 
            RowBox[{"A", ",", "B", ",", "\[Alpha]"}], "]"}]}], "-", 
          RowBox[{"G", "[", 
           RowBox[{"A", ",", "A", ",", "\[Alpha]"}], "]"}], "-", 
          RowBox[{"G", "[", 
           RowBox[{"B", ",", "B", ",", "\[Alpha]"}], "]"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "e", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EnergyShuffle", "[", 
     RowBox[{"A_", ",", "B_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"X1", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"RandomSample", "[", 
          RowBox[{"A", ",", 
           RowBox[{"300", "-", "n"}]}], "]"}], ",", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"B", ",", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Y1", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"RandomSample", "[", 
          RowBox[{"B", ",", 
           RowBox[{"300", "-", "n"}]}], "]"}], ",", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"A", ",", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Energy", "[", 
        RowBox[{"X1", ",", "Y1", ",", "1"}], "]"}], "]"}], ";"}], 
     "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J", "[", 
     RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["m", "a"], "=", 
       RowBox[{"Mean", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["m", "b"], "=", " ", 
       RowBox[{"Mean", "[", "B", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["n", "a"], "=", 
       RowBox[{"Length", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["n", "b"], "=", 
       RowBox[{"Length", "[", "B", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"j", "=", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Norm", "[", 
              RowBox[{
               RowBox[{"A", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               SubscriptBox["m", "a"]}], "]"}], "2"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}], "+", 
          RowBox[{"Sum", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Norm", "[", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               SubscriptBox["m", "b"]}], "]"}], "2"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "B", "]"}]}], "}"}]}], "]"}]}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "j", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KmeansShuffle", "[", 
     RowBox[{"A_", ",", "B_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"X1", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"RandomSample", "[", 
          RowBox[{"A", ",", 
           RowBox[{"300", "-", "n"}]}], "]"}], ",", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"B", ",", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Y1", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"RandomSample", "[", 
          RowBox[{"B", ",", 
           RowBox[{"300", "-", "n"}]}], "]"}], ",", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"A", ",", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"J", "[", 
        RowBox[{"X1", ",", "Y1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]",
      ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GMM", "[", 
     RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["n", "a"], "=", 
       RowBox[{"Length", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["n", "b"], "=", 
       RowBox[{"Length", "[", "B", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["\[Mu]", "a"], "=", 
       RowBox[{"Mean", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["\[Mu]", "b"], "=", 
       RowBox[{"Mean", "[", "B", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", "a"], "=", 
       RowBox[{"Covariance", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["\[CapitalSigma]", "b"], "=", 
       RowBox[{"Covariance", "[", "B", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"l", "=", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"MultinormalDistribution", "[", 
              RowBox[{
               SubscriptBox["\[Mu]", "a"], ",", 
               SubscriptBox["\[CapitalSigma]", "a"]}], "]"}], ",", 
             RowBox[{"A", "[", 
              RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            SubscriptBox["n", "a"]}], "}"}]}], "]"}], "+", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"MultinormalDistribution", "[", 
              RowBox[{
               SubscriptBox["\[Mu]", "b"], ",", 
               SubscriptBox["\[CapitalSigma]", "b"]}], "]"}], ",", 
             RowBox[{"B", "[", 
              RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            SubscriptBox["n", "b"]}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "l", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GMMShuffle", "[", 
     RowBox[{"A_", ",", "B_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"X1", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"RandomSample", "[", 
          RowBox[{"A", ",", 
           RowBox[{"300", "-", "n"}]}], "]"}], ",", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"B", ",", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Y1", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"RandomSample", "[", 
          RowBox[{"B", ",", 
           RowBox[{"300", "-", "n"}]}], "]"}], ",", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"A", ",", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"GMM", "[", 
        RowBox[{"X1", ",", "Y1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]",
      ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.698111820741935*^9, 3.698111847760915*^9}, {
   3.6981119237483187`*^9, 3.6981120350728893`*^9}, {3.6981120840135593`*^9, 
   3.6981121781289616`*^9}, {3.6981124176758995`*^9, 
   3.6981124291394954`*^9}, {3.698112501542184*^9, 3.6981128598051605`*^9}, {
   3.6981129210000057`*^9, 3.698113003465604*^9}, {3.6981167602123137`*^9, 
   3.6981167736352425`*^9}, {3.698150049382992*^9, 3.6981500531649013`*^9}, {
   3.698150819720567*^9, 3.698150832456274*^9}, {3.698157628182*^9, 
   3.6981576444854765`*^9}, {3.6981585363594356`*^9, 3.698158680057557*^9}, {
   3.698158739493518*^9, 3.6981587465546722`*^9}, {3.6981587941049223`*^9, 
   3.6981588270892496`*^9}, {3.6981588751723843`*^9, 
   3.6981589474098387`*^9}, {3.6981590549160995`*^9, 3.698159055150503*^9}, {
   3.6983634230723257`*^9, 3.698363488071849*^9}, {3.698363564544383*^9, 
   3.698363578373929*^9}, {3.6983636351988974`*^9, 3.6983637922773647`*^9}, 
   3.698363903964594*^9, {3.698364045644969*^9, 3.6983643020604873`*^9}, {
   3.6983643901408944`*^9, 3.6983643961259165`*^9}, {3.6983644375656767`*^9, 
   3.6983644534214106`*^9}, {3.6983644889942007`*^9, 
   3.6983645507199135`*^9}, {3.6983646162962275`*^9, 3.698364710892138*^9}, {
   3.698365413919945*^9, 3.6983656404150057`*^9}, {3.698365758424551*^9, 
   3.6983658185983996`*^9}, {3.698365861562335*^9, 3.698365894157069*^9}, {
   3.6983660081960487`*^9, 3.698366105260737*^9}, {3.698366222682006*^9, 
   3.698366258359496*^9}, {3.698366373634761*^9, 3.698366386798919*^9}, {
   3.6983664169499826`*^9, 3.698366417512721*^9}, {3.698366556511953*^9, 
   3.6983666490729914`*^9}, {3.69836668656737*^9, 3.6983667083562613`*^9}, 
   3.6983667424235744`*^9, {3.6983667888917003`*^9, 3.698366916681557*^9}, {
   3.6983670310885906`*^9, 3.6983671307066245`*^9}, {3.6983671638099966`*^9, 
   3.6983671974396396`*^9}, 3.6983672571900244`*^9, {3.6983673277380457`*^9, 
   3.6983673322357197`*^9}, 3.698367469545437*^9, {3.6983675954927897`*^9, 
   3.698367600574046*^9}, {3.698414888637441*^9, 3.698414889974767*^9}, {
   3.698448182922798*^9, 3.698448220253181*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], "]"}], ",", "500"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", "500"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.698112184379346*^9, 3.6981121983359323`*^9}, {
  3.698112248672186*^9, 3.6981123618525214`*^9}, {3.698113063606842*^9, 
  3.698113081631402*^9}, {3.69811312511052*^9, 3.698113149166319*^9}, {
  3.6981132118811865`*^9, 3.6981133104187884`*^9}, {3.6981134301233687`*^9, 
  3.698113544163843*^9}, {3.698114619605324*^9, 3.698114620824547*^9}, {
  3.698115099801321*^9, 3.6981151096400948`*^9}, {3.6981152909581766`*^9, 
  3.6981153087252026`*^9}, {3.698116676393755*^9, 3.698116676471878*^9}, {
  3.6983656760686307`*^9, 3.69836567806917*^9}, {3.6983659227164593`*^9, 
  3.6983659258888187`*^9}, {3.698366851425672*^9, 3.6983668533947177`*^9}, {
  3.6983672192574253`*^9, 3.6983672218049364`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X", ",", "Y"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"EnergyShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<\[CapitalEpsilon]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Blue"}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"KmeansShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<J\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", "Red"}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g4", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"GMMShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<L\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6981159037940874`*^9, 3.6981159039972444`*^9}, {
   3.698116099700904*^9, 3.6981161930855837`*^9}, 3.698116687863908*^9, {
   3.6981168090430317`*^9, 3.6981168275296574`*^9}, {3.698140553165732*^9, 
   3.6981405631820354`*^9}, {3.69814070752182*^9, 3.698140721319495*^9}, {
   3.698150901102168*^9, 3.6981509025710735`*^9}, {3.698158969882194*^9, 
   3.698158980650874*^9}, {3.69815932512577*^9, 3.698159345996488*^9}, {
   3.69816155245068*^9, 3.698161556607506*^9}, {3.698161660893281*^9, 
   3.6981616720309935`*^9}, {3.6983673671497974`*^9, 3.698367388943768*^9}, {
   3.6983674342327447`*^9, 3.698367438551684*^9}, {3.699013821469133*^9, 
   3.6990139150807247`*^9}, {3.6990140762927113`*^9, 3.6990140946136284`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"g1", ",", "g2", ",", "g3", ",", "g4"}], "}"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.698115934454643*^9, 3.6981159868880033`*^9}, {
  3.698116025559376*^9, 3.698116052237932*^9}, {3.6981162280110283`*^9, 
  3.698116229229872*^9}, {3.6981162619585075`*^9, 3.698116269005766*^9}, {
  3.6981167124757037`*^9, 3.6981167220889406`*^9}, {3.698140755734165*^9, 
  3.698140757094006*^9}, {3.698159010952136*^9, 3.698159011796322*^9}, {
  3.698367392656813*^9, 3.698367393812808*^9}, {3.699013958884163*^9, 
  3.6990139589935384`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
HGS0iP8D6qOhIw==
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
Fc2rp87T8AnN4SbPpvE/ZvkBKw==
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-3.3160359349107043`, 
       8.251127450046868}, {-4.083407213489292, 8.59042201486578}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {194.4, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
    InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNH01J2fTw2wwHCE3Ewcwhvm68xHcpXcWiPVdCJ
eDIVytdz+McbsC6GcwqUb+LAaj2Zf3fHJCjf0qHfWeGhgeFEKN/OodE6QNNM
fQKE3+DoUL3pU8zjW71QeRcHH+l2p7nbuqHybg4X3CP5Pv7tgMp7OuQr1RWc
mtAKlfd2+PJcXc2avQUq7+fgOKXs+FezJgjfIcChMtVjVbZXPVR9oIPqt8Ps
9QK1EP6BIAeLzfcKzi2sgOoPcUh+smvC3+clUP2hDpvT5uut9S+G6g9zYNCW
KzRpyYfqD3fY6lIVO3NzFlR/pMMp6aS1fTMyHABDWVvb
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {0, 1585.7360625922895`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {583.2, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
    InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMGHTNut+l1OEB4Ig6xM+wX5fn2QfkqDnfvF4ib
2E6G8vUcJj15fbl25TQo38Thfmjx2ovXZkH5lg4uKRPdpr+eB+XbOfhkmwrc
b50P4Tc4OriFLj/kdXshVN7FoUDj6HPZ/MVQeTeHrIXSodzRS6Hyng4311wQ
0Vq8DCrv7TDneufqf5nLofJ+Dud4ubxOaq+A8B0CHBpqvyqXJa6Eqg906P15
qqT24yoI/0CQw7cnneEuzWug+kMcTskXX0+RWQvVH+pwmtFy8nX1dVD9YQ5P
jk6WiJoN5R8Id3hnukCR/896qP5IB0Xm7UVK0hscAGmIYgM=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"J\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {0, 4123.134562910332}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {972., -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360., 256.86917696247167}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQPFmgHhOvvnHIDwRByC3y8LdRafD+WrOKys/8X5
xHQBlK/nkLZdVPD4RRjfxMGP/7nhBuOFUL6lw9czp4SEp8D4dg7HOgSe/xFd
BOE3ODqsF9JbdskNymdwcYgQfjozURMm7+Zw5u3LVXtXwuQ9Hc4XLAjxPwaT
93Z45/thkTnrYqi8n0PNtNyyzz+h8g4BDt7984U+W0DlGwIdJjltKFKLgfIP
BDm8y/1qOLcCpj/EYZq/+oRT1VC+Q6iDxKGVa/Z2wvSHOdgx/1J/1wbTH+4w
s+zJo22ZMP2RDnfffp99d8LiAwAV+3Au
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"L\"", TraditionalForm]},
      AxesOrigin->{0, -1806.561325385825},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {-2504.432830570017, -1839.7933018231677`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {1360.8000000000002, -134.8563179052976},
      ImageScaled[{0.5, 0.5}], {359.9999999999998, 256.86917696247167}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.698115943799354*^9, 3.698115987721323*^9}, 
   3.6981160304692802`*^9, 3.698116229995288*^9, 3.698116269505814*^9, 
   3.6981168645848885`*^9, 3.6981405350780506`*^9, 3.6981407577968807`*^9, 
   3.698150945151309*^9, 3.698152163123128*^9, 3.6981590128838997`*^9, 
   3.6981591152079754`*^9, 3.6981617665634375`*^9, 3.698367430629616*^9, 
   3.698367499678858*^9, 3.6983676488761435`*^9, {3.6990139541348867`*^9, 
   3.699013959899928*^9}, 3.699014137798284*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm_two_separate_\
gaussians.pdf\>\"", ",", "g", ",", "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6990139620970182`*^9, 3.6990139787201867`*^9}, {
  3.6990140130821095`*^9, 3.6990140482354712`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm_two_\
separate_gaussians.pdf\"\>"], "Output",
 CellChangeTimes->{3.6990140513222494`*^9, 3.699014141112358*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", "500"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}]}], "}"}]}], "]"}], ",", "500"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.698140326044115*^9, 3.698140336310937*^9}, {
  3.6981404081190243`*^9, 3.698140410072386*^9}, {3.6981407677307243`*^9, 
  3.698140771305346*^9}, {3.6984500363058853`*^9, 3.6984500366036315`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X", ",", "Y"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"EnergyShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<\[CapitalEpsilon]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Blue"}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"KmeansShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<J\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", "Red"}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g4", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"GMMShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<L\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6981404264135885`*^9, 3.698140427538746*^9}, {
   3.698140779343769*^9, 3.6981407833282137`*^9}, {3.6981509779200096`*^9, 
   3.6981509793891296`*^9}, {3.698161850053939*^9, 3.698161897015554*^9}, {
   3.6983676661476746`*^9, 3.698367680436499*^9}, 3.6990141550340233`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"g1", ",", "g2", ",", "g3", ",", "g4"}], "}"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6981404593869534`*^9, 3.6981404610899243`*^9}, {
   3.69814088063911*^9, 3.698140882529237*^9}, {3.6981619571434193`*^9, 
   3.6981619607685738`*^9}, {3.6983676944645596`*^9, 3.698367700071535*^9}, 
   3.69901416681021*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
yso8nbDua0bBqAEDb7u5s+25NABafFUtv+IHYHij8Ndu9zmQ9vrYrJMyClUz
7EWcXaP45sQO+obwPmytamjfdp6BEcpqbflPJchH5ToH6zKmcZ2kzjYXcgIT
5FU6zDbO4n6XRz+323AQ/fvfWaZcjoH6ohWyryV5iXXMuBPVr4tAZ22GiU47
C4n0QYZZzwC8+JIm1ru8jzHNqDAdsXI45uLc6x89jeTLbaEx+zpAfd0xN0+d
HlztwbU7nLKI0mmZq/P3CJJd1u77fh1lJ+VWvM+Uy6Bh6+aaSz9eL4F8++yr
xU1LcFLQhXb2+RAaDdGr//X24MazNhKdH1tBgu+k5OoLC/jgyoHvDeYMbPlr
TXX+LETgxlXRZzf3gKSHfIXyzDj8iA0+26wyis+HLnmwcXGSh9OYjmHMKThd
E6AbuasGmDU/dVUsOYkEp6qfu3umsC6gXuLB4SoMZc3o/HvOgPjL+2bM/g1g
4M0lK/+wUSQkEwLFz9NhqOYCbUJzEL9aZZ2vku7Hux5SWSt9SJTbaqSsGEIl
GRJhDkl6TND7T3EX/OpHQaGogrnmNnQOEDFJD1/CeY873Km/5jGz5nhHMScb
+Uh81ElahJOsqbJRY61qA5adY5jqFXaCHmlfyP6PjaypmGZXucZHvm5qyq58
UAx6pmY3hY/zEI1nik/lHOpDHQG3KEd1ftLx3jcFseOp0O+ttr75CZUMn00u
PfCmDCvSOR5uvipMHocmMY6vvZj0B/1sFP/Bai1lB471XITzWaG6v46TcEfm
06fSDRSSgz6jzD06hU2rjFIvlTDQ0ln+5WR3PdItVp8rXhrCJT/TVw58XGTr
37OXDL+bgdZBtyp/oUm0nZaIlrk3jebWbXfHdflJE+mjMR3bREm36yNb5E/2
gdBbJQvhDc3gPMRxqm4PB/HXekgnRGsJY8bWP0zWWYIyUs9VyYeb3Js4IJek
OY87aKGC6VfoaG6uSl0oG4GpTi/37F/l0OQ7RvMeqIPqp2t95ZvooNkSz8Wx
Ygzpn0wZmbvrUcmpzui63BgYH77sNv57CrXKLLRd+3iIVQuadWsP0GGn4biN
QT+FsC2q3BPIVYTJLDviz88+EL3h3nF7fh7MdmYrP0jkIRjjcX9DqGPQqC5U
dsG8HQecXO00AxbxuvFN6ReGHKR4jO0Dryx2QkTRp8ng4iQa3b75yNijH8rK
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
PdiI/wFswkE1
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-4.546759118215806, 
       6.425280090401486}, {-7.587817984629261, 5.887946225537114}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {194.4, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
    InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNuXu9vL9Wzd4DwRBxMbtZYyQk7Q/kqDhJGrCvf
rnSE8vUc+uS/XwjcawPlmzhYBb8QnP4RJm/psIHba/o0GUso387BZeJE3jRN
Mwi/wdEhYtce/qevzaHyLg56UWmn9M/A5N0cQtVr2esZTaHyng6lLLvn7d5r
CJX3dnixJEL9wyQdqLyfw6dyT5GIs1oQvkOAQ9FhmQOmghpQ9YEOr/g+NRlv
UYbwDwQ5PDy0Y52AOFSeIcThhoN8Kv9JRaj+UIelmzR1NjTJQ/WHOTwIihT9
FqcA1R/ucOm58XnrHUJQ/ZEOlttip+tclXQAAEc+VZw=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {0, 38.149359999619634`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {583.2, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
    InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMy/NMC/52a4gDhiTiY2wj/DK6C8VUcVp7q2dvA
NRXK13PYsWPNZIO5k6F8E4fAINk9C67C5C0dbP4sPlvXMg3Kt3NoOaqzU9sB
al6Do0PDy6l/HPVh5rs4rN/BItu4BKq/wc1hZTPHtzvGMHlPB0umx4bZhjB5
bwcVtclpFS4weT+Hgpf3FhYmQd3jEOAQ3nptfncs1P6GQAe5a+unrXkKVX8g
yOHHndI7kvIw94U43Py+NZdvMdR8h1CHZK+yiZ4JMPvCHBZlz/5cag7lHwh3
qBGYzdt0CGZ/pMOTLV+S1x+c7gAAGDpilA==
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"J\"", TraditionalForm]},
      AxesOrigin->{0, 1226.6204535159786`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {1240.6109690504054`, 1520.4212797389418`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {972., -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360., 256.86917696247167}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMSpR1fqqPnH4DwRByUzBbncp2E8VUcLjU46FrI
L4Dy9RwkLG6UHpCD8U0cZKqZqoKMYXxLB/uVfy6k/YLpt3N41Fr4V8geKt/g
6KA5r+mAuyhMvYvDH0Wt6VvnQtU3uDm8P3D7b91cmLynQ5z/2Q/3b8PkvR02
hE8J/JQLk/dzcCuxaFSQgfIdAhy0cjfoXfCB2Rfo8DmZjzE8Dso/EOTQHRJ7
XKUMpj/E4UrmPUOOCJj+UIeM8rfxr0Ng+sMcFrwwnc3ZDdMf7vB5N/vbxqkw
/ZEOv/XXbnJYtuAAAMT1asE=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"L\"", TraditionalForm]},
      AxesOrigin->{0, -2000.6582843476765`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {-2131.126363193614, -2006.8710500070065`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {1360.8000000000002, -134.8563179052976},
      ImageScaled[{0.5, 0.5}], {359.9999999999998, 256.86917696247167}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.6981403878263516`*^9, {3.6981404492263193`*^9, 3.6981404618556128`*^9}, 
   3.698140501155393*^9, 3.6981408832477894`*^9, 3.698151142408253*^9, 
   3.698152180785419*^9, 3.698161964034545*^9, 3.698367705593954*^9, 
   3.6983677479552813`*^9, 3.698367785697115*^9, 3.6984500660551476`*^9, 
   3.6990141978487587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm_two_overlaping_\
gaussians.pdf\>\"", ",", "g", ",", "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.699014181780555*^9, 3.6990141852496767`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm_two_\
overlaping_gaussians.pdf\"\>"], "Output",
 CellChangeTimes->{3.6990142034098225`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "funny", " ", "functions", " ", "to", " ", "generate", " ", "data"}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"G1", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "t"}], ",", 
         RowBox[{
          RowBox[{"10", 
           SuperscriptBox["t", "3"]}], "+", 
          RowBox[{"2", 
           SuperscriptBox["t", "2"]}], "-", 
          RowBox[{"10", "t"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"v", "+", 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinormalDistribution", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], "]"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G2", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"4", "Pi"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{"t", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"v", "+", 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinormalDistribution", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], "]"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G3", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"4", "Pi"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{"3", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], ",", 
         RowBox[{"3", "t"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"v", "+", 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinormalDistribution", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "]"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G4", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"10", "t"}], "+", "12"}], ",", 
         RowBox[{
          RowBox[{"10", 
           SuperscriptBox["t", "3"]}], "+", 
          RowBox[{"2", 
           SuperscriptBox["t", "2"]}], "-", 
          RowBox[{"10", "t"}], "+", "1"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"v", "+", 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinormalDistribution", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], "]"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G5", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"4", "Pi"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "t"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"-", "t"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"v", "+", 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinormalDistribution", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], "]"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G6", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"4", "Pi"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{"-", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], ",", 
         RowBox[{"2", "t"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"v", "+", 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinormalDistribution", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "]"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQHfus6vuS3teODPr2P0D0BOl45qVA+p9HMieIlnl6
RhxEv3HRVgXRh9y5py8H0nvm+c4E0YvUIi6B6CurJoDpiSErr4HoBSkxL0D0
JB1pmRVAep2uhzyINmphtQHRZ9Rmu4BoCeFlASD6svPlCBCt4ygeC6KlfFbE
gdVp8qWB6HtnErJBdI7L6noQPaWpugVEq2m9mw+iOZj+LQXRJQbJ20C0VvWK
fSD6mZX2cRD9Z1/ZdRDt1Tr7AYhOC775EETLPfb4CKL5t5z8Ala/bKHdeiB9
6Z6NPYhmehNXBaKb07uqQbTb5GUCEX2vHbVlAoRBNAB3QKrV
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"G1", "[", "0.1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "400"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"G4", "[", "0.1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "400"}], "}"}]}], "]"}]}], "}"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"G2", "[", "0.1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "500"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"G5", "[", "0.1", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "500"}], "}"}]}], "]"}]}], "}"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"G3", "[", "0.05", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "400"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"G6", "[", "0.05", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "400"}], "}"}]}], "]"}]}], "}"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.698141126376711*^9, 3.6981411328157625`*^9}, {
   3.6981412648472023`*^9, 3.6981412973782635`*^9}, {3.69814150872884*^9, 
   3.698141571310201*^9}, 3.6981418307975454`*^9, {3.698146321626603*^9, 
   3.698146418234026*^9}, {3.6981469803326097`*^9, 3.6981469905361376`*^9}, {
   3.6981475927208695`*^9, 3.6981476047503467`*^9}, {3.6981485879730816`*^9, 
   3.6981485893640146`*^9}, {3.6981486440250235`*^9, 3.698148644884427*^9}, {
   3.698149078406101*^9, 3.698149090095192*^9}, {3.698149146969412*^9, 
   3.6981491845354986`*^9}, {3.698149298895362*^9, 3.6981493022863398`*^9}, {
   3.6981498041101027`*^9, 3.698149809610664*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.0055000000000000005`], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.0055000000000000005`], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-10.004421921664935`, 
       22.07765949513745}, {-3.3938877598096413`, 5.727768092950014}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {193.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
fYcRDPLKjCM4kTGertt3Sgb9D5EOIIc=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJwVl3c81e8bxs1jj3PseTgcI1EiofG5RQmRERVFGuSbnVRGkoaRFCpJkp22
klU9j0JGRPaekb2y18/vr+f/+/Vc1/t9yZ7ysDzLxMDA8I+RgeH/780j2lqG
b0WxgMm6Ra1LIxJzOM2wIDtFRCge5+HesYyKd2oe2e06RoTz9jcd6VtBvlo6
Ov7S7UhSmrOierEU2TyfL7h6SQyvXPvEPf+uFMU1YVkjGSGooQlENUfLQke6
zdcbwXPEKUu6k6jaCrrX/ufZJiUxzNGrK54TM0i8PzN0X6hkjrheV0RXEaHi
su947ckiA9TNbza2mltE60mSNrazLPApUS8x1HcKmectF0TOMcHt4uXiKJ0Z
lNLhwbi6QwYsg+My3BqE4cKb3TMfooTwmZCvGodmyDhn17Rn/QwNetreu3NM
MEH6a6GDsf5L6FxFd5ZesgBw++w5VEjmxjO+Mc7sUvzgE3K5VFWdBE/708XK
Y8bQUUOu9UflGcjn642czdmzyIul9drViiYiTVL4H7PWGloMe8B8IJUNFJ53
k96/Z4SUlW795UISGJoEU49H9KOrU47vwhRJMLjs+Gq2sh8dDG8YuS20Rhxz
YgnL9eaD3Nj3X8g2NJA291ChP+eG9QaFsyn87FjEpCwUHoljz5LPcJuPBc7K
DThUy1KxTHTs6e5Htch2Kviv/NptAvcxZZWYCcLJ46GjgeY0kH31hPkJIysI
wZ7CIc1plMp068u2ByzQ4pnxvd6QA84PPmtcy2GGwzwllpm7Z9AhxzDKbxcG
mMgz5rdj4gazqeerObc5oWwvGU9wzBN//N83MbkzYeGu0AftiAKcaVcMTrxb
IYDRiDN30zyaYgmulrunhJND28ZNw5aIiiC/LhEeThj2nLZTmVsiWNO1R9db
xKCLHPgYS4rgn9lpTD1vaEB2EzJ81MAMPz8mWxSFMkG8UeS+owvSuPCn3EH1
MDqe3WJWM+0qDPYJfur5x/ix57WAnFx2HtjCxYE5+OZQ9x+ruyWEACxYqMx5
9nBC8/u8H5njUniuJIyVxvoH8czu62wa+YNaKfKXxH/xwnp2/THOUDlY07mw
qJj7D5UlJ3lu1pXGvS8imVQuNyAl2+VTdQuLqNinz8johhKW0LvUZneAAVLV
ygzUbVhBxetMrtg4CTaVvBhz28EJIwPvH1k5/CUCK/zOvUucI95ERLJUlNBh
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
2F0czubTf4gfFMb/Az964X8=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-12.608276887132554`, 
       12.709023875281655`}, {-11.206630735374903`, 11.100051300077828`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {580.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}], InsetBox[
     Graphics3DBox[{
       {RGBColor[0.3315753, 0.4561011, 0.6388182], Point3DBox[CompressedData["
1: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
yq9T+siBGjytfYrAvtMa4jvnEfwPXG6zIQ==
         "]]}, 
       {RGBColor[0.7926498, 0.5499369, 0.1278459], Point3DBox[CompressedData["
1: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
x2ahzlHSpyVIDxkpp0QsO89DOrazfZzUBMSLsldkM8TRH4s6YQsKEybyLDS2
GLqDjotyUPg1MaR40+WgdwYNbpp2u79M6MMmOScpirStaM1DZt7jyRDu1M4P
LX9DxSXCmTmbptURNfJkxIZ2Co4+mJ79mXMcvGUczVmNjNDH0xdeuXMRcYB6
4GeiEwn4C4MUgrzlEUcFR17IMBV6x7DhvB4Blyru54j4Jow2vNnnaKsxjGXg
7cc9lyj4w5Y5Vi9/ddTHWaVzikID4UfXMmrTvgF9qZDHdlAc6ej2agbOMUEH
s35U7O2A12TJcUn17Uj/cWuyQjETe5HPBDlQmvED3XJZX2cVJJX49Zw52xz+
YcPNYeY7AZcPbbrAya2I4tKfch5MpMJE9TET0uN1jua6DS7VaKML7TIuRa7T
cJYjez4viwR5Op+8ppr0kOpFvT6pHTm4t5bzw+2hdf1sl8EWTQOUwREaf8Wc
BuHyvrt/r3XiwwtnrZYNddAD4QbuY1YUaHK6euJBORFvg737H3hrI9fbj2+8
OvENj/eLFxlvZGCb55nk/DgOtPV2X3YsOxX/OfJm6mDIGPZPcJMa2DUPXaNL
eWIbyLjFU8b/tQYZjoZytqtwK6BzSV70Wv96/J3o+dA6iYFfLMafe2+mifDT
H//cytY5n9CtXrWNgl3MNnrJvVZDxEM6pl6JE7hkyfSz3DMKUJkZ9bXTckjW
7691tRQZy58znkyIngF9j8vJGYmGyPt1wbIhJwWXBHQmpd+fwdHL25tP8qih
t6mzj0ueU3DlVddCM6shaH0YGTZpb4Q2T1X46vxHxyUc7pY6j4ZA5u4/oS3Z
iiilTQ2rXWaAvdaZ465pdfDyxsZsRwVdtLk+tFbr3TdsNX7+9qVt87itJ+iD
W6EGkrW9GNddTMS/XwtqbabPgO+u7aV3f8kjj8Hi0bIWMvaZ9b9SsXEOxuQT
NlDDDZHcwuEAr/xp+LVmfMfz3ww2L6kpHOkXQjn/NY3uFa2DqgTuhRN88zjm
8JGrKYd4EL+erdrtrjzMz1bm/l8mAzcwn7zu+a6BvirGc/Go0/A00SjO9XM3
VJ16E8o2poi+XLSU+Ok3h6eFd69tH5+EdwE9Zfvm1/3oeSLn4HkCXAuJ+/rL
cw7EnHwuyybqIQ7uDauR7ONQvnvk1otFKrixm39WJO9ENcctTjXmz4Dj8zX3
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
         "]]}},
      Axes->True,
      AxesLabel->{None, None, None},
      BoxRatios->{1, 1, 0.4},
      FaceGridsStyle->Automatic,
      PlotRange->{{-3.0420969750938145`, 
        3.1072579759422423`}, {-3.094997796213643, 3.041110734247887}, 
        Automatic},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {Automatic, Automatic}},
      Ticks->{Automatic, Automatic, Automatic}], {967.5, -140.87228258248675},
      ImageScaled[{0.5, 0.5}], {360., 268.32815729997475},
     ContentSelectable->True]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.6981411333158054`*^9, {3.698141268113196*^9, 3.6981412984408784`*^9}, 
   3.6981414959203005`*^9, 3.6981415327827063`*^9, 3.698141571872395*^9, 
   3.698141832203951*^9, {3.6981463559652195`*^9, 3.6981464189528894`*^9}, {
   3.6981469921767173`*^9, 3.6981471170127687`*^9}, 3.698147606015665*^9, 
   3.6981485927861223`*^9, {3.69814863953028*^9, 3.698148680219863*^9}, 
   3.6981490919387655`*^9, {3.698149142594596*^9, 3.6981491478913436`*^9}, 
   3.698149187019807*^9, {3.698149270395335*^9, 3.698149303177061*^9}, 
   3.6981498113764343`*^9, 3.698151185815534*^9, 3.698152181035493*^9, 
   3.6981621743566923`*^9, {3.698162647185048*^9, 3.6981626565673103`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"G1", "[", "0.1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "500"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"G4", "[", "0.1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "500"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.698149888782612*^9, 3.6981499361727104`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X", ",", "Y"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"EnergyShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<\[CapitalEpsilon]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Blue"}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"KmeansShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<J\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", "Red"}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g4", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"GMMShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<L\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"g1", ",", "g2", ",", "g3", ",", "g4"}], "}"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
ABH7vRY=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-10.111623374338995`, 
       22.04944394172167}, {-3.4081426333621194`, 5.742750259683678}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {194.4, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
    InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQP5b0pd+DznOEB4Ig7Ssg389sKzoHwVhwmzejlE
v8+E8vUcVtSufHL04jQo38Th56Qv4iV+U6F8Swe9F8UOgjNg8nYOW+W7r+5a
NgnCb3B02Mm3M8U4dwJU3sWB99uJk2xaPVB5N4fgH6f28bhA+QyeDpfVDSe8
FuyGyns7TLE6Zhnh3wGV93N4KM2f/fF3E4TvEOBQMeX69RvljVD1gQ6fbm0V
3hYE5R8IclDZaMP61acOqj/EYXcU56ZVuRVQ/aEOQdcz2Rf/LYXqD3OI+MDm
YmJTDNUf7iDr93bTmm+5UP2RDpOZDzyWMsx1AAABMV43
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {0, 1810.2639330316122`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {583.2, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
    InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQOcC95f1Y887gDhiThYWDvsiI45CeWrONTYXLjz
eD6Mr+eQ+6H2wXqz01C+icMNY8YPKgbnoHxLh9vPmIu9ZM9D+XYOCmEBf06w
QfkNjg7d4h2uh7/B5F0c9sRwGW9dcQEq7+ZwvfT9qU+7LkLlPR3mzplataIG
ym/wdthqsFD40NTLUHk/hxXMgYmvtlyC8B0CHJxSjv/YLAGVbwh0OCr5Ovzb
DCj/QJBDEpP2eXm/K1D9IQ5WVudYVmyF8h1CHWrO6c7SZYXyG8IcZDzeX9v1
Gco/EO6Qq9exJEMPpj/SYQb7LofK1CsOAFNyZSw=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"J\"", TraditionalForm]},
      AxesOrigin->{0, 11479.346433696537`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {11954.373716309683`, 21454.919368572635`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {972., -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360., 256.86917696247167}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMWjgtrWNctPwDhiTjcSzAPWuCwAspXcTi2lZ3v
zwwYX8+h7l3e1iu3YHwTB43/abdYk1ZC+ZYO2+p97+3cBOPbORye9jj34hko
v8HRIW6R/OkA6VVQeReHRvWpc++ZQvkNbg4Jabx8K5Jg8p4OMhJzou9Phsl7
O/AZ+ry6egwm7+dwWLnhS95zKN8hwGHJRFP+twtg6gMdrPwD7Sayr4bwDwQ5
fLuVr+XHCeUzhDiEO3+5fV8LyncIdagy2CTxzh/Kbwhz2GTgUb3MGKY/3OGb
ZfIjdhuY/kiH8N3JDnbeqw8AAM3KaxU=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"L\"", TraditionalForm]},
      AxesOrigin->{0, -3007.763000691177},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {-3495.9650321659255`, -3031.0107164756882`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {1360.8000000000002, -134.8563179052976},
      ImageScaled[{0.5, 0.5}], {359.9999999999998, 256.86917696247167}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.699014285718759*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm_two_sinusoids.pdf\
\>\"", ",", "g", ",", "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.699014294579311*^9, 3.699014304220731*^9}, {
  3.699014591411607*^9, 3.6990145931615515`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm_two_\
sinusoids_gaussians.pdf\"\>"], "Output",
 CellChangeTimes->{3.6990143092681427`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"G2", "[", "0.1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "500"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"G5", "[", "0.1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "500"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.69815130142396*^9, 3.6981513142615447`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X", ",", "Y"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"EnergyShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<\[CapitalEpsilon]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", " ", "Blue"}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"KmeansShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<J\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", "Red"}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g4", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"GMMShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<L\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6981513489403267`*^9, 3.6981513535872965`*^9}, {
   3.6981516884883127`*^9, 3.6981517180467987`*^9}, {3.6981520701376743`*^9, 
   3.6981520745879045`*^9}, {3.6981622624229317`*^9, 
   3.6981622712302074`*^9}, {3.698162752808408*^9, 3.6981627538868713`*^9}, {
   3.698367893466989*^9, 3.6983679013868093`*^9}, 3.6990143247294636`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"g1", ",", "g2", ",", "g3", ",", "g4"}], "}"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.698151379571703*^9, 3.698151381697192*^9}, {
   3.6981521202772913`*^9, 3.698152122012001*^9}, {3.6981623427418795`*^9, 
   3.6981623464522157`*^9}, {3.698367991777214*^9, 3.6983679991688657`*^9}, 
   3.6990145413318663`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
iP4HI7T4NA==
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
e6TBN6FB0r5aGhxzSTe3S1Hx/wAJmvhj
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-12.625479270566089`, 
       12.489404044707651`}, {-11.158953047735881`, 11.250671080815954`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {194.4, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
    InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQN50+Qe7J/h6gDhiThos8zLnjvLDcpXcbC/Z/ZZ
RtMDytdzYNGt/hV/zRnKN3FI7kufJv7cEcq3dOi4ITNbwMIdyrdzaHq35Mjc
KVD9DY4OT9XTX1f22UPlXRxyLygbfFKyhcq7Obz8tubP6nIzqLyng0GOjv4m
C12ovLeDkeRDzUX7Yfb7OTg8CFBYsEAPwncIcFimwyzI2qcDVR/oEPDF777x
P6j8gSCHW+zuc6YkqUH1hzhcrD57k3evMVR/qANjzN2TaY+toPrDHPb4b729
p8wQqj/c4c76rUl8q7Wg+iMd4qSf9QecVHEAABU7Wiw=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {0, 49.16106470158867}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {583.2, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
    InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMijREs5onnHKA8B5UzKhX84TC+ikPjp/NFB9bB
+HoOZ5p7VUU4zkP5Jg6Glj8FhVadhfItHSIbT/78EwKTt3NY+M9ZcXkTVL7B
0SEvTW+xyRWYehcHz6Znp5/8PQOVd3OY8PbdgukFUD6Dp8OvwwI2L6tg+r0d
tpaUPf2fA3OPn8OZ/Ves6yZD+Q4BDs5nVSS6+C5A1Qc6WB3X32a+CmregSCH
E9Ym0f4HYPaHOPj4+5a8loDpD3UwYCrumhoF5TeEOTw5tOuS/zco/0C4w7mZ
56fkmcHsj3T41T05PnT+WQcAbmRm/g==
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"J\"", TraditionalForm]},
      AxesOrigin->{0, 14467.135942553781`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {14561.184598794935`, 16442.157723617984`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {972., -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360., 256.86917696247167}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMXDz8scslbcwDCE3Eouag9d1cFjK/icO2B/kqn
fBhfz8HCqfbE1GIY38TB+IhdTWIBjG/pYH9Dyp2jGsa3c2Bo4C974QvlNzg6
rMrjvO+ZBJN3cZh6vzAkxwkm7+ZwYNW6rS/h9nk6/PsYv9Q2Aibv7cAxZfJa
i36YvJ+Di/en97WpUL5DgENpDuP1v+0w9YEOPd877i3tgPIPBDlIB/4ykoT7
L8Sh+9vyXPtwmP5Qh5Uc//T3wN0b5pDV6hhiHATTH+4gXbzA/wvcfZEObE8+
LVdYvuYAAM+lbQk=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"L\"", TraditionalForm]},
      AxesOrigin->{0, -3614.693971783593},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {-3667.563781347594, -3617.2115817628314`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {1360.8000000000002, -134.8563179052976},
      ImageScaled[{0.5, 0.5}], {359.9999999999998, 256.86917696247167}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.6981513827592974`*^9, 3.6981514158696136`*^9, 3.6981514471277847`*^9, {
   3.698151737535475*^9, 3.6981517445984135`*^9}, 3.698151813286832*^9, 
   3.698152211057273*^9, 3.698162348358653*^9, 3.6981625187333236`*^9, 
   3.6981628057872677`*^9, 3.698367940103878*^9, 3.6983680002977595`*^9, 
   3.6990145592467923`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm_two_spirals.pdf\>\
\"", ",", "g", ",", "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6990145793726435`*^9, 3.6990145801227803`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm_two_\
spirals.pdf\"\>"], "Output",
 CellChangeTimes->{3.699014584661112*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"G3", "[", "0.05", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "500"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"G6", "[", "0.05", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "500"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.698151601152562*^9, 3.6981516120130663`*^9}, {
  3.698368014263983*^9, 3.698368014342065*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g17", "=", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X", ",", "Y"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g18", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"EnergyShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<\[CapitalEpsilon]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g19", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"KmeansShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<\[CapitalEpsilon]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g20", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"GMMShuffle", "[", 
          RowBox[{"X", ",", "Y", ",", "n"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<\[CapitalEpsilon]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.698151647459835*^9, 3.6981516505379176`*^9}, {
  3.6981517238881006`*^9, 3.6981517264509125`*^9}, {3.6981520782080517`*^9, 
  3.6981520816928525`*^9}, {3.6981628317749567`*^9, 3.698162839963241*^9}, {
  3.6981629021409926`*^9, 3.6981629061883187`*^9}, {3.698163032431771*^9, 
  3.698163070637803*^9}, {3.6983680293100305`*^9, 3.698368043602583*^9}, {
  3.6983680921314754`*^9, 3.698368129189048*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"g17", ",", "g18", ",", "g19", ",", "g20"}], "}"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6981516418182096`*^9, 3.698151644225213*^9}, {
  3.6981520850524263`*^9, 3.6981520868654647`*^9}, {3.698162884227028*^9, 
  3.698162889029975*^9}, {3.698368068708271*^9, 3.698368076814397*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     Graphics3DBox[{
       {RGBColor[0.3315753, 0.4561011, 0.6388182], Point3DBox[CompressedData["
1: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
JIYy9sH/ijpKMw==
         "]]}, 
       {RGBColor[0.7926498, 0.5499369, 0.1278459], Point3DBox[CompressedData["
1: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
53U=
         "]]}},
      AspectRatio->1,
      Axes->True,
      AxesLabel->{None, None, None},
      BoxRatios->{1, 1, 0.4},
      FaceGridsStyle->Automatic,
      PlotRange->{{-3.1248864415790276`, 
        3.071609361593361}, {-3.0807634079115056`, 3.1175013647760723`}, 
        Automatic},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {Automatic, Automatic}},
      Ticks->{Automatic, Automatic, Automatic}], {194.4, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167},
     ContentSelectable->True], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQP3XD59snlc7QDhiTgc8dfNTHKugPJVHA4tu8Gv
/6sEytdzSNQorXP6Wwblmzg42KzTVW4thfItHVYY2PSJqJZD+XYOz28y+Hz4
XQjhNzg6hH/7vJrZKBsq7+Lg46rrmGabDpV3c1gTe8zBrSYXKu/pwPCNmX3h
yhSovLdDROqUf5YHE6Dyfg4zPAUW8p1IgvAdAhy0I2Uy4rhg6gMdPnD5mPbE
QuUPBDkUt97abjQ/AKo/xKFH5YWGq2Y0VH+oQ/OtiEeePj5Q/WEOs88FvMtc
6AfVH+4QEymaUZ/lAdUf6aD6b6V9d4KZAwAPt1da
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {0, 446.202380129207}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {583.2, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
    InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNXumf9qA687QDhiTg8O3pxl5X4LShfxUFA26Wn
x+wOlK/ncMa72PZs3E0o38TBxDiph1sQpt/SgUUp5W5AMky/nYOYemaasB6U
3+DoEPPmtPXCNJh6F4e1iXN3tW+G8hvcHJbVe7r6BcPkPR22uBrO/vkHJu/t
YDv7lvfU2TB5P4dp6uk/GVih7nMIcNhXUBjxRBvKbwh0qLPfx1Z8C8o/EORg
LHVv5cVMmP4QBxe1zpLHUneh+kMdmtJf3DRfCbMvzEGJZ/7bLTDzD4Q72Lzf
E2PMAAuPSIe84trsmZ63HQAi/2Ft
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
      AxesOrigin->{0, 25787.989520026065`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {25979.20687563326, 29803.553987777108`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {972., -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360., 256.86917696247167}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQP2r+LehM9bfwDCE3GYr3FKvfUjjK/iUCbxkDtN
cwOUr+ewz+UP/01fGN/EwcrzUdm6NBjf0sH4/1LjOZUwvp2D2Y/Vx7omQ/kN
jg6ZNvVMexbA5F0ctAy+vlfbDpN3c7haeX530n2YvKeD+K3XtgJPYPLeDtp/
bjB8gfEZ/Bx+LQuYqf0NyncIcLibN9324j+Y+kCHbQzOp/1+Q/kHghymrrA5
qcS9Eao/xEHm+eP+hwJQvkOog/5tb7McIyi/Iczht5LnxxRTKP9AuINexJ6e
PEmY/kiHiBVzAxXdNh4AACaWb0o=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
      AxesOrigin->{0, -4028.423803922386},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {-4422.130151609039, -4047.1717252407975`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {1360.8000000000002, -134.8563179052976},
      ImageScaled[{0.5, 0.5}], {359.9999999999998, 256.86917696247167}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.698151672235588*^9, 3.6981519488262424`*^9, 3.698152231724284*^9, {
   3.6981628900769625`*^9, 3.698162923822281*^9}, 3.6981629795707903`*^9, 
   3.6981630904912667`*^9, 3.6983680817619658`*^9, 3.698368161072958*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"g1", ",", "g2", ",", "g3", ",", "g4"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"g5", ",", "g6", ",", "g7", ",", "g8"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"g9", ",", "g10", ",", "g11", ",", "g12"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"g13", ",", "g14", ",", "g15", ",", "g16"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"g17", ",", "g18", ",", "g19", ",", "g20"}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "900"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.69815197784151*^9, 3.698152035636592*^9}, {
  3.69815213102018*^9, 3.698152135458148*^9}, {3.6981523948634624`*^9, 
  3.698152431102669*^9}, {3.6981525775303726`*^9, 3.6981525982908134`*^9}, {
  3.6981631091516156`*^9, 3.6981631722077875`*^9}, {3.6983683481825805`*^9, 
  3.6983684033824477`*^9}, {3.698368461279888*^9, 3.6983684617492476`*^9}, {
  3.698368875622857*^9, 3.6983688935558605`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm.pdf\>\"", ",", 
   "g", ",", "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.698368471161295*^9, 3.6983684782300014`*^9}, 
   3.6983685237168646`*^9},
 NumberMarks->False],

Cell[BoxData["\<\"C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm.pdf\"\>\
"], "Output",
 CellChangeTimes->{3.698163216885011*^9, 3.6983684816782694`*^9, 
  3.698368525734771*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Arbitrary", " ", "Number", " ", "of", " ", "Clusters"}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Energy", " ", "Statistics", " ", "Function"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", 
     RowBox[{"A_", ",", "B_", ",", "\[Alpha]_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["n", "a"], "=", 
       RowBox[{"Length", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["n", "b"], "=", 
       RowBox[{"Length", "[", "B", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          SubscriptBox["n", "a"], 
          SubscriptBox["n", "b"]}]], 
        RowBox[{"Sum", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"A", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", 
             RowBox[{"B", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "\[Alpha]"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            SubscriptBox["n", "a"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            SubscriptBox["n", "b"]}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "g", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sn", "[", 
     RowBox[{"A_", ",", "\[Alpha]_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"A", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"s", "=", "0"}]}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "A", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"A", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", 
            RowBox[{"i", "+", "1"}]}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "A", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"m", "=", 
             RowBox[{"Length", "[", 
              RowBox[{"A", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"s", "=", 
             RowBox[{"s", "+", 
              RowBox[{
               FractionBox[
                RowBox[{"n", " ", "m"}], 
                RowBox[{"2", " ", "M"}]], 
               RowBox[{"(", " ", 
                RowBox[{
                 RowBox[{"2", 
                  RowBox[{"G", "[", 
                   RowBox[{
                    RowBox[{"A", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"A", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\[Alpha]"}], 
                   "]"}]}], "-", 
                 RowBox[{"G", "[", 
                  RowBox[{
                   RowBox[{"A", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                   RowBox[{"A", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\[Alpha]"}], "]"}], 
                 "-", 
                 RowBox[{"G", "[", 
                  RowBox[{
                   RowBox[{"A", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                   RowBox[{"A", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\[Alpha]"}], 
                  "]"}]}], " ", ")"}]}]}]}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "s", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"K", "-", 
     RowBox[{"means", " ", "objective", " ", "function"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jn", "[", "A_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"A", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"e", "=", "0"}]}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "A", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"m", "=", 
          RowBox[{"Mean", "[", 
           RowBox[{"A", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"e", "=", 
          RowBox[{"e", "+", 
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"Sum", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Norm", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"A", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "-", "m"}], "]"}], "2"], 
              ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"A", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], 
             "]"}]}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"e", "/", "M"}], "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"GMM", " ", "Log"}], "-", 
     RowBox[{"likelihood", " ", "function"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ln", "[", "A_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"A", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"e", "=", "0"}]}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "A", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Mu]", "=", 
          RowBox[{"Mean", "[", 
           RowBox[{"A", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"\[CapitalSigma]", "=", 
          RowBox[{"Covariance", "[", 
           RowBox[{"A", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"e", "=", 
          RowBox[{"e", "+", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"PDF", "[", 
               RowBox[{
                RowBox[{"MultinormalDistribution", "[", 
                 RowBox[{"\[Mu]", ",", "\[CapitalSigma]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"A", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"A", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"e", "/", "M"}], "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Mixing", " ", "data", " ", "from", " ", "different", " ", 
     RowBox[{"components", ".", " ", "A"}], " ", "is", " ", "the", " ", 
     "pooled", " ", 
     RowBox[{"sample", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Shuffle", "[", 
      RowBox[{"A_", ",", "n_"}], "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Let", " ", "K", " ", "be", " ", "the", " ", "number", " ", "of", " ", 
        "components", " ", "of", " ", 
        RowBox[{"A", ".", " ", "Let"}], " ", "N", " ", "be", " ", "the", " ", 
        "minimum", " ", "number", " ", "of", " ", "points", " ", "in", " ", 
        "each", " ", 
        RowBox[{"coponenent", ".", " ", "Make"}], " ", "sure", " ", "that", 
        " ", "N", " ", "is", " ", "larger", " ", "than", " ", "n", 
        RowBox[{"(", 
         RowBox[{"K", "-", "1"}], ")"}], " ", "or", " ", "this", " ", 
        "function", " ", "will", " ", 
        RowBox[{"crash", "."}]}], "  ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"m", "=", 
        RowBox[{"Length", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"B", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomSample", "[", 
           RowBox[{
            RowBox[{"A", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"A", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "-", 
             RowBox[{"n", 
              RowBox[{"(", 
               RowBox[{"m", "-", "1"}], ")"}]}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "m"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "m"}], " ", ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"B", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"j", "\[NotEqual]", "i"}], ",", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"B", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"RandomSample", "[", 
                   RowBox[{
                    RowBox[{"A", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "n"}], "]"}]}], 
                 "]"}], ",", 
                RowBox[{"B", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "B", "]"}], ";"}], "\[IndentingNewLine]", 
      ")"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6982401522330494`*^9, 3.6982401527490826`*^9}, {
   3.6984149235583253`*^9, 3.698415016239791*^9}, {3.698415073939983*^9, 
   3.698415317308653*^9}, {3.698415416460051*^9, 3.6984154462708817`*^9}, {
   3.698415606530724*^9, 3.6984156538530436`*^9}, {3.698415825928474*^9, 
   3.6984158372981143`*^9}, {3.6984158788902435`*^9, 3.698415880745954*^9}, {
   3.6984161145815167`*^9, 3.6984161192223463`*^9}, {3.698416378446167*^9, 
   3.698416487934445*^9}, {3.698416555198598*^9, 3.6984167031531754`*^9}, {
   3.6984172293227344`*^9, 3.698417258188385*^9}, {3.6984203528483143`*^9, 
   3.6984204818171883`*^9}, {3.698420523820706*^9, 3.698420622858409*^9}, {
   3.698420761363454*^9, 3.6984207830946636`*^9}, {3.6984210056753907`*^9, 
   3.698421071609005*^9}, 3.698421892770774*^9, {3.6984222889867496`*^9, 
   3.6984223822099495`*^9}, {3.6984224163972263`*^9, 3.698422454916802*^9}, {
   3.698422604026025*^9, 3.6984226098242826`*^9}, {3.698422690110401*^9, 
   3.6984227082109747`*^9}, {3.698422821302662*^9, 3.698422836964724*^9}, {
   3.698423077137829*^9, 3.6984230833636913`*^9}, {3.6984231904662704`*^9, 
   3.698423190513324*^9}, {3.698424902453756*^9, 3.6984249061516113`*^9}, {
   3.698425896259837*^9, 3.698425952138109*^9}, {3.6984259871511927`*^9, 
   3.698426047047813*^9}, {3.698430210753214*^9, 3.698430212050474*^9}, {
   3.698430263038265*^9, 3.6984303503360724`*^9}, {3.698444524491852*^9, 
   3.698444533868306*^9}, {3.698444581624029*^9, 3.6984446936798773`*^9}, {
   3.6984447590157847`*^9, 3.698444765624276*^9}, {3.6984448027351685`*^9, 
   3.698444818064773*^9}, {3.698444870470516*^9, 3.6984449112440157`*^9}, {
   3.698445154417511*^9, 3.6984452549084992`*^9}, {3.6984452907646103`*^9, 
   3.6984453306691437`*^9}, {3.698445403460709*^9, 3.698445453979539*^9}, {
   3.698445885116249*^9, 3.698445889085704*^9}, {3.6984459435668726`*^9, 
   3.698445954396111*^9}, {3.6984480985681105`*^9, 3.6984481194238424`*^9}, {
   3.6984935457375546`*^9, 3.6984935778036175`*^9}, {3.698493618743702*^9, 
   3.698493696079952*^9}, {3.698493734506312*^9, 3.698493886369246*^9}, 
   3.69849449817443*^9, 3.698494621674491*^9, {3.6984947016851025`*^9, 
   3.6984947749153285`*^9}, {3.6984948221182933`*^9, 
   3.6984948314317837`*^9}, {3.698494928344558*^9, 3.698494931892277*^9}, {
   3.698495416984277*^9, 3.6984954172658415`*^9}, {3.698495564522103*^9, 
   3.698495691303488*^9}, {3.698496078043687*^9, 3.6984960883887672`*^9}, {
   3.698496429466161*^9, 3.6984964326380844`*^9}, {3.698497237931264*^9, 
   3.6984973846169033`*^9}, {3.6984974652587194`*^9, 3.69849748583914*^9}, {
   3.698497669258625*^9, 3.6984977689199004`*^9}, {3.6984978403830285`*^9, 
   3.698497877616556*^9}, {3.6984979227397614`*^9, 3.6984980324228835`*^9}, {
   3.6984982329652524`*^9, 3.698498253605895*^9}, {3.698498971045264*^9, 
   3.698499003482034*^9}, {3.6984991631698775`*^9, 3.698499164920636*^9}, {
   3.698499352509124*^9, 3.6984993591718245`*^9}, {3.6984993940307517`*^9, 
   3.698499402703585*^9}, {3.6984994429046254`*^9, 3.6984994712969866`*^9}, {
   3.698499503826149*^9, 3.698499507760676*^9}, {3.6984999731206684`*^9, 
   3.698500091167261*^9}, {3.698500535638364*^9, 3.698500537513473*^9}, {
   3.698500852013871*^9, 3.698500895394034*^9}, 3.6985009855328217`*^9, {
   3.6985074664683714`*^9, 3.698507486998427*^9}, {3.698507956775996*^9, 
   3.698507964214284*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"MultinormalDistribution", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", "500"}], 
      "]"}], ",", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"MultinormalDistribution", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".5", ",", "0.1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.1", ",", ".5"}], "}"}]}], "}"}]}], "]"}], ",", "500"}],
       "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"MultinormalDistribution", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".5", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", ".5"}], "}"}]}], "}"}]}], "]"}], ",", "500"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6984161456880565`*^9, 3.6984161649003277`*^9}, {
   3.69842492283945*^9, 3.698424927574364*^9}, {3.6984448420177183`*^9, 
   3.698444852071041*^9}, {3.698444922597556*^9, 3.698444927185686*^9}, {
   3.698448464434144*^9, 3.6984485337515574`*^9}, {3.6984487297020016`*^9, 
   3.698448867674616*^9}, 3.698493936610139*^9, {3.698494045620757*^9, 
   3.698494051383879*^9}, 3.6984945281366725`*^9, {3.6984949391451297`*^9, 
   3.6984949523319244`*^9}, {3.698501311361367*^9, 3.698501381557578*^9}, {
   3.698501422239439*^9, 3.698501497448309*^9}, {3.6985015415306883`*^9, 
   3.6985015438750644`*^9}, {3.698501765052702*^9, 3.698501797087141*^9}, {
   3.6985075016427484`*^9, 3.698507505252493*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Sn", "[", 
          RowBox[{
           RowBox[{"Shuffle", "[", 
            RowBox[{"data", ",", "n"}], "]"}], ",", "1"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<\[CapitalEpsilon]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Jn", "[", 
          RowBox[{"Shuffle", "[", 
           RowBox[{"data", ",", "n"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<J\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g4", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Ln", "[", 
          RowBox[{"Shuffle", "[", 
           RowBox[{"data", ",", "n"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<L\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6985004751431527`*^9, 3.6985005133394103`*^9}, {
  3.698500543985814*^9, 3.698500558752966*^9}, {3.6985005918919554`*^9, 
  3.698500623034403*^9}, {3.6985007627956963`*^9, 3.698500766874565*^9}, {
  3.698500914836557*^9, 3.6985009944033985`*^9}, {3.6985010446500645`*^9, 
  3.698501044712349*^9}, {3.698501130490116*^9, 3.698501182902404*^9}, {
  3.6985017531948547`*^9, 3.6985017576642427`*^9}, {3.6985077893650694`*^9, 
  3.698507792407897*^9}, {3.699014629147002*^9, 3.699014650680195*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g1", ",", "g2", ",", "g3", ",", "g4"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.698500785812214*^9, 3.6985007909028645`*^9}, {
  3.698501068310977*^9, 3.698501081502452*^9}, {3.698501117436598*^9, 
  3.6985011256557474`*^9}, {3.698501568697379*^9, 3.6985015691661797`*^9}, {
  3.698502780417229*^9, 3.6985027807921553`*^9}, {3.699014637663124*^9, 
  3.699014638131915*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
2CUzdexeJh1deqLCTO1H8X+7gPgi
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJwVl/cjFI4bx40iSoVIVFJUlDLL7EkaooQyMxoIFfpUKokoiorITEVkJZkX
iR57ZZ4z7oy745yzzx5R374/PX/A8zyv1/stdcXNxIGLg4NjhpOD4/+ziCor
/neqF/5yvfJdjm6DA6QHjY8WelDvUWBjflo93g+89VHQrRXU1p9e4XDPgqHE
rsyb4bUQvvvO+QS9UhgxXb+rrpiBD/cJeI4Ry9Am8Nupp/foUPuwy4YyOwVr
33FBS2YbolXyj8u/c2A2o9qG790AuvscrlZZasdNdnYemj86Qfp7SGdsCQnc
hTQPGy6UQ/roMqfJhWmw/OFFbVSahIWz7KPPOCbA4/gVJRmxPuyoWhYw9ptB
JUm3tCApKnTwZDOTy+ox7nr2wBc3Mpx9JcH3IrkeHLYtbyiUoWA/42GJlm0r
0ue4o8zGhqD0ZKjKyBYqtgZIqvmQyGj2i8wfvWUU59K8Ni7urELH+u6AWdkk
OBm86U6+yAC4d2VkeGkk4UiPEiXgHhM42g9VJ6SxgHq7cKds0AyMkhkbis16
IbdwL1jLjIB3b2JJCLUFA9x2aKX5koAxXDT6/t0iqF8lK8xoMMD33f5Kl3MU
rEPX6QCtUVjJU+cYq+4DXZKyZ/i7Lnj74OTZTRpMuMkr4sF7tR/DxwWfaSi2
gK1vvri0KBn/g6Kww9FkNPI32IGMb0Dpdz701Xwav9emBzLXFSBf75zF9c4+
iEnTYhbKjsHrH5tYI2HTkDWiPTrwZxZNCkQ27hbJwAQaO7VxJANcrcUjKKHl
gHx0Q8ffcaCg4nF5FgbBlH3v8ekMCjxVUN+xcV835Dx7/1/l3j6cD5H+9Oj7
BPa/4jB/eJoNso+lx85sJaMGwSCd5t0BtT51Z3kOk8Cz7qmcgdoL3DkX/9N3
cgzqS9+7lmWwwPgaMUuSUAO2209ERAZkQ+32ghrudUzc79O/2GlGhK2GueNb
LlGgd1fafsHdFWgU9OBA0WI5+Kmo3/5lmoxe/j/ofvIMtKfJHjGMYaPbC21m
TkQFXEsqp05qdsCpq7rqdulsyMnPH/i+sw/SjhSZvCX3A/HiJp6rToPQHmlh
sEpwEkpcqwrG7o+AUaFJ+Zx0OXgsKPIwDg4A3NpoEHWajnu0GbPHOtj4XDNO
QlpiHDR9Mm6d2dOBe15YHezZkoXVd2ZyIid6wZz6MyxyegDpemfPT1dMoq9I
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
ZF99EtaXBmW7tPYC4+lWv5EtU9jhVZOWYjEA5d1amVIBZHhA9YnR8xjC8SSW
+66ISfimN8dwaSABq9bT5sAjJkzk7kqVHCkBkZ3jl7wSJ5FjTqdZPoWKQfPm
I+b9I9hbt99pWGYag12Ye7Liu6HzUadZmcjTf3ysKesmdyIhsy7Kvb4P1HXt
LMtvEOAxOUU2JpgAQ490+1t39MHrjj/Lt61oyNMvGB2yigFZ6zZuV7dcwEAl
x88fB0m4w1bnbYZtB9LEWz8l+I1A8/fgHzvF/uC56POZeT+Hcd6CMHG8YRHr
Zh4n9R5KxfOZ88FJt5vxMy340IEuN1j1w0w+MzUVpHa/VhShLGJT/aHVxQwm
ih/hWa1zKhuL7S0uSQoNwbO2xWaTXZ/BP/vB52m3byAZKW/EOjiJwR6WdLfD
dNztFxUiPTOMMxnadbJebIjMNtzkwVsMuaHJN99XT0HdZk/un2LzkL/j+G01
/nEwHdzp1FjSAOGuooqDd2nYGyvTXq7Vh07nVj46C5UBI0FuWMm8Bm8Inmu+
yN8Kgs13ng8U9INH1ce1c0psOKXIopFWjePVa/yNCf/4IrUSu+VWBQlW24Zs
iVWn/vuPil2r6ynoo3X3oxV3D5Tvo2klxjNg3wLH9lv3OI4e38WQufiyAcPX
CXByUGjwP/K27Go=
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
/wDK34Ui
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-3.0589186616262003`, 
       3.78748574578961}, {-3.1527856905843303`, 2.8505540211942044`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {194.4, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
    InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQN3hWcv+Ovl5QDhiThwWXm8Z0z1hPJVHJqazVoe
hLpD+XoOuTOmZV7ihPFNHPyCfO42LXKB8i0drt6Icgie7gzl2zmIPFFXnlhm
D+E3ODoELev85hrhCJV3cTgotiNjyUaYvJtD3+r0XVLrraHyng56GVcEPh+3
gsp7O/htalBksbeAyvs5mOn52X0Ut4HwHQIcdj2YOPHMTFOo+kCHiC2zPywv
MoTwDwQ5CEsLfv96Vh2qP8ThiZrNhaYnUHmHUIcnGa+eWKVqQfWHOUQ8XpXI
e0MHqj/cQe/AowcHzdWg+iMdxGZPu323TdEBALVMWwQ=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {0, 52.585865092965584`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {583.2, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
    InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMXle9esoh8ag/hiThozM7O182C8VUcZOp3Xri0
DsbXc/i8x/xi6wcY38Qh8oc7W/VuGN/SYTeHmlbKLxjfzmHO04DcpPRnEH6D
o4Pmj6CWSX9h8i4OnMdXnufnhcm7OVw9tyD1ESuUz+DpIL7PoGWtMkze22HV
dPG5Zcdg+v0cvF7OFN35Gsp3CHAwO5x71CoFpj7QQWhzcPAtpucQ/oEgB0XO
3TaZVTDzQxxSBLX6WrKhfIdQh48/DzZy/oLpD3NYcvJvvUoDlH8g3OFydcff
bw4w/ZEO/Tf2nXiw/Zk9ALmNaik=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"J\"", TraditionalForm]},
      AxesOrigin->{0, 0.6645435088140362},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {0.6671413534578453, 0.7190982463340296}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {972., -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360., 256.86917696247167}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMLXVZq+X1kOgDhiTiILztl/IqfGcpXcdgYcuWU
lCSMr+fAMKnc/a0BjG/isNFQetZRSxjf0uGk2+kN0b0wvp0D4x/FpywToPwG
RwfJsMiYqCiYvItDq2ri7dxYmLybQ3+/2bdLcHlPh8uMj9cVrIHJezssffLM
wq0bJu/nsFksttS/D8p3CHAQUXD7bFsNUx/oMGNFO9vEQij/QJDDgpsftxfM
h+kPcVC4LcIYvwmmP9RBcXvseoWFMP1hDvZRrg82zoXpD3e4pFW36vQ9mP5I
h2m3j8/rOcN8AADBD16M
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"L\"", TraditionalForm]},
      AxesOrigin->{0, -2.362026770931643},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {-2.483786899543113, -2.367824872294094}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {1360.8000000000002, -134.8563179052976},
      ImageScaled[{0.5, 0.5}], {359.9999999999998, 256.86917696247167}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.6985007914339275`*^9, {3.6985011040904226`*^9, 3.698501126468334*^9}, 
   3.6985012964848385`*^9, 3.698501729645298*^9, 3.6985019770818396`*^9, 
   3.698502781682537*^9, 3.698507680873329*^9, 3.698508014181897*^9, 
   3.6990150072503357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm_three_overlaping_\
gaussians.pdf\>\"", ",", "g", ",", "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.699015038933114*^9, 3.6990150442305675`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm_three_\
overlaping_gaussians.pdf\"\>"], "Output",
 CellChangeTimes->{3.6990150491839914`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Spiral", "[", 
   RowBox[{"\[Eta]_", ",", "a_", ",", "b_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t", " ", "=", " ", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", " ", "k", " ", "Pi"}]}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"v", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", " ", "t", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{"b", " ", "t", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"v", "=", 
     RowBox[{"v", "+", 
      RowBox[{"\[Eta]", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"MultinormalDistribution", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], "]"}]}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.6985024484913425`*^9, 3.6985024495851297`*^9}, {
  3.6985024846069613`*^9, 3.698502493498908*^9}, {3.6985025431068764`*^9, 
  3.6985025696999874`*^9}, {3.6985026490832634`*^9, 3.698502676716687*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Spiral", "[", 
        RowBox[{".2", ",", "1", ",", "1", ",", "2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "500"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Spiral", "[", 
        RowBox[{".25", ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", "2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "500"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Spiral", "[", 
        RowBox[{".3", ",", "1", ",", 
         RowBox[{"-", "1"}], ",", "2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "500"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.698502500444489*^9, 3.698502530345543*^9}, {
  3.6985025754083214`*^9, 3.69850263978047*^9}, {3.698502685539316*^9, 
  3.6985027660831757`*^9}, {3.6985028064633455`*^9, 3.698502808682518*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Sn", "[", 
          RowBox[{
           RowBox[{"Shuffle", "[", 
            RowBox[{"data", ",", "n"}], "]"}], ",", "1"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<\[CapitalEpsilon]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Jn", "[", 
          RowBox[{"Shuffle", "[", 
           RowBox[{"data", ",", "n"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<\[CapitalEpsilon]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g4", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Ln", "[", 
          RowBox[{"Shuffle", "[", 
           RowBox[{"data", ",", "n"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<\[CapitalEpsilon]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.698508069627179*^9, 3.698508117219471*^9, {3.699015060696063*^9, 
   3.699015063571519*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g1", ",", "g2", ",", "g3", ",", "g4"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.69850296616921*^9, 3.698502966247399*^9}, {
  3.699015077107632*^9, 3.6990150774982967`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
Bv4fWH4tig==
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
t6GXMYWBzrxCOMU2O7dQrI34H0/0L3Q=
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
7zr8KxpBx2bTHFwmGwgTe24RdoDf/wDShhGv
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-12.571895822269973`, 
       13.143777283992913`}, {-11.251064681795949`, 11.58133576270592}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {194.4, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
    InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMxawW6G54FOkB4Ig6xfO8lPaMCoHwVB50pa/eV
n4Tx9RxEXVySTz31gfJNHD77XszI7/SD8i0dYn7tqmjo8YLy7RwUPRVPy21y
hfAbHB0O31sUkLjUEyrv4hCw//n26b+g/AY3By7/eb/UnzpA5T0dQn5M887+
D9Pv7bBkUlT04SZnqLyfg1Jtx6Y5vLYQvkOAw8J9/2xilZyg6gMd5kyZoXL1
nxWEfyDI4VPH6zsuWRZQ/SEODxhzQh16oXyHUIeAHlX/xs9mUP1hDr4P1kaL
fzSB6g93kNn0Mf67lTpUf6QDQzfDzfA+MwcAox9clw==
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {0, 71.60159565571433}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {583.2, -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
    InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQOruCJmXN1t6QDhiTg8zg3r3rsQxldxyJL78XF2
Noyv55Byu2jv5p0wvonD+gkNCQw3YXxLB8GdW17yHYHx7Rz0C/2bPp6C8hsc
HVLY/yofTobJuzhMb9LtsroBk3dzMPfs87ryHSbv6RA7Q9RVpgwm7+1w+N89
ZpmjMHk/B+PiOzOWKFhB+A4BDi2TNvCuU4epD3Tgyfgmd98XKn8gyOHelUYv
aZh5DCEOsXtVJnGrw/SHOvx5cNdKkxnKbwhz4PjimsjqDNMf7nB2w1vfgC9Q
PkOkw2NJz8cXlls4AADSaloN
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
      AxesOrigin->{0, 24.540590164268306`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {24.655531125399545`, 26.95435034802431}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {972., -134.8563179052976}, 
     ImageScaled[{0.5, 0.5}], {360., 256.86917696247167}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQM5ycm5a3wlDkB4Ig4BB3x8t/jB+CoOlceX5FWH
wPh6DhMNc9fxwPkmDlcF3Rk3wfVbOqyLD08PDYXx7RzmXuK2fxwE5Tc4Opzd
cfTi5SSYvIuDdfiDkxHZMHk3BxcRu0UytjB5Twe551sfToyHyXs7xF5v2clf
DpP3c7hgqsj+1xnKdwhwmMm5YKpFJkx9oEPDJJbqczD9B4Ic/Gouz70Ftz/E
wbAh3P2XN0x/qEOX8A6VmHCY/jCH2I1LPQ/D3HMg3CFHnTe7GWY+Q6TD3CN/
+PcB/QsA0/lcOA==
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
      AxesOrigin->{0, -6.056849972585977},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {-6.116270922406184, -6.059679541625034}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {1360.8000000000002, -134.8563179052976},
      ImageScaled[{0.5, 0.5}], {359.9999999999998, 256.86917696247167}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.698502973759785*^9, 3.698508416041477*^9, 
  3.699015335358182*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm_three_spirals.pdf\
\>\"", ",", "g", ",", "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6985043724250755`*^9, 3.6985044022686825`*^9}, {
  3.6990150805978136`*^9, 3.6990150973808527`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\guifr\\\\Desktop\\\\energy_kmeans_gmm_three_\
spirals.pdf\"\>"], "Output",
 CellChangeTimes->{3.698504406394108*^9, 3.6990153473107653`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Testing", " ", "High", " ", "Dimensions"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dims", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", "70", ",", "10"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"k", "\[LessEqual]", 
       RowBox[{"Length", "[", "dims", "]"}]}], ",", 
      RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{"dims", "[", 
         RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"m", "=", "70"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "k", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"m1", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "d"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"m2", "=", "m1"}], ";", " ", 
       RowBox[{
        RowBox[{"m2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", "2"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"s1", "=", 
        RowBox[{"IdentityMatrix", "[", "d", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s2", "=", 
        RowBox[{".5", "*", 
         RowBox[{"IdentityMatrix", "[", "d", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"MultinormalDistribution", "[", 
             RowBox[{"m1", ",", "s1"}], "]"}], ",", "m"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"MultinormalDistribution", "[", 
             RowBox[{"m2", ",", "s2"}], "]"}], ",", "m"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"g", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"g", ",", 
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"n", ",", 
                RowBox[{"Sn", "[", 
                 RowBox[{
                  RowBox[{"Shuffle", "[", 
                   RowBox[{"data", ",", "n"}], "]"}], ",", "1"}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "0", ",", "30", ",", "2"}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<n\>\"", ",", "\"\<\[CapitalEpsilon]\>\""}], 
              "}"}]}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", 
               RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"g", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"g", ",", 
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"n", ",", 
                RowBox[{"Jn", "[", 
                 RowBox[{"Shuffle", "[", 
                  RowBox[{"data", ",", "n"}], "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "0", ",", "30", ",", "2"}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<n\>\"", ",", "\"\<J\>\""}], "}"}]}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Red", ",", 
               RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"g", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"g", ",", 
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"n", ",", 
                RowBox[{"Ln", "[", 
                 RowBox[{"Shuffle", "[", 
                  RowBox[{"data", ",", "n"}], "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "0", ",", "30", ",", "2"}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<n\>\"", ",", "\"\<L\>\""}], "}"}]}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Darker", "[", "Green", "]"}], ",", 
               RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], 
           "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQvWVS64LIvteOJucOrQDRbOLTt4JouakMO0D0tTzz
/SD6Qp4FmF709v8hED3nm/AREM0iJXYCRB98f+UKiFabk3AHRIenBTwC0caT
Wl6A6IayP69B9KQsqZ8guibbGEzP/3aCIQpIPzYTYwPRi3TceEF0SPEHARDd
NOezCIj+1mEmCaL3nK+XB9GXQ16AaZ5Pthog+p5eoj6IPiX82AJEP/CztgHR
TiIPnEC03RQIvVDdxB1EvzpwLQRE69yIjwfR+57uTgDR8ybrZIPoMtFqMB3l
UFQEol2jL5eAzclPaQTRM/ILwfR/of/CTUB6SWaqKIiuyO+64d//2nFqOt8d
EA0AXL60CA==
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "12", ",", "22", ",", "32", ",", "42", ",", "52", ",", "62"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.698512774166554*^9, 3.6985128111772847`*^9, {3.698512883255225*^9, 
   3.6985129120042577`*^9}, 3.69901537478345*^9, 3.6990154160764236`*^9}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{{3.69851252894787*^9, 3.6985125513673677`*^9}, 
   3.698512655720649*^9, 3.698512745325351*^9, 3.6985128111772847`*^9, {
   3.698512883255225*^9, 3.6985129120042577`*^9}, 3.699015374799073*^9, 
   3.6990154160920506`*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.69851252894787*^9, 3.6985125513673677`*^9}, 
   3.698512655720649*^9, 3.698512745325351*^9, 3.6985128111772847`*^9, {
   3.698512883255225*^9, 3.6985129120042577`*^9}, 3.699015374799073*^9, 
   3.699015417825118*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.69851252894787*^9, 3.6985125513673677`*^9}, 
   3.698512655720649*^9, 3.698512745325351*^9, 3.6985128111772847`*^9, {
   3.698512883255225*^9, 3.6985129120042577`*^9}, 3.699015374799073*^9, 
   3.6990154200134125`*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{{3.69851252894787*^9, 3.6985125513673677`*^9}, 
   3.698512655720649*^9, 3.698512745325351*^9, 3.6985128111772847`*^9, {
   3.698512883255225*^9, 3.6985129120042577`*^9}, 3.699015374799073*^9, 
   3.6990154233386154`*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{{3.69851252894787*^9, 3.6985125513673677`*^9}, 
   3.698512655720649*^9, 3.698512745325351*^9, 3.6985128111772847`*^9, {
   3.698512883255225*^9, 3.6985129120042577`*^9}, 3.699015374799073*^9, 
   3.6990154289804564`*^9}],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{{3.69851252894787*^9, 3.6985125513673677`*^9}, 
   3.698512655720649*^9, 3.698512745325351*^9, 3.6985128111772847`*^9, {
   3.698512883255225*^9, 3.6985129120042577`*^9}, 3.699015374799073*^9, 
   3.6990154369825745`*^9}],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{{3.69851252894787*^9, 3.6985125513673677`*^9}, 
   3.698512655720649*^9, 3.698512745325351*^9, 3.6985128111772847`*^9, {
   3.698512883255225*^9, 3.6985129120042577`*^9}, 3.699015374799073*^9, 
   3.699015448161826*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"[", 
        RowBox[{"i", ";;", 
         RowBox[{"i", "+", "2"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "21", ",", "3"}], "}"}]}], "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6985131804714346`*^9, 3.6985132486303096`*^9}, {
  3.698513313639517*^9, 3.698513351876541*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 32.45619356145343}, {2., 30.81945633391604}, {4., 
           26.25467206602131}, {6., 24.875414984274148`}, {8., 
           19.344841012998053`}, {10., 13.59127008795599}, {12., 
           13.1191008714119}, {14., 11.6512040142695}, {16., 
           10.81701892699819}, {18., 7.295894901366713}, {20., 
           4.975689140949621}, {22., 4.605152008173368}, {24., 
           3.909250679335399}, {26., 1.5555827669741933`}, {28., 
           1.4859606349326326`}, {30., 
           1.4889239089171862`}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {0, 32.45619356145343}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {193.5, -120.9801532977919}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 0.7750339846714486}, {2., 0.8622060336476148}, {4., 
           0.8412784155606912}, {6., 0.8913473542279429}, {8., 
           0.9797789368298461}, {10., 1.0540814924600015`}, {12., 
           1.0215262684763855`}, {14., 1.0570927891179138`}, {16., 
           1.1515218353861256`}, {18., 1.1831339493506368`}, {20., 
           1.129181100172766}, {22., 1.26427972315755}, {24., 
           1.260738440553518}, {26., 1.0969321991827092`}, {28., 
           1.2442496529204052`}, {30., 
           1.23869479880386}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"J\"", TraditionalForm]},
       AxesOrigin->{0, 0.7505716977471435},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {0.7750339846714486, 1.26427972315755}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {580.5, -120.9801532977919}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
          AbsoluteThickness[1.6], 
          PointBox[{{0., -2.505279217747344}, {2., -2.614458498100477}, {
           4., -2.6235464507016535`}, {6., -2.6369127156832053`}, {
           8., -2.721617024517297}, {10., -2.6673950513378584`}, {
           12., -2.7986103936485853`}, {14., -2.897747313691835}, {
           16., -2.8263533393723272`}, {18., -2.8510448992264683`}, {
           20., -3.007736382283691}, {22., -3.0350284655001567`}, {
           24., -2.860829770388935}, {26., -3.03682017932327}, {
           28., -2.9678654367238244`}, {
           30., -3.034231081098919}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"L\"", TraditionalForm]},
       AxesOrigin->{0, -2.4787021696685474`},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {-3.03682017932327, -2.505279217747344}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {967.5, -120.9801532977919}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}, {InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 17.851123440598766`}, {2., 16.325611568088124`}, {4.,
            13.766605586892073`}, {6., 11.87592377750046}, {8., 
           12.475670194810432`}, {10., 9.054066672300948}, {12., 
           8.6528943126267}, {14., 6.361607909760378}, {16., 
           6.298274147428074}, {18., 4.894351288766547}, {20., 
           4.0257696863930175`}, {22., 3.2033483902398996`}, {24., 
           2.4454401913375157`}, {26., 2.3862702171728234`}, {28., 
           2.387475446502986}, {30., 
           0.99989623671352}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {0, 17.851123440598766`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {193.5, -362.9404598933757}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 4.291809981053332}, {2., 4.426013043064405}, {4., 
           4.325159305708348}, {6., 4.404829001604259}, {8., 
           4.57947881481841}, {10., 4.503590390794029}, {12., 
           4.471410501558598}, {14., 4.630949936446239}, {16., 
           4.758246453945762}, {18., 4.804331731568797}, {20., 
           4.969409914589906}, {22., 4.626616842364774}, {24., 
           4.781908036792764}, {26., 4.796907551974614}, {28., 
           4.614391470603836}, {30., 
           4.551866186155944}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"J\"", TraditionalForm]},
       AxesOrigin->{0, 4.257929984376504},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {4.291809981053332, 4.969409914589906}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {580.5, -362.9404598933757}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
          AbsoluteThickness[1.6], 
          PointBox[{{0., -14.06764462254994}, {2., -14.225354311920059`}, {
           4., -14.217696161300548`}, {6., -14.381986816253628`}, {
           8., -14.511191830286643`}, {10., -14.616414332531173`}, {
           12., -14.236350836690846`}, {14., -14.434412446764615`}, {
           16., -14.814978623468662`}, {18., -14.54487762558608}, {
           20., -14.641151130777354`}, {22., -14.684632375488228`}, {
           24., -14.631688225887507`}, {26., -14.7849987412295}, {
           28., -14.489306002579294`}, {
           30., -14.87487388045323}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"L\"", TraditionalForm]},
       AxesOrigin->{0, -14.027283159654775`},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {-14.87487388045323, -14.06764462254994}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {967.5, -362.9404598933757}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 14.321792416214002`}, {2., 12.717057682556806`}, {4.,
            11.234649668681161`}, {6., 9.704074031110306}, {8., 
           8.993281863717911}, {10., 7.0357973417647335`}, {12., 
           6.505397494037977}, {14., 5.54097097781878}, {16., 
           5.930061021324519}, {18., 4.380774621235899}, {20., 
           3.77127219745631}, {22., 3.430728616931411}, {24., 
           2.4396471241069473`}, {26., 2.18358354393533}, {28., 
           1.3119317327397795`}, {30., 
           1.3088456317201236`}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {0, 14.321792416214002`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {193.5, -604.9007664889594}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 8.155020253194952}, {2., 8.282964857282934}, {4., 
           8.231806269018657}, {6., 8.38700502383821}, {8., 
           8.250176418670812}, {10., 8.443994397593574}, {12., 
           8.27152207898352}, {14., 8.306571560407441}, {16., 
           8.551490751568515}, {18., 8.288865245080489}, {20., 
           8.543886825594292}, {22., 8.570053794241199}, {24., 
           8.366623387782711}, {26., 8.542052422982676}, {28., 
           8.449306540795858}, {30., 
           8.55615532058334}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"J\"", TraditionalForm]},
       AxesOrigin->{0, 8.13426857614264},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {8.155020253194952, 8.570053794241199}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {580.5, -604.9007664889594}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
          AbsoluteThickness[1.6], 
          PointBox[{{0., -25.496969254793623`}, {2., -25.43754334320565}, {
           4., -25.618233105966926`}, {6., -25.545757530681154`}, {
           8., -25.62651422252928}, {10., -25.79648322134192}, {
           12., -26.085290222493033`}, {14., -25.97518412810393}, {
           16., -25.95158248290743}, {18., -26.004727172058296`}, {
           20., -26.213591274652618`}, {22., -26.002740506189905`}, {
           24., -25.95499538954066}, {26., -25.82638085088315}, {
           28., -25.855161470131275`}, {
           30., -26.09899723195225}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"L\"", TraditionalForm]},
       AxesOrigin->{0, -25.398740946633303`},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {-26.213591274652618`, -25.43754334320565}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {967.5, -604.9007664889594}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}, {InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 15.179793473484796`}, {2., 13.466401032628436`}, {4.,
            12.049910918718805`}, {6., 11.301230573108736`}, {8., 
           9.274135305938698}, {10., 8.206577203368997}, {12., 
           8.255689452736352}, {14., 6.0487655115015375`}, {16., 
           4.9308083520652595`}, {18., 4.848176968336697}, {20., 
           4.807141491510139}, {22., 3.0578282827438508`}, {24., 
           3.799618323216678}, {26., 2.661482001500346}, {28., 
           2.3885273820329567`}, {30., 
           1.895461020557958}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {0, 15.179793473484796`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {193.5, -846.8610730845432}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996204}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 11.825713895337856`}, {2., 11.94279552789964}, {4., 
           11.755289969566931`}, {6., 11.838003797494014`}, {8., 
           12.027073649776154`}, {10., 12.297907748729173`}, {12., 
           12.162841644608326`}, {14., 12.407420236404214`}, {16., 
           12.215186880362609`}, {18., 12.368503226798065`}, {20., 
           11.983605710109316`}, {22., 12.510501850798638`}, {24., 
           11.870071741730188`}, {26., 11.943100726901553`}, {28., 
           12.42164594013487}, {30., 
           12.378597631976628`}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"J\"", TraditionalForm]},
       AxesOrigin->{0, 11.717529375505347`},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {11.755289969566931`, 12.510501850798638`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {580.5, -846.8610730845432}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996204}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
          AbsoluteThickness[1.6], 
          PointBox[{{0., -35.318401622747636`}, {2., -35.32650319484492}, {
           4., -35.488340604049604`}, {6., -35.66381514455314}, {
           8., -35.74790974113596}, {10., -35.73428907036762}, {
           12., -35.789630363751584`}, {14., -35.80425893507086}, {
           16., -35.73438560879474}, {18., -35.482935298553855`}, {
           20., -36.274506762230864`}, {22., -35.71315828036409}, {
           24., -36.34606803696371}, {26., -36.33165915170645}, {
           28., -35.737230403292635`}, {
           30., -35.93966807860592}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"L\"", TraditionalForm]},
       AxesOrigin->{0, -35.26701830203684},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {-36.34606803696371, -35.318401622747636`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {967.5, -846.8610730845432}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996204}]}, {InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 14.728866456723246`}, {2., 13.1181847641964}, {4., 
           11.579608363907541`}, {6., 10.741858959338145`}, {8., 
           9.461098207667277}, {10., 8.490990089977304}, {12., 
           7.649328952221294}, {14., 6.103404332575364}, {16., 
           6.083771828509137}, {18., 5.028800044488497}, {20., 
           4.035081275905865}, {22., 3.276091085974966}, {24., 
           2.9942147769267513`}, {26., 2.613564645562334}, {28., 
           2.853403136904027}, {30., 
           1.9660593717011876`}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {0, 14.728866456723246`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {193.5, -1088.8213796801272}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996226}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 15.8580618994889}, {2., 15.961337956557749`}, {4., 
           16.060301882545225`}, {6., 15.771467507357878`}, {8., 
           16.051097998240024`}, {10., 16.210829816309012`}, {12., 
           16.06698761169822}, {14., 16.247303684086347`}, {16., 
           16.08763763864954}, {18., 16.352855417212524`}, {20., 
           16.202233462428968`}, {22., 15.836326267333067`}, {24., 
           16.42273238938211}, {26., 16.168790870908442`}, {28., 
           16.355747888208445`}, {30., 
           15.928457888562905`}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"J\"", TraditionalForm]},
       AxesOrigin->{0, 15.738904263256666`},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {15.771467507357878`, 16.42273238938211}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {580.5, -1088.8213796801272}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996226}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
          AbsoluteThickness[1.6], 
          PointBox[{{0., -43.94442436112696}, {2., -43.95115597593319}, {
           4., -44.20240926272954}, {6., -44.28656933853527}, {
           8., -44.40418122967241}, {10., -44.33466115383929}, {
           12., -44.65234502017175}, {14., -45.04918039006744}, {
           16., -44.464821853188305`}, {18., -44.53488370144392}, {
           20., -44.34320936555289}, {22., -44.70043478907703}, {
           24., -44.8669752542187}, {26., -44.32726302777311}, {
           28., -44.74752024611223}, {
           30., -44.64697249837188}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"L\"", TraditionalForm]},
       AxesOrigin->{0, -43.88918655967994},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {-45.04918039006744, -43.94442436112696}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {967.5, -1088.8213796801272}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996226}]}, {InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 16.900065209289927`}, {2., 14.795139371840097`}, {4.,
            13.285898065648977`}, {6., 11.916481962733833`}, {8., 
           10.451235451889385`}, {10., 9.599558025553506}, {12., 
           7.560743580341047}, {14., 7.7428962314567045`}, {16., 
           7.264763438982243}, {18., 5.525419615237341}, {20., 
           5.195644684024705}, {22., 3.892477243937038}, {24., 
           3.3618596371937626`}, {26., 2.9858121470449284`}, {28., 
           2.9486601585698757`}, {30., 
           2.065998870108241}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {0, 16.900065209289927`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {193.5, -1330.781686275711}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996238}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 18.949667867689804`}, {2., 18.889906870060123`}, {4.,
            19.040723930396936`}, {6., 18.974238136564903`}, {8., 
           19.16160489117774}, {10., 19.093740214076558`}, {12., 
           19.36777316536093}, {14., 19.363617078660027`}, {16., 
           19.561477132671175`}, {18., 19.418076713941485`}, {20., 
           19.543349992587395`}, {22., 19.530731053241684`}, {24., 
           19.341262644394842`}, {26., 19.681223642167097`}, {28., 
           19.474781980066652`}, {30., 
           19.312686401392053`}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"J\"", TraditionalForm]},
       AxesOrigin->{0, 18.850341031454775`},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {18.889906870060123`, 19.681223642167097`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {580.5, -1330.781686275711}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996238}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
          AbsoluteThickness[1.6], 
          PointBox[{{0., -49.40596275713432}, {2., -49.644757946818686`}, {
           4., -49.634498715592066`}, {6., -49.36344986833316}, {
           8., -49.406070002197836`}, {10., -49.86362401773574}, {
           12., -50.191557419043306`}, {14., -49.599533885452175`}, {
           16., -49.23929568062345}, {18., -48.46387744752767}, {
           20., -50.69207942240271}, {22., -49.564334088285065`}, {
           24., -49.72075745138245}, {26., -50.20275528471365}, {
           28., -50.17908854213852}, {
           30., -50.4607902187257}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"L\"", TraditionalForm]},
       AxesOrigin->{0, -48.352467348783925`},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {-50.69207942240271, -48.46387744752767}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {967.5, -1330.781686275711}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996238}]}, {InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 14.732302225628517`}, {2., 13.011686834905195`}, {4.,
            12.254376318095703`}, {6., 10.763135128880371`}, {8., 
           9.197396742207552}, {10., 8.21052702509705}, {12., 
           7.64238825735398}, {14., 6.869874463588732}, {16., 
           6.6236663269294604`}, {18., 4.895955876717739}, {20., 
           4.705656021012166}, {22., 4.0923439819215135`}, {24., 
           3.1621577965871106`}, {26., 2.913957067514219}, {28., 
           3.184113598580516}, {30., 
           2.826941579409028}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"\[CapitalEpsilon]\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {0, 14.732302225628517`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {193.5, -1572.741992871295}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996238}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
          PointBox[{{0., 23.599307102436523`}, {2., 23.90770742997434}, {4., 
           23.796985052756924`}, {6., 23.796844918103414`}, {8., 
           23.578180555220296`}, {10., 23.916289298892963`}, {12., 
           24.255470064839198`}, {14., 23.707698508569532`}, {16., 
           24.419350752305732`}, {18., 23.559773947889333`}, {20., 
           24.207655214762838`}, {22., 24.059664907289473`}, {24., 
           23.94691161823832}, {26., 23.350122569903778`}, {28., 
           23.767039384419085`}, {30., 
           24.1010342400796}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"J\"", TraditionalForm]},
       AxesOrigin->{0, 23.296661160783685`},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {23.350122569903778`, 24.419350752305732`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {580.5, -1572.741992871295}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996238}], InsetBox[
      GraphicsBox[{{}, {{}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], PointSize[Medium], 
          AbsoluteThickness[1.6], 
          PointBox[{{0., -54.16389558653698}, {2., -54.045224088778895`}, {
           4., -53.99564917664576}, {6., -54.47158985331534}, {
           8., -54.256726230013804`}, {10., -54.26823411220224}, {
           12., -54.71124713921409}, {14., -54.395835834630375`}, {
           16., -54.297520400070475`}, {18., -54.5705734995728}, {
           20., -54.924262121022934`}, {22., -55.046546736448256`}, {
           24., -53.86846361899657}, {26., -54.11078096436365}, {
           28., -53.53967723046624}, {
           30., -53.76122457039635}}]}, {}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"n\"", TraditionalForm], 
         FormBox["\"L\"", TraditionalForm]},
       AxesOrigin->{0, -53.46433375516714},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 30.}, {-55.046546736448256`, -53.53967723046624}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {967.5, -1572.741992871295}, 
      ImageScaled[{0.5, 0.5}], {360., 222.49223594996238}]}}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.699015490994465*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
QdXcvZ+H1XcV8Vj8B/62z8mpC/eOmkrCvTgU7LJlYTL2OtarmJcyXQglE5ij
HkoGGcbZQhU5Q6pts6JjHVR1pDCbBAVJif5mFTjhb45nQkR6dQTu7yLSs8lv
Mlr91Bj0KTQ0if+ngl8a0l/mSC892XPAsxu9dnXB41V3rXIUPJ5NfpOB5WjO
bX8fpCl5q81MXJtvNs+4phay1wHsxomP2rq1lqklMKIbEjZoqYYtXrOirTkJ
bs54znIbiluBpFhGZUJyec3jG3r6hnanl9/33vXD8m1EMdavFxGF2f1KIDLd
+1dFuY23pPqrM/hncW/N0c4+srMYzqko27HZdxbv4SiGmN5RXRUVPljBGGb/
lpYtvoEoRntrqasW8kEYXRUAT6SOgIObRJtEZDnw3Q/At4qJPQBNov15n+tG
7kNfAO/9DhQlUYFtzH+7UiRdKZKuFMkJ+HtXiiRztrEPP+5KkfieLmRvj+WZ
HgLKpCtpUneE05U0maCkyS7Hu/Sz8thCws/0jCf+sqt4IlueOh3e34onOwQd
ImNJsvtc1MrUAjzPtVmyq57SVU95Z6zqKRc6GqSvjxlrIwjaXekVfaRd6RVG
nIt6bYbz1/krAp2INx0EMTwUmyG/nRfzNDVz4wPRriRLV5JF7UIar+pnjVbO
RbybgzF38AMP8mbIb47Pu2ItXbGW6RdrQdEH8XZBnB0dDjCo/Rnym2N108jX
9Xbh+egM+a3VrhHI68nmgu6izoFn2zIjvo4ItkNimKzsCqp0cB0hset0PWup
XE9WwnVvEgIeHL084K0W11I5DzByUNM1V0LxnUF/ciTX/jJJytah2SJ+PMMe
x+sxN0YLEw5jWoOeXuWUVokUBHY+5RnVUSueq3KEOk5/ExPWcuZYcTgUX+yD
EZCbRKg0CiqhsjOaBC6XYvSKuyaAciNGP58H2h6jNspW9/PkYSV0ibe5uyEp
px7mujuOMDfieTfQirABuvtaeT8MwYA54yk6Vn8xdFjmMPbBcJEYkKG5khtp
kj4oMxHD2I1n7GfuTja5iM9nR5xetkNlHdb+mMyojfFsotSyP3MsVmbMZa4r
5vjCzM3l5xAU4lYFFDe5qJyCz3DamExcpoS9UccMtmpDSdmNOZntP8pAmRXD
hAUKNiZTkElab5Ss+wohm4vcFJSuGETQmcMEJ//mRig9A/lEOKhOLiWMdVcd
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
FAY0tSbStZs20nXv9/4/XcyZgg==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\guifr\\\\Desktop\\\\two_separate_gaussians_increasing_\
dimensions.pdf\>\"", ",", "a", ",", "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.698513354986513*^9, 3.69851338662834*^9}, {
  3.699015508287628*^9, 3.6990155433670454`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\guifr\\\\Desktop\\\\two_separate_gaussians_\
increasing_dimensions.pdf\"\>"], "Output",
 CellChangeTimes->{3.698513388516075*^9, 3.6990155470415754`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "j"}], ",", "1", ",", "0"}], "]"}], "-", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"H", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.6985940631523*^9, 3.6985941253516593`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["2", "3"], 
      RowBox[{"-", 
       FractionBox["1", "3"]}], 
      RowBox[{"-", 
       FractionBox["1", "3"]}]},
     {
      RowBox[{"-", 
       FractionBox["1", "3"]}], 
      FractionBox["2", "3"], 
      RowBox[{"-", 
       FractionBox["1", "3"]}]},
     {
      RowBox[{"-", 
       FractionBox["1", "3"]}], 
      RowBox[{"-", 
       FractionBox["1", "3"]}], 
      FractionBox["2", "3"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.698594108957176*^9, 3.698594125851292*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"H", ".", "H"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.698594205338702*^9, 3.69859421355832*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["2", "3"], 
      RowBox[{"-", 
       FractionBox["1", "3"]}], 
      RowBox[{"-", 
       FractionBox["1", "3"]}]},
     {
      RowBox[{"-", 
       FractionBox["1", "3"]}], 
      FractionBox["2", "3"], 
      RowBox[{"-", 
       FractionBox["1", "3"]}]},
     {
      RowBox[{"-", 
       FractionBox["1", "3"]}], 
      RowBox[{"-", 
       FractionBox["1", "3"]}], 
      FractionBox["2", "3"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.698594208292124*^9, 3.6985942138552246`*^9}}]
}, Open  ]]
},
WindowSize->{896, 725},
WindowMargins->{{86, Automatic}, {Automatic, 37}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 933, 22, 202, "Input"],
Cell[1494, 44, 11785, 286, 1240, "Input"],
Cell[13282, 332, 1632, 40, 50, "Input"],
Cell[14917, 374, 3093, 79, 145, "Input"],
Cell[CellGroupData[{
Cell[18035, 457, 721, 14, 30, "Input"],
Cell[18759, 473, 29047, 522, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47843, 1000, 316, 6, 30, "Input"],
Cell[48162, 1008, 182, 2, 30, "Output"]
}, Open  ]],
Cell[48359, 1013, 1133, 33, 50, "Input"],
Cell[49495, 1048, 2644, 73, 145, "Input"],
Cell[CellGroupData[{
Cell[52164, 1125, 503, 11, 30, "Input"],
Cell[52670, 1138, 29240, 526, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81947, 1669, 263, 5, 30, "Input"],
Cell[82213, 1676, 162, 2, 30, "Output"]
}, Open  ]],
Cell[82390, 1681, 8586, 232, 822, "Input"],
Cell[CellGroupData[{
Cell[91001, 1917, 2311, 56, 88, "Input"],
Cell[93315, 1975, 68446, 1153, 164, "Output"]
}, Open  ]],
Cell[161776, 3131, 522, 16, 50, "Input"],
Cell[162301, 3149, 2348, 69, 145, "Input"],
Cell[CellGroupData[{
Cell[164674, 3222, 257, 7, 30, "Input"],
Cell[164934, 3231, 28961, 521, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193932, 3757, 301, 6, 30, "Input"],
Cell[194236, 3765, 161, 2, 30, "Output"]
}, Open  ]],
Cell[194412, 3770, 521, 16, 50, "Input"],
Cell[194936, 3788, 2704, 74, 145, "Input"],
Cell[CellGroupData[{
Cell[197665, 3866, 505, 11, 30, "Input"],
Cell[198173, 3879, 29344, 528, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227554, 4412, 252, 5, 30, "Input"],
Cell[227809, 4419, 147, 2, 30, "Output"]
}, Open  ]],
Cell[227971, 4424, 573, 17, 50, "Input"],
Cell[228547, 4443, 2802, 75, 145, "Input"],
Cell[CellGroupData[{
Cell[231374, 4522, 449, 9, 30, "Input"],
Cell[231826, 4533, 38691, 676, 121, "Output"]
}, Open  ]],
Cell[270532, 5212, 1231, 27, 145, "Input"],
Cell[CellGroupData[{
Cell[271788, 5243, 289, 7, 30, "Input"],
Cell[272080, 5252, 184, 3, 30, "Output"]
}, Open  ]],
Cell[272279, 5258, 15592, 358, 1369, "Input"],
Cell[287874, 5618, 2174, 53, 107, "Input"],
Cell[290051, 5673, 2921, 79, 145, "Input"],
Cell[CellGroupData[{
Cell[292997, 5756, 545, 11, 30, "Input"],
Cell[293545, 5769, 39629, 699, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333211, 6473, 265, 5, 30, "Input"],
Cell[333479, 6480, 164, 2, 30, "Output"]
}, Open  ]],
Cell[333658, 6485, 1469, 39, 126, "Input"],
Cell[335130, 6526, 1186, 31, 107, "Input"],
Cell[336319, 6559, 2554, 75, 145, "Input"],
Cell[CellGroupData[{
Cell[338898, 6638, 345, 8, 30, "Input"],
Cell[339246, 6648, 39869, 702, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379152, 7355, 307, 6, 30, "Input"],
Cell[379462, 7363, 173, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379672, 7370, 5542, 141, 449, "Input"],
Cell[385217, 7513, 301, 7, 30, "Output"],
Cell[CellGroupData[{
Cell[385543, 7524, 268, 4, 22, "Print"],
Cell[385814, 7530, 266, 4, 22, "Print"],
Cell[386083, 7536, 268, 4, 22, "Print"],
Cell[386354, 7542, 268, 4, 22, "Print"],
Cell[386625, 7548, 268, 4, 22, "Print"],
Cell[386896, 7554, 268, 4, 22, "Print"],
Cell[387167, 7560, 266, 4, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[387482, 7570, 530, 14, 30, "Input"],
Cell[388015, 7586, 69663, 1323, 735, 45682, 928, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457715, 8914, 313, 6, 30, "Input"],
Cell[458031, 8922, 186, 2, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458254, 8929, 552, 16, 50, "Input"],
Cell[458809, 8947, 1046, 34, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[459892, 8986, 147, 3, 30, "Input"],
Cell[460042, 8991, 1048, 34, 84, "Output"]
}, Open  ]]
}
]
*)

