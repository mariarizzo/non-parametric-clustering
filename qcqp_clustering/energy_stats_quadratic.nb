(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    219857,       5018]
NotebookOptionsPosition[    216840,       4915]
NotebookOutlinePosition[    217188,       4930]
CellTagsIndexPosition[    217145,       4927]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Testing", " ", "Quadratic", " ", "Formulations"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.699612674753457*^9, 3.699612675071987*^9}, {
  3.699643106215663*^9, 3.699643122418132*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SubscriptBox["x", "i"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Phi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"X", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Phi", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Z", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"1", "/", "2"}], ",", "1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"L", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.69961271195367*^9, 3.699612763530087*^9}, {
  3.699612808041753*^9, 3.699612849081256*^9}, {3.699612883301683*^9, 
  3.6996129324889297`*^9}, {3.6996129630790167`*^9, 3.699613029316681*^9}, {
  3.699613102778222*^9, 3.6996131175513153`*^9}, {3.6996132145830603`*^9, 
  3.6996132197218523`*^9}, {3.6996133039147787`*^9, 3.699613313984345*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["x", "1"], 
      SubscriptBox["x", "2"], 
      SubscriptBox["x", "3"], 
      SubscriptBox["x", "4"], 
      SubscriptBox["x", "5"]},
     {
      SubscriptBox["x", "1"], 
      SubscriptBox["x", "2"], 
      SubscriptBox["x", "3"], 
      SubscriptBox["x", "4"], 
      SubscriptBox["x", "5"]},
     {
      SubscriptBox["x", "1"], 
      SubscriptBox["x", "2"], 
      SubscriptBox["x", "3"], 
      SubscriptBox["x", "4"], 
      SubscriptBox["x", "5"]},
     {
      SubscriptBox["x", "1"], 
      SubscriptBox["x", "2"], 
      SubscriptBox["x", "3"], 
      SubscriptBox["x", "4"], 
      SubscriptBox["x", "5"]},
     {
      SubscriptBox["x", "1"], 
      SubscriptBox["x", "2"], 
      SubscriptBox["x", "3"], 
      SubscriptBox["x", "4"], 
      SubscriptBox["x", "5"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.699612735280086*^9, 3.699612759834229*^9}, {
   3.699612829282387*^9, 3.6996128555304403`*^9}, {3.699612925123064*^9, 
   3.6996129329625874`*^9}, 3.6996130299867287`*^9, 3.69961322032355*^9, 
   3.699613316387228*^9, 3.6997821250619125`*^9, 3.6997828915163717`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"1", "0", "0"},
     {"0", "1", "0"},
     {"0", "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.699612735280086*^9, 3.699612759834229*^9}, {
   3.699612829282387*^9, 3.6996128555304403`*^9}, {3.699612925123064*^9, 
   3.6996129329625874`*^9}, 3.6996130299867287`*^9, 3.69961322032355*^9, 
   3.699613316387228*^9, 3.6997821250619125`*^9, 3.6997828915163717`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], "0", "0"},
     {"0", 
      FractionBox["1", "2"], "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.699612735280086*^9, 3.699612759834229*^9}, {
   3.699612829282387*^9, 3.6996128555304403`*^9}, {3.699612925123064*^9, 
   3.6996129329625874`*^9}, 3.6996130299867287`*^9, 3.69961322032355*^9, 
   3.699613316387228*^9, 3.6997821250619125`*^9, 3.6997828915163717`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"Phi", ".", "Z", ".", "L", ".", 
    RowBox[{"Transpose", "[", "Z", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"M", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.6996129518122873`*^9, 3.699612952486705*^9}, {
  3.699613042673382*^9, 3.699613052653473*^9}, {3.699613642238175*^9, 
  3.6996136534572277`*^9}, {3.699782127999747*^9, 3.6997821293748455`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "+", 
         SubscriptBox["x", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "+", 
         SubscriptBox["x", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "3"], "+", 
         SubscriptBox["x", "4"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "3"], "+", 
         SubscriptBox["x", "4"]}], ")"}]}], 
      SubscriptBox["x", "5"]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "+", 
         SubscriptBox["x", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "+", 
         SubscriptBox["x", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "3"], "+", 
         SubscriptBox["x", "4"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "3"], "+", 
         SubscriptBox["x", "4"]}], ")"}]}], 
      SubscriptBox["x", "5"]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "+", 
         SubscriptBox["x", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "+", 
         SubscriptBox["x", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "3"], "+", 
         SubscriptBox["x", "4"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "3"], "+", 
         SubscriptBox["x", "4"]}], ")"}]}], 
      SubscriptBox["x", "5"]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "+", 
         SubscriptBox["x", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "+", 
         SubscriptBox["x", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "3"], "+", 
         SubscriptBox["x", "4"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "3"], "+", 
         SubscriptBox["x", "4"]}], ")"}]}], 
      SubscriptBox["x", "5"]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "+", 
         SubscriptBox["x", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "+", 
         SubscriptBox["x", "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "3"], "+", 
         SubscriptBox["x", "4"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "3"], "+", 
         SubscriptBox["x", "4"]}], ")"}]}], 
      SubscriptBox["x", "5"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.699613048595049*^9, 3.699613053154882*^9}, 
   3.699613227743347*^9, 3.699613319245043*^9, 3.6996136539010572`*^9, 
   3.6997821298123827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Phi", "-", "M"}], ")"}], ".", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Phi", "-", "M"}], "]"}]}], "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"A", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.699613635678248*^9, 3.699613773432969*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "1"], "-", 
            SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["x", "3"], "-", 
            SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.699613682164501*^9, 3.6996137002476273`*^9}, {
   3.69961373321461*^9, 3.69961377399986*^9}, 3.6997821338628473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tr", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.699613805001286*^9, 3.699613814400558*^9}, {
  3.699613846893045*^9, 3.699613855319913*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["5", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "1"], "-", 
       SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "3"], "-", 
       SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.699613809611731*^9, 3.6996138148447647`*^9}, {
   3.699613848076159*^9, 3.6996138557883263`*^9}, 3.6996141071251297`*^9, 
   3.6997821364724817`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "1"], "-", 
        SubscriptBox["\[Mu]", "1"]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "2"], "-", 
        SubscriptBox["\[Mu]", "1"]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "3"], "-", 
        SubscriptBox["\[Mu]", "2"]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "4"], "-", 
        SubscriptBox["\[Mu]", "2"]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["x", "5"], "-", 
        SubscriptBox["\[Mu]", "3"]}], ")"}], "2"]}], ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Mu]", "1"], "\[Rule]", 
      RowBox[{
       RowBox[{"1", "/", "2"}], 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "1"], "+", 
         SubscriptBox["x", "2"]}], ")"}]}]}], ",", 
     RowBox[{
      SubscriptBox["\[Mu]", "2"], "\[Rule]", 
      RowBox[{
       RowBox[{"1", "/", "2"}], 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "3"], "+", 
         SubscriptBox["x", "4"]}], ")"}]}]}], ",", 
     RowBox[{
      SubscriptBox["\[Mu]", "3"], "\[Rule]", 
      SubscriptBox["x", "5"]}]}], "}"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.6996139230215397`*^9, 3.699614069497321*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "1"], "-", 
       SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "3"], "-", 
       SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.69961399042115*^9, {3.6996140446363163`*^9, 3.69961407073243*^9}, 
   3.699614104260923*^9, 3.699782139566576*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Transpose", "[", "Z", "]"}], ".", "Z"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.699614191358418*^9, 3.699614200945217*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "0", "0"},
     {"0", "2", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.699614197308866*^9, 3.69961420136465*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"K", "=", 
   RowBox[{"Phi", ".", 
    RowBox[{"Transpose", "[", "Phi", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"K", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.699614714546001*^9, 3.699614736339387*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}]},
     {
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}]},
     {
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}]},
     {
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}]},
     {
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}], 
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"], "+", 
       SubsuperscriptBox["x", "4", "2"], "+", 
       SubsuperscriptBox["x", "5", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.699614723723007*^9, 3.69961473677463*^9}, 
   3.6997821453015795`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Tr", "[", 
   RowBox[{
    RowBox[{"Phi", ".", 
     RowBox[{"Transpose", "[", "Phi", "]"}]}], "-", 
    RowBox[{"Phi", ".", "Z", ".", "L", ".", 
     RowBox[{"Transpose", "[", "Z", "]"}], ".", 
     RowBox[{"Transpose", "[", "Phi", "]"}]}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.699614785875985*^9, 3.699614806707529*^9}, {
  3.6996148485362463`*^9, 3.6996148515279827`*^9}, {3.6996149444171762`*^9, 
  3.6996149528019047`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["5", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "1"], "-", 
       SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "3"], "-", 
       SubscriptBox["x", "4"]}], ")"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.699614807710025*^9, 3.699614852037921*^9, 
  3.699614954359082*^9, 3.6997821485374193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Tr", "[", 
   RowBox[{"Phi", ".", "Z", ".", "L", ".", 
    RowBox[{"Transpose", "[", "Z", "]"}], ".", 
    RowBox[{"Transpose", "[", "Phi", "]"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.699615004326621*^9, 3.699615017770651*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["5", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "1"], "+", 
       SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "3"], "+", 
       SubscriptBox["x", "4"]}], ")"}], "2"], "+", 
    RowBox[{"2", " ", 
     SubsuperscriptBox["x", "5", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.699615011662427*^9, 3.699615018231102*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Tr", "[", 
   RowBox[{
    SuperscriptBox["L", 
     RowBox[{"1", "/", "2"}]], ".", 
    RowBox[{"Transpose", "[", "Z", "]"}], ".", 
    RowBox[{"Transpose", "[", "Phi", "]"}], ".", "Phi", ".", "Z", ".", 
    SuperscriptBox[
     SuperscriptBox["L", 
      RowBox[{"1", "/", "2"}]], "\[IndentingNewLine]"]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.6996148201093616`*^9, 3.699614858640267*^9}, {
  3.699615029905068*^9, 3.6996150591121073`*^9}, {3.699615266137425*^9, 
  3.699615349736452*^9}, {3.6996154236548367`*^9, 3.6996154398566313`*^9}, {
  3.699615509601317*^9, 3.6996156020130672`*^9}, {3.6997418263865566`*^9, 
  3.6997418345596247`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["5", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "1"], "+", 
       SubscriptBox["x", "2"]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "3"], "+", 
       SubscriptBox["x", "4"]}], ")"}], "2"], "+", 
    RowBox[{"2", " ", 
     SubsuperscriptBox["x", "5", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.699615350078759*^9, {3.6996154284221087`*^9, 3.699615440327053*^9}, 
   3.6996155145990963`*^9, {3.6996155542161303`*^9, 3.699615602432288*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Transpose", "[", "Phi", "]"}], ".", "Phi"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6997821599146366`*^9, 3.6997821623680706`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"5", " ", 
       SubsuperscriptBox["x", "1", "2"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "1"], " ", 
       SubscriptBox["x", "2"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "1"], " ", 
       SubscriptBox["x", "3"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "1"], " ", 
       SubscriptBox["x", "4"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "1"], " ", 
       SubscriptBox["x", "5"]}]},
     {
      RowBox[{"5", " ", 
       SubscriptBox["x", "1"], " ", 
       SubscriptBox["x", "2"]}], 
      RowBox[{"5", " ", 
       SubsuperscriptBox["x", "2", "2"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "2"], " ", 
       SubscriptBox["x", "3"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "2"], " ", 
       SubscriptBox["x", "4"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "2"], " ", 
       SubscriptBox["x", "5"]}]},
     {
      RowBox[{"5", " ", 
       SubscriptBox["x", "1"], " ", 
       SubscriptBox["x", "3"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "2"], " ", 
       SubscriptBox["x", "3"]}], 
      RowBox[{"5", " ", 
       SubsuperscriptBox["x", "3", "2"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "3"], " ", 
       SubscriptBox["x", "4"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "3"], " ", 
       SubscriptBox["x", "5"]}]},
     {
      RowBox[{"5", " ", 
       SubscriptBox["x", "1"], " ", 
       SubscriptBox["x", "4"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "2"], " ", 
       SubscriptBox["x", "4"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "3"], " ", 
       SubscriptBox["x", "4"]}], 
      RowBox[{"5", " ", 
       SubsuperscriptBox["x", "4", "2"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "4"], " ", 
       SubscriptBox["x", "5"]}]},
     {
      RowBox[{"5", " ", 
       SubscriptBox["x", "1"], " ", 
       SubscriptBox["x", "5"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "2"], " ", 
       SubscriptBox["x", "5"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "3"], " ", 
       SubscriptBox["x", "5"]}], 
      RowBox[{"5", " ", 
       SubscriptBox["x", "4"], " ", 
       SubscriptBox["x", "5"]}], 
      RowBox[{"5", " ", 
       SubsuperscriptBox["x", "5", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6997821578336287`*^9, 3.6997821627899556`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6997246969948683`*^9, 3.6997246991206055`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "x", ",", "y", ",", "L", ",", "Z", ",", "K", ",", "X", ",", "Phi", ",", 
    "G", ",", "H"}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Norm", "[", "x", "]"}], "+", 
    RowBox[{"Norm", "[", "y", "]"}], "-", 
    RowBox[{"Norm", "[", 
     RowBox[{"x", "-", "y"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrE", "[", 
    RowBox[{"Z_", ",", "K_", ",", "L_"}], "]"}], ":=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     SuperscriptBox["L", 
      RowBox[{"1", "/", "2"}]], ".", 
     RowBox[{"Transpose", "[", "Z", "]"}], ".", "K", ".", "Z", ".", 
     SuperscriptBox["L", 
      RowBox[{"1", "/", "2"}]]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShuffleZ", "[", 
    RowBox[{"n_", ",", "Z_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{
       RowBox[{"Length", "[", "Z", "]"}], "/", "2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Z1", "=", 
      RowBox[{"Z", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "m"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Z2", "=", 
      RowBox[{"Z", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"m", "+", "1"}], ";;"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"idx", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "m"}], "}"}], ",", "n"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "idx", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", 
         RowBox[{"idx", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"a", "=", 
         RowBox[{"Z1", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"b", "=", 
         RowBox[{"Z2", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Z1", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "=", "b"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Z2", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "=", "a"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Join", "[", 
       RowBox[{"Z1", ",", "Z2"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
    ")"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.69976075836788*^9, 3.6997607990574236`*^9}, {
  3.699761388402398*^9, 3.699761390418263*^9}, {3.6997817597842226`*^9, 
  3.699781778224128*^9}, {3.6997829413004427`*^9, 3.6997829668321867`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X1", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], "]"}], ",", "n"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X2", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", "n"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"X1", ",", "X2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ".", 
      RowBox[{"X", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "n"}], ",", 
      RowBox[{"1", "/", "n"}]}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.699725137573966*^9, 3.6997252133497286`*^9}, {
   3.6997252693729353`*^9, 3.6997252705761843`*^9}, {3.699725472326056*^9, 
   3.6997255267568827`*^9}, {3.6997257919369807`*^9, 3.699725791983827*^9}, {
   3.6997588287415905`*^9, 3.6997588296943817`*^9}, {3.6997599084924984`*^9, 
   3.699759908555298*^9}, {3.6997599781949587`*^9, 3.699759978304187*^9}, {
   3.6997600353404818`*^9, 3.699760052842352*^9}, {3.6997600940411944`*^9, 
   3.6997601044329185`*^9}, 3.6997601466221576`*^9, {3.699760364989147*^9, 
   3.699760365067275*^9}, {3.6997604015835304`*^9, 3.6997604053027925`*^9}, {
   3.6997604617489586`*^9, 3.699760476188237*^9}, {3.699760550665279*^9, 
   3.699760575167836*^9}, {3.6997614056384287`*^9, 3.69976140649767*^9}, {
   3.699761488109846*^9, 3.69976151161829*^9}, {3.6997818300801463`*^9, 
   3.699781914712339*^9}, {3.6997825478158245`*^9, 3.6997825761258354`*^9}, {
   3.6997826490166874`*^9, 3.6997826504611073`*^9}, {3.699782797485359*^9, 
   3.6997828201042104`*^9}, {3.6997830340152645`*^9, 3.699783059701598*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X1", ",", "X2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"PointSize", "[", ".01", "]"}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"TrE", "[", 
          RowBox[{
           RowBox[{"ShuffleZ", "[", 
            RowBox[{"i", ",", "Z"}], "]"}], ",", "G", ",", "L"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<Tr\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"TrE", "[", 
          RowBox[{
           RowBox[{"ShuffleZ", "[", 
            RowBox[{"i", ",", "Z"}], "]"}], ",", "H", ",", "L"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<Tr\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot1", "=", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g1", ",", "g2", ",", "g3"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6997597691395855`*^9, 3.699759796038081*^9}, {
  3.699759826672127*^9, 3.699759895319189*^9}, {3.699759959052348*^9, 
  3.699759959427141*^9}, {3.6997606172270746`*^9, 3.6997606180084476`*^9}, {
  3.6997606483962703`*^9, 3.699760666788856*^9}, {3.6997614371203904`*^9, 
  3.6997614389018135`*^9}, {3.6997615230254407`*^9, 3.699761671136506*^9}, {
  3.6997819669572706`*^9, 3.6997820062343545`*^9}, {3.6997820736683235`*^9, 
  3.6997820736844473`*^9}, {3.6997829979704494`*^9, 3.6997830271811223`*^9}, {
  3.6997830807654123`*^9, 3.6997830842657733`*^9}, {3.699783353784018*^9, 
  3.6997833657289653`*^9}, {3.699783494476612*^9, 3.69978361631831*^9}, {
  3.6997848822032595`*^9, 3.699784896332096*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.01], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
Zpa4kY//ARO39fg=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-3.0605949096819303`, 
       8.200416119816104}, {-4.718358804512119, 8.355844489524832}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {193.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNMc/cXnVbY5QDhiTj4LH+RuH7bTihfxeFtHEOQ
qzOMr+eQ9OSNVOLrHVC+icOv7+VaIa0wvqWDntWyRaxOML6dg9MUm9mf92yH
8BscHUz/9+azbYLyGVwcNB66pNVOhcm7OaTUhXo3ntkGlfd0OBYt7ddtA5P3
duhc/z+vNhgm7+fwPlyrL80LyncIcAhocskqnbMVqj7Q4bT7G9ETZ6H8A0EO
yy/Zhaw9CeUzhDhwaDTdU2+F8h1CHdY0zDlppwXTH+ZQ+DcjtPngFqj+cIew
laeeKn7ZDNUf6XDwiEybbeUWBwA21mOe
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"Tr\"", TraditionalForm]},
      AxesOrigin->{0, 5029.099297238225},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {5108.13241259226, 6688.7947196729965`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {580.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNZhv8+nki74QDhiTg4BH/XsXt3HcpXcQgovpo2
rxbG13OQuZxc4PzlGpRv4rBHruQwexaMb+ngqiIz0ywVxrdzMOacW7pp91UI
v8HRwWKSl9HuHVA+g4vDu+trpNXUYPJuDl82X46o/3cFKu/pUG1R8WfHWii/
wduhYkNBh9jhy1B5P4eE1dJ2HJZQeYcAh0x22bDtG6DyDYEOgZumvJ/fA+Uf
CHIoOmZ2v/rqJaj+EIdnCpYX/X9B+Q6hDhn7GXdMMoHyG8IcopL/TZVkgfIP
hDsYfE4X+9FzEao/0mF23k2riycuOgAAsO5l0g==
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"Tr\"", TraditionalForm]},
      AxesOrigin->{0, 17621.11319743104},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {17971.876367557037`, 24987.139770076996`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {967.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.699761610781393*^9, 3.6997616363962007`*^9}, 
   3.69976167251136*^9, 3.699783017816313*^9, {3.699783074025447*^9, 
   3.699783085375269*^9}, {3.6997833603058863`*^9, 3.699783366634947*^9}, 
   3.699783515168029*^9, {3.6997835719191127`*^9, 3.69978361745854*^9}, 
   3.699784910467782*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\guifr\\\\Desktop\\\\plot1.pdf\>\"", ",", "plot1", ",", 
   "\"\<PDF\>\""}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["\<\"C:\\\\Users\\\\guifr\\\\Desktop\\\\plot1.pdf\"\>"], "Output",
 CellChangeTimes->{3.699785152923031*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X1", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", "n"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X2", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}]}], "}"}]}], "]"}], ",", "n"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"X1", ",", "X2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"Z1", ",", "Z2"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ".", 
      RowBox[{"X", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "n"}], ",", 
      RowBox[{"1", "/", "n"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6997617396833057`*^9, 3.6997617606679125`*^9}, {
  3.6997834560938787`*^9, 3.6997834621257696`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X2", ",", "X1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"PointSize", "[", ".01", "]"}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"TrE", "[", 
          RowBox[{
           RowBox[{"ShuffleZ", "[", 
            RowBox[{"i", ",", "Z"}], "]"}], ",", "G", ",", "L"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<Tr\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"TrE", "[", 
          RowBox[{
           RowBox[{"ShuffleZ", "[", 
            RowBox[{"i", ",", "Z"}], "]"}], ",", "H", ",", "L"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<Tr\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot2", "=", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g1", ",", "g2", ",", "g3"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.699783478730266*^9, 3.699783631169788*^9, {3.6997836707587957`*^9, 
   3.699783672008974*^9}, {3.699784921609593*^9, 3.69978492364106*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwVl3dYzu8Xx5+nvfcwQhGhjKSh6HzISCWSJEWFEKVF0jaivkI0kQalpUEp
aZwPaWgP7b33eOqpnvav31/3dd3/3Nc59/u8z/sldcXmrAUThUKhUymU/5/l
jGFldv4CvJd/aPnqlXl8P/NwWrd5AkZNfJhSzLugHm9FVmv8gu0cGW3bomnw
+7+4uWdf2cmQpYBxy5tspEpGnv7gMid5YHH3DmnRtaSzdnqYfNIUOrzbYWfv
wUmW1xlwvFVsQy35yBuRf1hJTQGLgLLzXai+J11IeOsk7vC2/rt3XTVolVrc
C9KcgL5u/gNfqxkgd0iqJO7hCrZKvPsiaM5KBsg7GrddngTFuaRtSvzTePOY
wLUcB17y1gepoFftU/ja8VuIWwcnYf/0JT1lD4W8qeWwsdBqETmWdnqs3ZMC
3rsOql/IZyJ5VZpHaBYMiH+43oGHoMHsUqEqexQroaOeWEGvESTtN5I07O2G
Ocnc+td6FGLXHacK1/glsNfZdIufrR46X3bWxRyug8wHIiL6HkJkh/3ZuceX
KrEieM7xHc8kpm996WBSzUeOZL6GqD1cZFLb3dGsb9VgaVaZXaHSicP7bCOP
tVBIiku8Y6gJE6nuoaZuSzJwo4a7XZIThbBS+uJ7tKkVnSIv9PpsoCOTUofI
SW8qWctarr/3mDDZWLrDNFt1Gq26eES3FhXDjwO2x5MDOzD12MXKVBUW0nbn
ITfLk5Xgx1mjsLCTlfz2pV/L6ekUyGrO3Fft6cALrb4PuDYwE+ucKh+UJo9A
d+ncDY/mYrgZrGqSI8pMHFqzlse9Pw82ZEX9dj3NRzpWhV29mM9GtPm8XXdY
Zgo4zQLeKD6oA+Mjp8oPvaaDKNetDc1vZ4FF+kn4gQhB4s8NJfLFx1r0Ksm3
Lq2YwuCn1r6PnFtgX8urj42B/XjCYLS41DkWmPeZrB29NI+m5kMWjQFTeLEx
TKbsD5XcGGqg0GI+CZtW2l99S+8GLfaLmqUaSbBXRshevYcBftrWbOGaC8Dh
IGT0WHYBUCh49wGyC+ll4o8618yi6va5a2OZ3eA+d+/Z9sEeYH/Mcto0hINQ
DGYkjPpwEDSJAwXKWwrQ4GrKhpfxDFwI1y1v46eh3HTBJl+xbMyxOvbdtWkS
92vbcvmso0NQqs6FSAMq+aSqxvgKRzeuOaT7uudTObhvXVanurUgM1vX4sPW
aXhlG/Nmf24aasycjhVXnwCZrGzzbVUdaBi75VQTg4YRI0pc7HGVuEfy+GP9
n5NoPJASOvZemHwutKImHjEIPelWj8f+kUjeVfBTkJhHt6S14YvnWsHlS1IY
2d4MH7sFfvj8+QN65OZ1sywVqCrTqndjRy/8tNXymdg1i0PSyhkxudykyq/i
gljvHryZEsD3YMsUsmXHRdkQrfDrfAxfis4w6lsfjT25UgMWoZvLeLhpMNIg
xmmVTce3RqVKw9cHQPVHQt3G9mq4xlqWSvpTCOVbiRMnawbwYSE7Q/ryFCoV
Bf/8tYeTtF6z5+D5OS7yBGdZv/1MEfBMGIUW1LOQcSwfFEX46Dhzfc5eQoyb
bMm/amj8ZAXOVDio5JuxkU9pXCHWNiNoe8SyzZaVk9wlHV9/PK4N9tNP3I69
8Rto88d3LPCyEt219lEPJ3iJbcITuU1BC9jy87zBkQOzsCZS1bj2WwekD5/T
8zw1A9E1t8+wyi2DdPh3XbmvFHJ9glSWtxs7Uaj0fVXOC/B2Ze0F2otFfCRw
8DjvGhHSwWP0manwMq45mZKx/4cYqfeSZqHOMo1CnNVaQVPz4Fx12nwFuMms
oOfLkTo0jJLye/WGMgW7p+VTLgnR8czlrp8TQy3YaTt+/VDeFJ6T7l6nUfoP
ylgUP/pdZ+DI49iWO8EjeHiP8lv97jHYMVCkPi/LRuTtPPZsgnMR+D0NAsfP
NINg7vOBenE+Yv/j87E0xgA868tMuyMrTKrTC4Vox0eA0zM4LekVDWLW9F0o
tqVhdhe2BhYycF7F19vibDfmixu+a7fjIB51O6juzCxGkU/79I3Ps5K98uYp
p172g1rgwoUGPTokkF0Jj44Ngr/dg26tTXyExO5BzrauQXi0Uje/8IFKbKp1
Ov6MaQbD9KpzY/R4SNa/ImmNAnS4z2zz79uiFfydc1F6b8UARkVGkLxfDZ6N
tr7p1T4J7c5Bj/x4Wcg7kvl7uTMnQPLp8fU/7YWIc+SrID3ncci8vPtLY8Qw
7i6KVtKJGQGpoF9hY8eZiXzL0zHOGsM4x2rq3aU3C0Yz98O3XVjErufHlkRX
uMiBqWQH8f8qQU7ys515Qyf2ap3edFE1Ep7LnZjptBkDr6XYny57loBNNH7b
1ld0nHPUfxL7rhm4QvccpPGwkAytfaXzFuV45WuprO49FtK585l54gyFFHct
TkjawcAVHdcWezs6Jm69SmELX8GHyvx8QppUIr35WsVjS07yVpZXz3bOZsgP
r77qezwQ9247etFCiIY1L7rNO+nMhLGx0+JzpmaoijrtHqPZhEb/7PdlXZ0H
7QeMi3IZbRAQ+0DRu/YXJj3fpfnRagX3mUqYLeyjksBenHkunp00Z4m9pW0y
D1taXD6enlwEzlTJIW5ndrJX0WhtjcIKtqUoTDkXTqGGkJk+PTgFrWL8haCU
mYT7we4zKZNg2++4JT+EhNyYpMIEsg3Fpa6l5OxgI7PuBx7U9BcgLanZO94b
5YPgEd/z/tte42npOxddAgfx2qvycJEzFHJ3Q6X0U/dUsHNZCIpzZCcYZr+l
hA9n43H/0dbvImXAt96z+T/jaWw1NcgcN1719xWvWEHZeLhVpnmtcuMQttkL
DjywK0OJKG2j8NxhpC7clg0vG0RtlyKfVPF2dE19mV/6vBe0WarKjxcxYOvj
bamTPexESsTpNToUbuKPxWTM0Zc0vK9uue9YJ4U8/jzUbyilGMmi/ndJ5Bz2
vCswDMmpx5L8mFiWh8yrdWVRrFsr8ErUxtRP7N04xO9l49y9Aklig4/u7auB
7C85Jlx3i2HydIpZvW8v2uj+MwqJ+I6t3w6FjEZNQ6RN+4SwZhc81VSjieTR
cMbq5pe7YvNY2Gx+lqreDR0piS7eKougseeNeZTNJC452rlpUXgJc/Hv7uyP
+7BJojxui2ceNH7Zqi1dOILBuhq9LJd6sKKrukc2i0renSY6uiVEyQbhz9ru
WlRSOFfv3EazHPQset1ZMzSJJqSPJyV0AeNMRradv89OuPYMs9BlJyB+c+MR
45es5M/CF/QwozoQv+ON17gXwIM1RuNzLgPzVeKYX3hPY5oLYfuWMgL6uplW
Iz+o5JCR1PJjljHYEqoUPGjKSSYOqRqnKHKSt1XtzmswDcD4zeTI/rXjsF6c
ntKewUmkml9XnWLOQpu0ZcbICgc5peRXfdF4CHft2fvRtXYenVuWYJbCgID7
X3rTupkIsYfbr5z8/g++gv4Q94E28Bt2GpweYCZYAsTcJyOqMM3waw+ZN43m
y9/qZbdyk42Z+vpFAx0oqdJw5e+eCoyxTojdYNQIL3aePaDxuRk+r5qAvkoB
mtkmz4l7deHfzuMWPe4s5OJOTq7rsWzk+nyH32+4K6FDKMg2l4WZ1AqoipsS
68GN1j84tIwnke/OG8zuGUGOda2K0SN8hF3UucT2832YIk5/En5pAnm31jol
DdFg+g1/9/R/M/hZyTAx5Wgd/G2vvUzqUgnWDTlM7wwH8MObzbZBLjR86vtN
QtBkGpsHY1MO6XOS+6xdAiUPdeKGGuW1CzcnkS7umDCS3oO7HJSrWbp4yCoL
0rXKpgX7WJ7tUvWQIHIH3dN3/evFvNt3zggIsJEPPbefmjSsgB9ZmmnqSV9R
nmsy19WNiQgt9agMcmBAjZQhC3xtBwfKyoamzBFwO2MibO64jEFzvzvDxARJ
js1Kp7SX5+Gg4mP1sJowcE+6IHgtMw1/eQcsXiyfwwrWpdkHF4uh0kdnPnk1
VxrdOVnl5d6B5w9Z5V5K4SSJ3eb+Xsz9sN48LVAugIVovlBnrqfZhRKeg6lP
EsVInXppZSvfRZR+qRB7mrUHPzVtLKGmLaDWTw/Vz52sZLFFScmxqwy48/aF
SfllJuLpLbewsMNfsb3m2h2Psx7Y9JllyHQPA4W229jVRNJxvcM7jb1RyZh+
xXfE3Y+LVD/JGd5f/BvO15/3qBOkA0+U/Q7lI+PQVmosFZyTgWKpoVKs/w3i
pZltmrHZjVD1QzbQ+b9yNG0Nn1L7OYPGPzqTElnGMVOx5TDXWUFyV3oRwefU
j9l41jh6Ex8pEmRbzsHLTkT1Lyr3b6YQnXN1YtHFs5A7klxZfn8GVd6+lIvZ
zUqGB+jhtaB6DBlojHDf0YMjm8qoB1bzzwbVAtlKvTac/7239RgXhTy67eLM
lQs9uDR+m//Vz14Q9qTQlrZxEILxW+0O+QkQg/6zVTk5tRBRWrE+h70RxNSf
Zv8+wELqbqNXJbbRUEOezZbRMIFhus9vXfH8BvknVFTOFvehWVLtv5zzY3jt
R4XeYYUl2BCgeNP2TB+Oun0bsd85gUoe/4Ipxat55BAh+UloDAa/aS5fLB+F
yyOiCgTO4J7I7X3vmObR6n1gzl4eOnjnOvKul2Ei3I+c847/WYz33rr828HR
AC9MKoN0V/sRwU2zGt8lRJjGafc3BwwBbwi/6I2JVGB981D7QFw3Sm20S04I
Z8Ag/f4RSVY6un3YYHHRdALJc2qVN8/WY/lXaX8yjJ+86XRJNEO5GwS+6fx+
XjQJwVdltcIjhqFx9JFEZYAwcehB2JueAyu49+kaasY4N6mWHmY6pV2IvHv7
7V0vT8OudAOrOKd+YBhl91b+HcMnrkuT/u5fcdGS9wgv+1cMbane0N+zgMJH
lKxsbBm4Xs7rwFW3Ucx8X224RkuUNPzddlTt0DQ+yPUbe1PERnJmOmyRHs9G
1bkGveHXkxA6bPmCqraIpttOtt/M5SNOD1t2aAW2QOi4ZNm/vl4Uver5jK7/
CyS0wxvXHelDyuYox2IzOshEqnqu82Ihij82iZac/QaLHwIrndYyk+FE2oDc
rwL02CF3dOdAPVyICtBSqJrH73kddvRRQeJb2nNO2asdGKSSdSv5BAeRMmo2
NekSCwc0dXdYGeTBLmRWdRqkg3RZVgevIhtxfvTpxM519VhALwnTkR9EelNr
Q0VoB/xs0iN4P3AR55m3xlRMjGNIW0pM32saHi+PW/vz9j9w9X8xU2HXCD01
2JBq0goU5/C5ORZ+8oSf0EBe7Rh4Bv1tSdYcBqOHSje+VEzB2gnlbIX3PSDq
nBHi9PYnLk1FBTbUj0PM8FHd7is0cK573U+/NwWDtxU+NEVNwCFO3860K9P4
d92Wj5EXuqFt06fdz0vpYNa3We6kxwQKaSwoFD1vWL2fvJeoQsdTrhG+5IFS
1LtUuNvArRqru0X6z+T0YVlttDTcbEX1n+JxNPcJ6LnvQThfnYFyl89h7NVj
sE++UChbc5V/+liPjFvPoq1FX+2m/GmQZ0RJ9FczE8j36pB7xzRYm8rLRlhP
Qu4++QMn3k9iVHTohfNiq/ty9MeNAC0aSvxaVktPohCFHsRd2iovLYnF6C1+
FiSV7dxO/XepAXYfu8FmtnMFPC5KuyS50nCHr9NYuNwgPKA6T/BGMpNUZZZm
p2IR8tH+rEaniTlkdw7Dh/+4yKGeL6dev2MiXWTk9ppm8JISfAJPXlnS8Ohu
lriICmEyyexkDkvPMvCdCvWimraBco/bB2/+Vd1lnutICGzB5GQPlUq1LvTn
4dZWNZ4ClzXnwF1rCniWFSYNSxtRxCLyq8HXOMybKh9usuclAxoVHDpnm8Cp
TCiu3L0X5Jpj23xWfVfqa63L9xI2Iu6f73LjfD82vurwMJhtRq7b0l2CMssY
ky3LKmXJS2b7J1Y9kOiG6sOydb05Y9gh+VL6oc8opHf4zJzVXMSc7YqxpOIi
ZObcOZvKGISt74Wtn7b14D2rX1lV7Hzk2RNG16ORjdzr+33IT3YCc0ztMvwv
dWHlmJb2gwsMGLVozzS0WcZ7j4dKwndTSbWfLxzFOX/CYqpak0PdODbESCWk
u9eiDPOJuakzY7jU30r9PvIb74VTR3fWc5Jt/13oihWdxiNbVGRcN85A3MfX
k/TPw/CV7nJY3kCA4PKYrlY174aclJzY8GeDkJYQ6UVxuIMjYjVqImmrvJ9/
0PimSwPuNqAIjBcxsPr5xAmu7ZPoOLtkflmEQkRTuKjzlZMQn3zHSbG6F1Wi
TcpvFJTipsvXU6CISh5dIllJfQpZtb7AvXVnEyrul7o/kV8Nm12U/8QEDKKY
VZn/j9wBKFc+OSY+swzCrmUuz0LH0G32nNKnsVKYG2HmvPFzGAopTg3qkstw
0Vt/2mPnJLI5c7gfjOzB/wQTtsv8YCLsou1kr5cswSWHTd6P53/gY7FLSyLN
K3C5XuzA1CovJoxsNRscFSAfSErMXZPjIkM4JPKtmeeB21hT5tF8LEavZ47/
289OCOdzvV0UZyZdS9+YHQ/Jhf5JPTvbzjGU/HKq5FDYP3DasLvF0WkIR78I
/c3tGAV3cNy93pmF9OWdPR/axACWWzHC0Z3LyHd/t+DptRlwrx/f1MrW4ZN+
93G+3ayEXJpu9JDrCCotpcukFRXBnRL2d/YfelGx5sc5ebkWGPVffktiD06a
KlAJWQoRUXp5/ndpG/LVybqK/xqET7mbHI6qTEASz/qWt5+phELxutI/Okzk
AvePf6xendDtExKTMsNKnL45G+ppxEQM6TbGxWpNg+a1xjfvK6sxwYb5eHgP
Dbv697SYzjKwLS94SuhDId7/+3R9cRCVlH7Tdd8jLRPC+7jWfhZbxpXywF1S
BRRCoZxenFBXgdzBHqfr2cexUHDfwIkLg8BbJpWyZagNk6WiQuIeNGNi/rM/
IVu4icOeYNj2lJvgeGP8S5neAKXWduECp6qx7Yl9zqQIK2kUb1MXP8JM1LGt
tbzr0QBzOvs2pL9hgOfv3B2NoqOQeDh0ai5rGmSUfv+VNJxD0UgZgyqvRXBi
DSz8pUbDz4meOUVmbKSzc+IT98vj4KpcppHBWMBfJ3W+WSfTsTdNNs5wTIAU
bmnilvg1DjWjRz5FnuEgNg23U+a/9YOXzs9XefXj2NESoe9nQMOAjxoO6Veb
cP8V+Tqf4S7I7VNi2eYvQDREzNCCSyZRHDq3+33Ihd6AfoZUWiueTnzN7RrK
TIr59A+LdtBQ2cSx8u50F9hf0pnKtyTRPFnxvdZHVjK2tefuzpVl2DtQw6rV
xkXecjcMb4tpgMW9/r1TXZO4GFzSfZajBKkaDg9Zq2cxWbJ5nfdmGgw/4jRN
Pj8Chg1Xmm+qPQLi0L3ldBtOYkrz35wJzxhIFOnEc9QxMG3Ua/Nti2qMTzd1
ZKKwEh/3yWg76n5Fy+vq+i3NPGTT7sv/PsTPwndznZmiKjGiJO7Ds7zTTWgo
U+7q1TIDF8WaM6RaKQRHrRK+1R/Asc3/SRy4QQOdq68yFLdOYcaSZPjE6Srw
9jA/lbNmEnqZWdY0uc4i9cuOEx/mJjCUsO2/IU0lOanFc83POpBJgN30SPo8
iE/rhLnrk7BSGbnIfYGFHLRYp5m3RZxM8N1c9UW3CeWybH28FHLxN2TWCpf2
Q2Lol6qvwYOYurGxzuITHWL7Xs1Zn+6HwPCIyNe9M/DF0FqQ37MfJZReXPN4
1AFcL6V69rtRifr3nxQO76LBePFlgbVnpyGuPqBtFcDxHadck5UpB6nnGV06
d6kMr0gzu13T5iSuUZMFD0a14Mh1b7kL5lzkfpaRJkYpldxRd/CZTdko3pi6
5nQwZQ5GanjZOv4KEOphuW6Rokug7C3DfORRKyYl5BVIcg9jwF1nmO1YR6pq
/+d0S6QENhkYUVo8GmHSgXYmqYpCyHqYnX4sOAlHNXfe2/O6D3iP2XhxGlZj
lNCGxxSDEdzo6C8hWziHnfrRiqTIKEpqjMjWNC5hwWd/th99Lbgz38OBN3YC
nDiO+bTa08Gka8yhuIOLmHq79Z20Eiuho3UjqXeAQrA38Ic7VXajc+5pGYlP
NNhpk5R6Io9CXp1L1mE7mA+Cz+6xqP/rxPRTOeUtlh34RcXt31LCLAyt0ebY
FTGPfPJqZrSdJfD4V157Gi87OSG2xcHUexH5BXRfsxpNwptpk12nYpiJ6KDc
zEdbxQmFvDb28oExtJN3v61azESOnL8uuC61AZ6lytxcy9yBE1l1c81HZ/G3
c8qeZyUzkF15uGB4iZmQGv7UqSbIRKzRl5zc/GcABy09n0rpV8OZQFmdjvk+
DNkz13hOcx5iWTVd9V37oThdyHLd6n8xT4lvPVjbB6JsX78zsw3CoF9YG4dx
NQTHf/lv92smsuv81wGek8Mov4dBi5SnQS4ZpXzOcw5YGJLfrasbYMurAr+a
I5UQ3agUVUqdRIHwO2wLumXANC+Y7qhbCfRT1llFw734JdKbmZCOwK31/Hlt
s+No8HHdknT6J2jidgixC6IQr84cynzVOg0ibHdqfGIsQSbc7T+VPzzEP/KZ
482mWnDc4Xc3k7YAv32ebxjdtog8Ajc2lwcIkvrahoqfMyuQdWqP6uct0yC5
qXv/OqUl4PE/W8Xj3Qt8rzfUTibXYcHse/qurX3Q+nPl3cMztZgkZekv31AL
/rkebyp0JqDw2tefJZ8ESE3FjU1szQsY6h/rXBcxhQfVf9hS1+dhglXhYJBB
OmwpnjX56DmK0nefPBrP4iR4Tcdb50LaUWTwCH9+MRvB51Ub7Mi8ggZeLsM/
iriJ/htX4734a6DlVn4CJv1B6xSZzl/CrKSu2cXDflMchAl3HQ9j/RwmfZvz
PbDMQoqfeXje9/0w4qChmhRUg0bfQ0brjhksbAv5PnZMgEhhCiRDONvRjC7G
/LGNkxjKZlDr11eBWUbon4uLA2gsonuhSek1zkhcEhs71oHvkzKlXeS7IU7c
Y3FL8lmo9LgdovdyEK4cX5x+KShEJOiWGEXUd+AfqbR3itF0mBJ8WuDn0Afn
bGIOgeYKiLaViRdQ5vFa8P1yC2QiOtLXCzGkKpERrCdgXTsJ+0qFM/g8llGZ
x8ljfHUOQfhYHp95NabobY1/zrEMvisbTUdX+c+3x2I66/4g1Jbcv6TmN4AS
et7KlreYiMUAFucRDWayJnXta72NQuRDZWF1seedWL7Bf+8Pw3mwW8NWRu1K
BO15skjj6BIE6hcv5PH/g5bOW1Xrb9aADXPJSEAoHSOKHe4KX6WhSb2q/bQv
hZDPsAzXYmYnnmuxqazbzU74hrXVxJfSYMDr5sZ6jl5MFv8Z6EzpwO1bzZVP
bKaSLwt+JfrEIpBHNQrn1y6DpIp4JNsoA0w43Y4s7FkC+3gfV2ExBtAzfExf
n2Qi8s4mvfmhtADqIunJnhV0tGkJ5qKXsJGVdcpq/OGNuNNqwuDTGirZMswx
eHDfKAQtpoaGeHOQBuMyCbNyY/Dt8UiUkHEOur+RLB9kZSIVPidu6BVhIuMf
NbOW807ijpU5yewDI9D1RLnFc3EB2nfe2F5XzUaWxM9aPcmZBA3+/rQZSj9+
yH+Z9CpoFomlHaN3V9/z/HjlxZamMWjcP3tV2rsfKz1jPmcdqcTuKkMrzK3H
3SfXEU26Q3BFwP1retYKjKpJ0E0kJuF77K+5WelZ4G1izHsxqOSnpkVFancN
iiR3/Rl9z0Gwq9t/m5tqh44Dwmq7PtRCRUrNH0hpAgabVJ11ZCGWexYwRZcx
E9veco3cP1gJjmtnnWyjFyAnwp+763QDyqhfulUYOwP7t8xoWH+iEIl2Z/Lj
VnV9adRbjLbKQ7V3LWotjOLBeD/+luuqRs+iJE+mTaxEFcO+QjmTSqTvPVJF
ik6ASGdV7hZpKvFU7OJBhQcCROLRqMGau3NYHX/b+8a3CXjukGD12K0Fo6Om
FHhOtQP3/kOpD2WG8Wx7d27l+wWwmLjhkxGyDJuMyGds3dMgnM0/tZORBx0t
w+sNYztA86CA/3z4Kh/lNzCNuL0Hm0mdv1wxfXBw05fMrO/TeNF07c0I9Xqw
qzn3YrMclby2JHop5ZAgcYI/6G6Pex8EHBBpTcudxuL6S68/rvK2xOBKxu+F
YSAcP7YrdlMIN8uPsp8FF6AzqNRRLbwKrT5JuHu61EDmH1XZ9yLl2Pare0an
qAMKLthWh7OugJn2rvN6jeO4UvQ54b2eKFn7+O3GbwEMWLz3a9sFI0Ei+2VR
gXjiY9x+PWyI5V0+HL89c31auQ5Y/Krqvj9kIi22SxM35EbBm8ulwnFJiHy1
LZJbRKkbWi4W3Pff/h2233KplLZtRPsViX1sa8fx8KkX8uEtY7hOfsPtBgUa
nHAv+Dr/anh1MAI/fBcuwCWDY9KX7xfAi5OL+5uuD4OWL7ex2dMhGBLYHLhZ
cAn/B1SWUZI=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.01], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwVl3c8FQ4Xxm0hKZGskJSMUtEQnSsjImWlshoy8muIRKhEJSIjoUWZ2Zkt
nWvvvQnXvsbFvbg2r/ev8zl/nuc85/l8j8T1u4Y3mRgYGGYZGRj+XwNDVmUX
5Ymw7fqXW7Zh06DtphQrzpAJF/7ka3SLMBBjS/YqsD2iYVZn62kTbRq69xRJ
fc+lo+vogXu+Rt/x9zD7K7LLNGZF7VTI62jAtBkv0pOLg7BqYXZ5/0wOPPco
2nRMpBpvB+5/LWqSBWJG4RR9j14grF480jLajrRdN1p2HR5EP3LcO27vZvQq
M/fWeNmDFgqq1ZdPMBBP3shgI2xlIG4NrDtuvNqE8otjl5+7fEJtsWz265dz
MLCGh9vJqANR0LU49nU7bioKaujgn0DoMc8NiJxFvvnnrDc863HOcrZJdXkC
99CT7xLjSPAihRnUvTqhm3Zma1TdLEwWas48/ZkPOfavW/+rm4KxKenW/04u
g+w5yyMNMhWwWezr1EHdRkwy7ajnyPkFePnqY6n8AawtUpLIau7B2ZTvOjRS
B3oqVo/U2b6HW7lNNA2HJdT9U1ThPTYI08Vk6gtvEpRFLX31NVpDhme1xOuM
1fhG3DWwJnka+y/M5Z7+sAzV+ybCBsUa4WBe9m/VXePAbvY3QnFbBfo83LQW
/pSVYJ8rR2jBdRz/Q+c5vz6MpR9kb7l+GgHj7pRddttISC+6059yjo5f9h09
+dW/Aau+G8tPbp2BvV6b4stPTmB88dFaXq5G5CfT/jA+JeF/fFkxEVIj2G52
YYfzn07MeMTG+jtiBm108y9Fh4RBXtXN45rrNOB5IJftr90N7n8oATfXqPgm
2Hput9k6sr+7nWOzMgdd88Xcd41oWGd586zIHzr8bTcr4DoyCOpnlIbExAqB
bpL5T/r8CjouuQ5sUaCDlslgxidzOg7Xmfu8sGck4Ei+9K/JeSDPN5c+eTgL
VBn9/bLsdLi9u29U+NIg9A25Sn2U7cfOLe3sFfUDeOCBlssiVxHy5XsftLxK
BT1+g2TTujW87krXkallIEQe9ZUjhs5hqrH1z9Gda9jS0xaruukvZm9JjVfk
bEJtozXT05KsRP43j9/IMESD1XxjTz4TE9Ejie3CHKES55/GF+bo9wPj/AdF
t1NMhFSfpAIWaToecKi5d3dDXx0Trgq35g6UKZE9ld1YiBlDS47qketoX8Dz
ArVnwL8iatvJXd1g0l1m5nidBgYh3gk+MqPAZGjJ935TFyp4CT76yjALAW/N
8hw4BnH8H2fFzyvjkKjnejBJtRPu0z0f/9lNxqaEbmIQcRhlHXkFDfjLkPRA
dsfr7XNgn8EY0FbWBEaTHd/ERxiItSuG8q7fB8AjuEVO4PIieubr5MX5l2GF
VjZ+nRnC/KLfT59R6ZBoH6cuEL8ALhFZOYlB0xgiZk1tt2oDWe+zZx/tGUaD
9Jev27nJuCQjq6miOgcsJY7bc6oo+OLUq3WKahOYKoSLKUr2gK7Kl9dTL4fQ
ZG9uTMafUnSOHWWL1qLhb8+CazbdqfC2KFbA80YpKkzon7+bN4U1rdaRL3Ee
HWw+drLm9KHd5IrMTEkOruwTs28NHEDRpwFWBL1aNHQT1+bhygUZ1+UbeTsG
sP87x1XJ4HEowoqJu68HsLpWreKmShsIS78cFOuchWYmyT5S2TxOtkQcGq/8
h2z7f3NM3luDr7lhBa9SaJgynHAz9PVb5FkTcF8vW8FELLyr8XgdLp2WYtV9
MAiltqHD3VXr2Lyw/dyvbDr8ki7cNGE2hw5Dp5fPJ1LRzlRT1yZ7GXIWr75X
e9IEiizOQmupf/HRwVeTkkML4GeVVjsdWAQTy2qByhdX8fQ+SSoDaRLzj9gU
ENnr8fbN2rExOypaMJ3NMr1KQev9o5t0xSeBUBapqzjbhKFaronrifXg7Dzm
q0wnwY6kuBeUrCUIopVuoYn3oVOwU4oy+zhqXDN68d62G91rq/LFzCgoG3Hd
B7hr8cjPu/P5bR0orN6pPCncB7ma7jy11BZkexoteCexF6lsicvnNZqRJaZu
f8BwF4jPtNzT5VuGOGVWt0jOPqS4BAkcvFMFEgYf2WpYmAiP5VNl/xHWMZFf
lhxnkIil4ZccDClkED9XdcRceBZGjjhKVNGL4alwNF835zokGklO+IatovKz
4KvGz+rB2mLQrlVoEeb8ud8xuZORzO1j9bdnHTbNOileiZwG78fM40pSzUju
pT0YuLeZsKPpA9eYcB0E6Y52ijDOwT6SUfkZp1H4qXYh0im5DYMCMoAtkQos
RhKmZiZ0vFsSsSTlPg8DTbMz28gzUGa55v9vdRCk/Psr1mwpYJuqYpvlV4Vi
KjMCdHsSLHcNbmf0bIEvjqveLoRWNAu4rvjm2gDo+HHcFWmvga2+bt9KExvA
YKJvtuh3A/Tn8mbVZpFQk/W+veJoK4Qqy0zenkyG1cs/F6XlRtFiUyhRyI6E
PNw9j/u39gGIHdb7WkjDfWVf0jYvMRLe05+aech3gd/dzay94iSwyzD+pek4
gl9XTB/nBK1CwJiDUHf/T1hupvE93jGPi73LMmKmc2jbQjZlPdALx7vFdBee
t8HdT7ZxzF4UnPDZHGJ9nJmgcoa313zPJAx77Ne3CRsC3QpvU0/SEjqe+Cos
VUHHOsc/8i6nh6GjO/SFWjQJa8Tzd4TGDoM36fa3W04LIOStYLijuhMOxw+c
3Ly0hAJjveaeIg2odeo27/2xKqTzalmEN86ALucjk26laLQ0CqJfIpKhrtQo
PUG0CUT8XldGfWMgoBP3nqmacsiNPaGrVj4KB21udbDaDcApNyE16xMLkPnv
3WFW/3ng72po3399Ao0ClSWyJFgJsUHdjufG0+Eep4lCyKV6VLqjbOfs3oc3
Ld+8s+aiIfWZrbd1dgzI2momHhEkgWz658E+Nkbi4e9aVxbnibB/4L9Rv5k5
5Lt7wjSIfwhz09SJzzJawZvvTf+thG78NWxx/Ll0LYQlT3qdvreM0cLcpkyE
DlQ+ra2hcqETDZl9iBwOb1HkO8vErcgiUJouE2ksomF29yetwFwWYqtn97ke
i0aQSzaeLCmn4SGT9X7/1T+obSB7KDZ5Fu5/vu/AMd6HD7ZrPM75bwCr7AwP
FQw34BHCVFjwFAtxPPiix7lLzIRtgkXaWXyzGBMJsQZ/RlBVLif8oOE0Hnb7
GjuzrwOizZQ07igxECOP+Tyt9RoEneqw19XDeTDxrnlG88M/kBpaf+jXeQ9j
ffmYz8p83tCnqPwXWx84/bjSrLG9HI8yna8XvFEJNoUVT642kXC++XqnaioF
XnksiNpb9OJWzmb/TMV2NLfuHDncNopyBT/K5MvokHpt/5WT4gPQsJc/Uz6Q
DhM8Unbt32dQ9eadB/fLyZiv6bUYkr+CHkP6O4N/DiB/3pnGYpVlGI9x7brb
Mw0OX/aphXmwEpMVozxbfDuwJe+ZDY/kEB6vjZp49a8EVVju1yUVUpGtdK3h
7quNO+c6YHB0Yhp+Hou5ln2PBDFrjzMPfpzAs5tPeMmzt2LKtFa2t+MmojVG
1ztbMBIn587Two42Qmatt+uVNirenSntflgyC36WjfH6pSQUXTk2yRVKAzt5
3ck3EflIakmzfb97FimlzBfNnJvhoKfwt908G32ah0fYNxJOTv3ec+kiM/G/
TqWjnzimQPblYfalKRoIDxtyP5qdhr+KRhVuWnSMa4+y2cE/BqslYyYCJo34
nk3snFvBFFJPbrYtcVzG/r0igsnmzERq6sGEioAZ3OWo02mnVIif7QWEpUM2
uFOD8/j6gxa0uD7acrVgECMfFxSWn5mHhDOelMdObRBVxeS/c+krjMbu3hGi
1wcpS/Uz/FuGkXo9pm/+2wAcN+hqxcYhHLFus6MYLGNDWtk5bbVp7DoXGkMr
a4fSss1XRiIYCO/6nM2VP7dAxbTpirDKBBZcJHGbTn+Dvu9X6/YIDgG5oY05
+fgXOFnEdmpvfR/4xwo9FL2RiawuKVPhUQ3IfVigVY53HNm2FBD+5k+ihfrB
TzGBJJDrH3uatTQMz5z02M3OFEH7JKteqMs4zLy8X5mtFIN+8fX7Ym7PgY67
hekZgQXkHe4NP9vKQny3AbCGATSYTJ2Sryjpx63yqunPPJtg8cvU1/UKCnII
8x5yOp0DDxeSUlQvjsBmrntB2ySmkTRXOXTYbBaWqkqC/+q1oGDCGe0bPSvA
pRuguq42CQ3qXjoMttNw3v/YeMJaJ1yM+ijqajQNZyTGyWf31MFck6FGJCkO
TkUxb3tuOwE+tpOHfBqXcHeWQ1TSbBa+1D81VF+4jG/DWEs2tfXjuVP7+YLt
55A8p08r4h6EY0vaUYot47Bj8ptmMXMvtEtxwKmaThCJX96iqb+Arq4Dffn3
KmEufWfFg7eTOKmOvZp/1+Borllxvv8oDhBY9w3uJWGkce4B1vl/oObrWLBv
bgwtdh7//AsqgPOg+YXsKzPYXHHiVpt3H6S93u8lRlyCE+tXA3XVf4F3b+j2
ddIMLOyd3MHLNY0MghbHrxxqRjOG9IFq6QzcTTJ6OuLVg8zWhnT3hnhcS+s6
Lc3fh80zQ8VNFHbCVs31vMO3umCnJLMSxXwMzPlvPr+54cOIiOVE10cNqJ7n
Zm1B2fDtgSmGgj2lMManyLYcMo0UgWuzySpJWP9AMVbgZh8aq+of1HHohTDr
rPSS93MooWJxjqxTDG8FWk1pVn9Q2SMkuWduAM7s7srQkKnAG8kqtxtiWQjz
H08ZBb2awcBgXkk9yhLIX32u8W3bEAR8TLxVojQMIcGfW+mWtahS88Rlp14P
lmDla7XoethzR8LLl7EG9UIERjbNrsFPK/5ZjRetmP/p6P1Qlz68pd+nH/+9
GyW2Wuq8sanDdpOiz8et6PDjkdOlKFmEvJMRB95fXIYVX1X/IycXwfOGKzVQ
qQVyGEwuO4zNwqwWS4h91j/s8pFO+hlKAWo6RWnJfQiCmyLOyyQOod0RKckn
L+uhKDUhJN14EXigg+n8EhVNfgfqunxZBL+HD4ap+1iIq9IdvrkxY8BzMkfo
tm8KCs15n/D72IH8TQmTvIN07BVoOZPLMw+looFlmw9N42UPu6KjoaWwH1k+
m1T1g5iu01qMQxxeryQ8V0lsBq5DPJ3Fif3oExZUu9N0AYfgxhrnlQw8+TXu
/sfOGqx8Pmdpu4UKJW816hYNPqK+FsWtt3oJTbMTJa48YSDoxJlbKBhTsaXh
TQ3D71n88ue34sxGnmqLn1bK4piFo+5uJVGeVBQnF/nGuJAw5ZBBur8CC6Fg
cddf38Mb3DYuI603n4k8E1f1LaqnoQpmInVsm/HJtlRjygNW4rVNm4gydq1w
r3uq+fKRKpQ518xXk0FDNc7LQp/F6yGBbEVRdp3Dd+OvaKrcrISIG5I2Qk0b
/8yLx87btSuxhoEzmd2tBbVWNvWuFRLBhnSu/0v+KJ7KyFYLt29BdyZ7TUFO
MnRosu/8tj4DJckR/IVnesE+JNsjfG4RC4xzn5XU/IUoe+tTojUNoEC59Cj8
zQJ4/QjzraDX46EvF2mUHUuoML7lcoLYPIpk173h4C/B3WpK1xiWejD+kZla
zr0ZtCc0hMQRaiHdIltXUfo7nMx478s5PYdJ37nSa34PYwTRuua50jqQH5m5
2gb3QsOfnfIG+tGov4NV4WL+T8x/VarYJM1GGB+zOmEnnAt825rChBnycQfl
w53x74lYbBWxTL9HRj/X7nuYqINtGr2plSs0ePXm+d9XxBHgCE9u0LXsht4a
nbEbSSTcV2yevOkcCZnj43nlRoZhn58moT1zHlLbFRc+eD3H96eidgXUzyFT
sEDx/YISdDb6bD9RR0Xz7ExaBPc87j7cnGn5uQ/ykoam98X2g3qiwIf082VI
I64asSuOQIGEdt/3Y9SN/7BdG67NQ4Z7alxbVguWx+aqyknPQplJofubbbP4
vuUxrUuZlWg93TWWvxoFjIpOzEJ5wxDpOBw+8rwblDxPe1iHrkBJhkgkSxoJ
j70yYrBIJkGq65LX99wBdDtuE1h0pw+499Qez9ZkJeB9y/Tt3FWoWD72JcmE
CJei/gvzimuDQn5a6IQYHSSX1T+GJVHwpJQQY8B9Ko4Lnh32yEnDFLWm6Zrg
FvinfDyg5eoyag4ODNgE03FI7syVMyrzcG/Z/3SeChmruuni+QfIwBu/7Xn6
/Dy4DHkQ568wE+vSP06ccB6E/htCfGr/CvBHgRBv2hwZwi6euu1uRIZjby74
5wcMQuyRs+I1iyOYc2mK5V/+BEzH2mYO5c3g9Zo4m/RtoxDy3WC3s9oQ6M9m
+FdOkdFb6U7fPutQeCvi27fpVTfaeV9ef0JtxQPdq8e/iVGBmpn/NvpHL5DS
SpKqd7ASLqjoK+yWKYVbe1KqtKTbkVhhtNX+EhWv/cz5pXt4FJVbAo6+/j0B
xHPViUc+sRDepsJsqPsUFB85fElb5wleL5GTrtXpA9IYkf7EkIHIsuefnGnp
MhwSKc5oHh9AJfKC2dWkfrj2b4fUziN1uOVbQZhgeStusXfIl3b6Bz0FLTfP
hwyjdYJep28CFU3ty4L5RAvRUa4wudqoBat8u7mdvrAQg69tCTlhPwy7RWaZ
tF378KUL21K0/xJcDrhc/8MAIakqye2PTj/aXhIsS2UkY8TnBvp1tVXwm/Jb
4pPog5fqoxacUiPwKNR9fuoMCQ71vjrHIteChJuVhKOKv9GE6Z2pptAaRuj4
vk5MLQfODJNwjZ1ruCQ0NSHZs47p2/V1lsxaIPMpz9OZU3NI36qsNXOuCgfr
zl6O9JgFxew6cqfSNMLZMNHzInTQUkizFmceRD9OL8u/Y7/xaVieaWjtEizp
Lptz4QqySHsfYeqYBvWDr4QzSz/Bk1Wj5/bmE8ic8sO0coyJuDMqT9wwnITv
x6T63yd0gW9K+5etT0l4n+LlKHe9ER5S1CjMRtdRUEQ/pY6xHYecGVd5HOax
uu7+2fyCEfDxbbD9mLKA5dnvLAX94rC34nWiln4nyPGzVOYGMxC1tQyCdsaT
8dejQ//Zd/ehwsCbeAWFSXDjd1p2GmiC+NDaSxr/0TGp/iEXKzsTkaL/6avh
43l8MsBbbMdehiv5h14+kOpGxp22A2Eaq9ie9OqY+WAtsIuZJlhaLcCjOCNl
c+yHszvvjN+Qm8F744MPT7ps5Ev5bu8O3iL40uS+KUWYDobfOYJEWpqwjPmC
OcfFUkiKfLfdpnQNSm0S+8Q3LwJz9x77UWsSWkXHkt18aNAn+/Lvt1QSBJBF
FTslyMB5jUPrSdcAUHy94o/9XsSV41V7jzauocW7v3kSvV/gSluI7QXdFWA/
Kqp56lQxPIkRpEvv7Acufje+v/825i4fvukxOQiV1/zIdyvnwED+SZL+01Y8
ckLlatFSByoYn7h/79EgeEbp3+zeyMXy+78+jTwawC+xHCaako0YXnJGbvQ8
DbXtg0aDJ+dQPcTivbL5EIypq/urjzYjgeXPKOFBHhzksdhrXEzBo3/Bxup5
H/5YUJx6c6MeR727OP1f5SGD70XfJw6zsPnvLyWdXCrqR3Fd0j/YBh+cJRMs
RqjgkeWT/splBEgWX3lv969AxpbOJYsjHdjlJ+j6Rq4NlxrqDpLLW4DlzdTT
0N3jsHezYro3S8MGT26/dZlpAffedDBsm2jCQ1Ot7zMPx2PlUKOhf9AchPoc
Ip4gMxIeGYsURpztw+mmQoniuWWs/ZucZyXWh8vx2/TebKJC2Yfc3J+EYszu
l/w5EzUHa4cJHlnmI/AyIeWv0fFqjG20ziJkVOCFWOMFl9UJ4NgV5+ZFJ4GW
YyLHu8U+1GS22F3/eARWyz5JFZdS4UGNj7P5q3lQcrxRFJM4BhS74dEioX7w
c6Cn3T5ehIesgpoyRAZBX1j+6g3hZSjYekaoxrkSS64u/jpbQoFHArwjAnrN
cOK8RDq7XxWor38PLrgyC14KxssZL8fASaa9bScDGaSeRf05vzCKfhkBj8tZ
GnGv0taj6r5NcFuWubRh8zQ8iZ75UhFNBAbXlsXtG7qtuSjtFFVkIsafc6kx
jpuG3ePu7Smy7TATmnEuMHoQ8ZQt4eG3RtQpj/0jGlcNyhp37GZWM/FEcJqY
OGEILN/rlN5/XghJx+7EH3HvwOgLkwov/RkIUhd+b3Y0psLksxtB4uR+ZDug
7dEg1oJ/WXet6jyaBLKm1ZV/xCU8xhHOKbKvAbuqJCe/8PbjB/2uiU2KfSBo
NXcpSLwCXAzkm2R4EK+86eFgmaVhYrKr3hVyEZ7/UWcaxv4V67mG7JZ0etHB
y1Rggb4OjfUSoWdFZlDP/W50zpEOMD1TqZy7Mw8fs50OvrTaDvvzSsiiNzLg
rX9AYHVXDAwmOS6VHF4EodY9kcr7h/FqlM/3X/MUzNaS+HnXvB9+R8gLBPqR
oMuPVqqguwpbz0XLv/3WCSP+91/+bHsMlOj+q15FQ9DWW04SCWIg2DenBVj8
nIbEw20SCtQ+2P+2hOpweRZm4t9+iNYYxWdculmcr3tAdMSbKdepBVjvO6qI
DqaAwq7umz+fz8K0fuKv7MxWsDCkHHr5A6H+QyNvacQEZBbfn3A4ScGOxOyi
FZNptFKIrrkWXoV7XRSP//nRiJEVQcfKDVvgyrCURtdWIu4te1su83gEY9h+
6dPeLYFFjNL4CecuYPFqlF4yoYPrXrleZh52gsrwBXUB4X68Y88o5RnTCInh
Rq53a9bBbfBDW+QEBR/Fv+9Hv0XUd/JWfKRGh5t6HX68nm/wd0VgZRy5Ap1G
oxcdZ9vA8naioF5xA0xa6p/V3OA5Xkm+XOsIEu4oVnJw+9eFz/OnSqp/zQC3
/b3ddNUV4Bi19JRi3di/p9BBQy4yxkfpE75+peLYouQxV7YBfLlfemkweg54
Vo8JoPYEKv/zbs89WI95HL2DTryT2Fp5oneG/Tv4UrJnbujNQb1ZV6PAejKE
85FPP0hchJSV7dT44jYkPi6ycrafgT0xY0JbOqpxXEmHYzt/G/aqVqXZRDMQ
fM7QL797uHGHeeTwWzpDcMvKXKlAmQaPufds3W08gK+LbkhuOk6Dn3Hd4v88
grDkjncsbxgFiWryeU77aWjw/tAc14FmjPKjfiGqT+CCOYXSNl6MypwZi94V
y6g8zb5S2UKFj5ujhL2pf6CL6Co44DMOZsXt7/6UkVE79UCyYOg3NGW08Oi2
GcMQBo63QrnP8OPzGXr4zy6QMDqpuHVbD8hfK4k/LToC+p7Mk6c1N/j89AFu
8B1En4hY2xL6GB7uqhaSMZrHWftvew4fG0AH5y7BlX9UiLwSVPPZh4Y/HK4P
8r+Yg52qHh3VYRs5/ZqPTt/cADcb0rQ4Py/Bw51Hgk9wraDmwRLfow4kaD11
/rOqcgvQRi5PR15ZQCEDUc/aMibi7Lj8+AlBGs7vc0hVsKqHNyl91MiIDvC9
faPvEgcR7zv7PDHKLIQAhoQPTNsHcFjRknSVm4o5NvtebatgIZztjz3PYtsF
y79dx96vjYA7aasB4Ug3FFd2vk9jHYeZJ9danaIrQW6Llct/oxOweW/Gtuwt
jET+8W5fgnczrE73HBRrGgG61sHcQe455DLX0nQuTUW5s4MMx/a2Q8I4f2GL
yABKKw8f8r/CSshQSxMZe09F2f5DszeLSiCTRTzA3WUYLJL8HZw4l+H6eu/n
t3orqC/d6MXsPwA8Ux3XmXq7cF7LMm/bhm/Df5Sd8LCpAA/KycNao7Ub+2z4
m3qKjqQLNXx+l5dBZVjSgzQ/Cq1neBUNHVowfPhTbvNIOx4fF181oaxjeWlm
6jMFBoJ7Srq2665xjFlPYPZLnkOCMHniXvcc7lNLX2VdG0AumbpR7e4yvPba
x1maMwe8H2wd/pleiRKHzdzzPhOR7qpHiOYtgUviCXcYCleBqWRhXy4xEhM+
/sdhV90El0Jr9zr1PETRZ/xJolxU8JmrTFNND4ZjL7OUVZZLIezCTVU3Dhpo
WBhe3SZRAAYnRWti/SdB0TvrXVUvFbQt1Llzdq3DZJbU2a//9DBq8/eG+49y
ULE4cEqtaBm1GIfFqq9Ow0TrFU/Hi7PoekpyJEmGChdTqpz5Cpewps7lpuLP
Dc7c8Tf/jvEAmPYbpwa2sBH3uumYfcgeR1f//XFplX14sZnL9geVlaAZJb1t
dIEML18f22zwYBR/C/SolDbT4OQL1QwrnVWMS+v4lii6gqdl+QbPEKtgc+Rg
YoLcOuTm/HL8PPkDLz837g5rbUE1H5OQFKUEjHnh6pyaNAHyGozTkpnFkHdb
1/CLTycIuN9BYetynJ7ibNylOQaqavr+71jzUDXom67+9mL4HwaiwXA=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-5.278213027920504, 
       4.310243086306716}, {-6.719693176125606, 7.124245368352808}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {193.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNtViYPW3MmOEB4Ig6PFEWm30iA8VUciut4rWUT
YXw9hwlVkzl8/WB8E4ebz3mYV3rD+JYOF3dPVUmKhvHtHIR3VQREw+QbHB2+
r9p+MSgQJu/iMPP/2+ePfGHybg5xOil7/sLN83QwFKuun+gEk/d2uLdMvKbK
BCbv5+CQwbrBhw3KdwhwmBNyPC9ZH6Y+0OH+fPHzh7Wg/ANBDhe+OS69zQnT
H+JgZxe5NFsdpj/U4cHKpKmG3/uh+sMcvFKeRU8QgOkPd7g7KWpHri5Mf6TD
xCLx3LsKExwAyn1csA==
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"Tr\"", TraditionalForm]},
      AxesOrigin->{0, 1021.4876341519794`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {1022.8992107112972`, 1051.1307418976517`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {580.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQOHF/DOOjHV0AHCE3G4GxFwYZm7AZSv4vDj4v5b
TwT1oXw9B4ktk48eYDeF8k0c5FnY+WYam0D5lg4V/ttO/tqlCeXbOWy7+l1B
eg5UfYOjw31RqVPs8jDzXByy/i9L2KULtb/BzYH9opi57Q+Yezwd4u6vaGh+
qgqV93YIKvGp9ujXhcr7OTzc49X+7gVUvUOAwzT2nA8Sq2HmBTpo6q/JWKJi
DOEfCHKouPbyhtEUI6j+EIczH06/Lz8G9a9DqMOq7/bGDDIaUP1hDlFX+lhb
AxWh+sMd9l2beSdLSw+qP9KB4/ApFxkTLQcAVPxaHg==
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"Tr\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {0, 21.60978895235686}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {967.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.6997617824510503`*^9, 3.6997618042291803`*^9}, 
   3.6997834809332585`*^9, 3.6997836533175645`*^9, {3.6997836839702516`*^9, 
   3.699783707667942*^9}, 3.699784929443252*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\guifr\\\\Desktop\\\\plot2.pdf\>\"", ",", "plot2", ",", 
   "\"\<PDF\>\""}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["\<\"C:\\\\Users\\\\guifr\\\\Desktop\\\\plot2.pdf\"\>"], "Output",
 CellChangeTimes->{3.699785140122284*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "funny", " ", "functions", " ", "to", " ", "generate", " ", "data"}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"G1", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "t"}], ",", 
         RowBox[{
          RowBox[{"10", 
           SuperscriptBox["t", "3"]}], "+", 
          RowBox[{"2", 
           SuperscriptBox["t", "2"]}], "-", 
          RowBox[{"10", "t"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"v", "+", 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinormalDistribution", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], "]"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G2", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"4", "Pi"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{"t", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"v", "+", 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinormalDistribution", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], "]"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G3", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"4", "Pi"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{"3", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], ",", 
         RowBox[{"3", "t"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"v", "+", 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinormalDistribution", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "]"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G4", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"10", "t"}], "+", "12"}], ",", 
         RowBox[{
          RowBox[{"10", 
           SuperscriptBox["t", "3"]}], "+", 
          RowBox[{"2", 
           SuperscriptBox["t", "2"]}], "-", 
          RowBox[{"10", "t"}], "+", "1"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"v", "+", 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinormalDistribution", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], "]"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G5", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"4", "Pi"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "t"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"-", "t"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"v", "+", 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinormalDistribution", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], "]"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G6", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"4", "Pi"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{"-", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], ",", 
         RowBox[{"2", "t"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"v", "+", 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinormalDistribution", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "]"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G7", "[", "\[Eta]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "Pi"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], ",", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"v", "+", 
        RowBox[{"\[Eta]", " ", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinormalDistribution", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], "]"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQHfus6vuS3teODPr2P0D0BOl45qVA+p9HMieIlnl6
RhxEv3HRVgXRh9y5py8H0nvm+c4E0YvUIi6B6CurJoDpiSErr4HoBSkxL0D0
JB1pmRVAep2uhzyINmphtQHRZ9Rmu4BoCeFlASD6svPlCBCt4ygeC6KlfFbE
gdVp8qWB6HtnErJBdI7L6noQPaWpugVEq2m9mw+iOZj+LQXRJQbJ20C0VvWK
fSD6mZX2cRD9Z1/ZdRDt1Tr7AYhOC775EETLPfb4CKL5t5z8Ala/bKHdeiB9
6Z6NPYhmehNXBaKb07uqQbTb5GUCEX2vHbVlAoRBNL/wjPY9E4D2yRR3g2gA
YHCySw==
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"G1", "[", "0.1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"G4", "[", "0.1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"X1", ",", "X2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"Z1", ",", "Z2"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ".", 
      RowBox[{"X", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "n"}], ",", 
      RowBox[{"1", "/", "n"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.69976192258459*^9, 3.6997619794138737`*^9}, 
   3.699783742850254*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X2", ",", "X1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"PointSize", "[", ".01", "]"}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"TrE", "[", 
          RowBox[{
           RowBox[{"ShuffleZ", "[", 
            RowBox[{"i", ",", "Z"}], "]"}], ",", "G", ",", "L"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<Tr\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"TrE", "[", 
          RowBox[{
           RowBox[{"ShuffleZ", "[", 
            RowBox[{"i", ",", "Z"}], "]"}], ",", "H", ",", "L"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<Tr\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g1", ",", "g2", ",", "g3"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.6997837613194304`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.01], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-9.97938715707449, 21.98053396059115}, {-3.40984803123899, 
       5.795478042749748}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {193.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNKN34fqfA86gDhiTiwhVruvcMK46s45DXruq99
cwTK13MQvDXrYdoyGN/EYZLc5p/lU2F8S4dddX8fuEjA+HYON1XXql9jgPIb
HB1SVhUkLLp9GCrv4vBfZMbswxuh/AY3hxMNp/PDW2Dyng4Ot2Qn/JgNk/d2
cJzCJnP56yGovJ9DZnFRjfMtKN8hwKHeZCJPowBMfaADI79f1KZGqPyBIAel
BVFSUtdg+kMcfNPE6w+4wvSHOuxUu5m8ZRmU3xDm0ChqLGXVDNMf7qDX/7VD
LwumP9Lh1YuFSotfH3QAANPzYzo=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"Tr\"", TraditionalForm]},
      AxesOrigin->{0, 9089.091043545377},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {9175.274494398811, 10898.943511467489`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {580.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMNbi7Szms+OkB4Ig5vnp06IJsP46s4WE/VnDTv
/wcoX8+h/vkJmWQmmLyJw17j5rlG2TB5S4foDwcnnNOE8e0cmNd9jlfieA/h
Nzg6NC94srCaBcpncHH4kj3/CE/CO6i8m8OLFV05B1+9hcp7OugdKTuXJQOT
93bYfrHsxYEtUD6Dn8NZo+Ie5o7XEL5DgIN6Yj2Pzss3UPWBDv++su5+ZQrl
Hwhy2L1hTfGV5ldQ/SEOO8sFDmidh/IdQh1qRQJ4Ome/hOoPc5B5aT7j1k0o
/0C4Q3eRyEPfQiifIdJBiWWqp++Zlw4ApNVo9A==
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"Tr\"", TraditionalForm]},
      AxesOrigin->{0, 51092.34570400347},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {52106.43372557041, 72388.19415690936}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {967.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.6997619954778385`*^9, 3.6997837628508873`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"G2", "[", "0.1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"G5", "[", "0.1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"X1", ",", "X2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"Z1", ",", "Z2"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ".", 
      RowBox[{"X", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "n"}], ",", 
      RowBox[{"1", "/", "n"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.69976192258459*^9, 3.6997619794138737`*^9}, {
  3.699762095092683*^9, 3.6997621015305386`*^9}, {3.699783779514861*^9, 
  3.69978378212447*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X2", ",", "X1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"PointSize", "[", ".01", "]"}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"TrE", "[", 
          RowBox[{
           RowBox[{"ShuffleZ", "[", 
            RowBox[{"i", ",", "Z"}], "]"}], ",", "G", ",", "L"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<Tr\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"TrE", "[", 
          RowBox[{
           RowBox[{"ShuffleZ", "[", 
            RowBox[{"i", ",", "Z"}], "]"}], ",", "H", ",", "L"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<Tr\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot3", "=", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g1", ",", "g2", ",", "g3"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.6997837975379257`*^9, {3.6997849561480603`*^9, 3.699784958071474*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
hueSDBWp+P8AA44lOQ==
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.01], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
6H99jQ65
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-12.514767578053624`, 
       12.57887981774423}, {-11.218896519090565`, 11.224073400134124`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {193.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMtFxc7lLmtcYDwRBys5b2nTLSE8VUcyi5tWPLW
EMbXc7g0a9rXjSowvolDFRP3qUfWML6lw/QlqzO5JGB8O4fLLcbnokSh/AZH
h/czalN1/62Gyrs4XPflueyvAZN3czDhPX4/hw+m39MhaMabd9OcYPLeDgds
dA0l4eb7OcguD5t2+D/UPIcAh7JT2goct6H8hkCHdOaZM47CzDsQ5LDnXNEK
L5g8QwhQB8eiQ99g+kMd3p2XKgp7BtMf5mAhcHeJ1Cko/0C4Q6TDxqsSe2D6
Ix34jn8qsgWaBwC5fGEu
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"Tr\"", TraditionalForm]},
      AxesOrigin->{0, 3546.5893825150433`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {3550.0485053435373`, 3619.2309619134194`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {580.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNvtc/v38Y30QHCE3GIWe7XVfesF8pXcZBT1d8t
fW4ClK/nIGbxeMJJ0x4o38Th7FM/3o29fVC+pcMiFsUqxlPdUL6dQ5zfgb9i
i7og/AZHh7Cr8xpDj3VC5V0c/m5wv9l6FGpfg5uDzffdPmcdYfo9HdykW8S7
A6D8Bm+Ha0yXjf5M6IDK+zlkvFCLunwTar9DgIMq22yf/gmtUPWBDlU8Ea25
llD1B4IcbJ58WWywugmqP8Shdu/CLQc2t0H1hzpceXSpouFCLVR/mIPUcZVM
OwWo+QfCHa7oTudTqmuG6o90eMPf2y7Z1uoAAIbrX34=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"Tr\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {0, 1091.678466069275}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {967.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.6997851075144615`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\guifr\\\\Desktop\\\\plot3.pdf\>\"", ",", "plot3", ",", 
   "\"\<PDF\>\""}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["\<\"C:\\\\Users\\\\guifr\\\\Desktop\\\\plot3.pdf\"\>"], "Output",
 CellChangeTimes->{3.6997851236568074`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"G7", "[", "0.1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X2", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", ".1"}], "}"}]}], "}"}]}], "]"}], ",", "n"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"X1", ",", "X2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"Z1", ",", "Z2"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ".", 
      RowBox[{"X", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "n"}], ",", 
      RowBox[{"1", "/", "n"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.69976192258459*^9, 3.6997619794138737`*^9}, {
   3.699762095092683*^9, 3.6997621015305386`*^9}, {3.6997622977232513`*^9, 
   3.699762297801113*^9}, {3.6997623328335094`*^9, 3.6997623532731853`*^9}, {
   3.69976239436541*^9, 3.6997623967410097`*^9}, 3.6997838362184734`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X2", ",", "X1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"PointSize", "[", ".01", "]"}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"TrE", "[", 
          RowBox[{
           RowBox[{"ShuffleZ", "[", 
            RowBox[{"i", ",", "Z"}], "]"}], ",", "G", ",", "L"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<Tr\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"TrE", "[", 
          RowBox[{
           RowBox[{"ShuffleZ", "[", 
            RowBox[{"i", ",", "Z"}], "]"}], ",", "H", ",", "L"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<Tr\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot4", "=", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g1", ",", "g2", ",", "g3"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.6997838509967546`*^9, {3.6997850089303813`*^9, 3.699785012743651*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.01], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwVl2c4Fm4bxo0G2aWU8g+pRIMIRV0NFZKklIpCNChllRUNGZFkS8nKaBkh
VC5k75U9nuHx7CVJGt7n/XR/u4/7uo7zPs/fqeJ4w8pZREhIaFpYSOj/pxRM
vgmya4MS939Vq9+ygZRQ3SWhy4RhsZgzbTiONfQdi92K2BhREE4+fZkE/P1C
AZaDNGioK9C1liHC3ZSnwSpdLNDQSomqzCVB0ppNMlO+U1ia5rfwvNUnEP2g
2q6bwoNsWeeMC/c+w9fmdlRz4mCACttfY20XKmUGDQqvmURuwOrvRJxA7zvr
3o6+ouPaiwn2BgfJ0B5yU/7HDSpKarbcC7NtwM+NR3LL9lPw0rbw74sTBsDc
4rHxa1EWborJ+VGkTMD7ORcOGv15i+f6qTseAgN80FmKLcODWB1FsZ41Exjw
V63u5J5uFOvZ4+2QxcHBwMe+rzpo2H3EPrRwKwlztX+q2DjzYKWl+UX7qS4Q
Ey9LUR/hQuvF8yXMKhJUj0VOOxnyMVqj6CS5YhQSZqTPbNVhYPcmNknvGAkX
xq8TS13Iw9mA48V7Sa3oYzvXaRBJB8Ynb8ewkwOQYDe47tuFehTZUS5fnsiB
n07Pjq4qJ2KydViengID7C6qHxBW60dZz2U343Zz8PA0Oy2eNYgj233JVhEM
yP6x/GXf8BgsNd6/etVyKoS4vFJZGsZD4dLmEKHKY3j/RP6PtceoYNCt71xF
IqNkQ/LgkeReOCf+QOSgFxO3Hq5Ybq3DRO+HvrlaquM423RaX3UHC0Ncxx6E
do5gaA19XdRWJi7dWVrurzICs+5ZlALfYVDdfOTIMhUO0vMYZ/6rYSHhP3n/
OFcKSESebtR7xMOIC17WKimf0ELvHzF0fz+Y7Dw0kCTGxFurGYnvVg3DFcXo
5lvvGXCDlPbH4ikdIun7NnwMHcfPfoWX/tPm4iVVZTqpLBMHixuk7t1g4++V
vR9zPjTBGaN48333ET51um61GWQgT/lEwJccCuoZhKnYmtBhIFnodd7iAXxg
tc2h2pKJ75NlIp0Lu6FEp6b78G0mxtxxoJ+PqkYd+6vzjjF0lLHfQjg9RYPf
o6OndvuQ4Op3i6PVU0OYOGL7zusKC/RPbBPXDWvFTdaBU6suMbEtzFI2tngI
/c3jxe+u46FuWtfBz8NUVItWUHglUg1jaWNrli6rxT2Vm6ZVe6bAxmKzRPVs
L356XFjdZ84D6aH6W3JBFCQWfXjY8ZYK91Pivvg10uDVUPO/pYE0nH2zfGvj
QzYOPfyWtLisF211hFSWR7GheCI/NNGqDYP7Jdt7tnEx8nShIWf2A3I3LpI1
mCJAt7a6fu45PsqonOeDez/+CM4u/SvQZeym8DXHdnJg/en4SMdHtXB9ztC/
sIaD5mM5t7JPDaLofwULnxa0YL/c6QNPmEz0TVxrKn5sHNRd7Q9Qb5OBVf7C
8IUjBWslek+YsSfwd9rKlYevE3BbYPnna8/YEPQsrvvLYBe4i6z/yfxCg+xc
K2+3bX2QtlaCGz01CaXGh2ZClFiQqaiuZibSh9WveM9V99Mx592s0tBvCnYE
y55rafqGPVv3C98spsHgusbNd/K74HNu1+/nvwXzHHPbJ9k0gcOhpltWxE1C
ZKX05ndXaNie41Q0YE8B4Y4fN5Ry+FDpYR0yM94N8p6Fpf5LSSjT9ubN8EEa
3jwodKfmrOBf1I6mN57qw06t7/E+fSPgDswDbBkOMg1bzr4VzF16nbBw8kYf
7tYySHf8ycP1udzvkdWfYWm8+e/YV2R0oRllu9SRYH+s8y8vwwngv3/7zTWG
B2VDnrJbwrkgOuT7Xd+gGOw3DNrL3UjFUxVmX78c4+KKPxEvrS51YY6K2oMN
NDrGpbpQXXvqMTimd1hWnI9W/wW2LJAogazx3O7YKh7EPbU/6e3FgCXxIeIP
WMNQm/zDwTDlNvYFk2s+bOSA5NzffQsqesHRL95g9SMmPLTMMj9mVwMaLw9F
rhLlAPP8242zyb146+jyW41ubCB7VfW//TgBRw2kG1g+VKgIXW61XY8K9zLs
zad+UODPZVHVrXpsjH71LlImoh6G2tfsGn/TC10al86cTOLigMTDhFENKhoP
3W7TMidA6Tvq9rc9RGjyyDCvcOOiUnq07b9jPNjWYBFgz8/EeaHyXZ3eoyiR
nPdQWISBdtzuNJYNEU4UNNzIu03F1dl1IQu+M/Dq0JLGnLBcqFz43evCDcG7
V6l1D18exLObziVejGHCQPWZ23P/JnBihJr9XJ2NXoTXmdTobqy5UjkzfpUD
jEabmqP1LdC2LcHjanoDTPk7dnFEeWgeVd5zzrwdmrpzW58kMFHqlArU907g
dJ1Vwop8CkgGytK+J1Dw64j6oivfJuHCU1L8hUwO/iuKpumPfYNAfc8H/+Wy
cE6zf32TFBFabO4F20rzYbpreXhITjkm1Ke+HLjRCBbxjWJr5/lQMKPfesB6
FGkH/l3tm+RhvKbolSYJwTwtfmLRtiOQrDfc1p/FwuRPdvvu8ckoFHZ8TeqV
axhaUVfBOsuBH1T1hNfbJ1BWWSYAmiYh7qLpkov1TEz70/so6N0gZqz/kbHc
nIjR7efrLt1mguzXtSW6Cp/wUUruOlNDHlolXIp6mjWFgaq7vN68agZVB/cH
0oEjILnxgp2xFQ/9VkorCj+hg/2fnys7i4lg6S+muOVpG7zfYy17ypCNhakh
r2PvcEEuzDVfNJKBK+7xN48++wY2psucBrvYOPG0+vHLv0PQOed9elk3F2RT
+tv78/mgmBTRufTwR0iZy9tWoMuFXdTtxHfCn2C3VsmF3/oNeCFgnmW1k4e1
cm8WJNUIdFc3Invw7ziIkz/ImpsywePkYn6vNhno2/5wen3YEGFq6vDuwls8
+TD3jvhzHl6yC7kZZVOH6kvO1uqZp6J9/HFdr89sKHqgkzj9kwjBjGUOnVIU
ZOp+c0m8z4LKpHmJZWUU8Le5szhVg4l2G655Gd8gwHm/Pwoi5ygQfWbyI8wR
IMZhsUbaTC4KaZCfUbV5ULRnzt3sPAW/H89JOhBJgb/F0xNpat0QzA0LL3dj
ociudscsAYeQJdKvNBTR0Mg1x8C+dAoenH/yfPDYF3gUsq5s9mYinN7Aont+
Z4CMaHfsNoEvuunddSy52YmfQ3yv5R7KgJ8XqKGvBL6t/KmRvU+GixuqbQJq
Xg2CtWeudd+iSfB+JBMwPN+LacooBXmZsJhhlUwK5GPnZETaRdVoXCwfe2rv
YQ4aBW2Wu6w3iSKTg4ql12n46mB1eIkeE+jvRVP/3W7G4MUS5L0dfDQxiUoZ
uVcHCbNBN3UFHOdRFv9TltaLEh+NRnoPUMBpq72ay1oK2ulknuwqmsKTEuI1
pQq9cNeGNhB9iwmGAYv6PWuaUCuCvag0kIdCy7KlOawP0JW+suxdZCsUO/km
bohlQMO8NJ//jwYPOF7m+xTJQCys19+UEo4v/xuWqBnjwWfNyoNr3HhAaGOF
p61sxiSN9asv2w6B5OP5QJ8VfPy9RCPG4kk3nss3cf1TSsfq+pOuC9vJ+LRQ
alz+KgXrRFZHKy/kwdEZZ+OTL1rwnt1Pkco3LSDpRRNJ4HHwreZivQApOhDl
UyzzEj/jn3NPDdbL8jGM9U3njWUXBt878easFAkyqjoNhmaoqH3igd4ZTQYE
pxPtpDsy8eHP5YUOS1l41nwHwZ8xCtefbdx8dQUX1tAqFintH8V9TL2o42+4
qLtkzjJ9nYB/15VzhMSZEKzVYvLl8ggktjZvXiX4h07HrFvtewogwWDmUcyK
z7jkvrvYRpUpTPDpLt84y0O1X/dPuUhlIOyY+2VqSoC/nMrF6ko0mJNsy4uU
ooGzXfH2izUUGLE0PDh0jgHifiZ2QZaTUDzz2PgBjuEG73qdPfUkMEl9N0ia
6EbRlMyX4jlsXBBmdrhquhOWWhe/W13Lh+Pc+yJLVNl4rZZpJvOvHc1NopRf
OWVAxg+5e4kCLr8t9tF7cx8DHYK+c8L1ycA+8INQqzEItBavxkXCVFhwVXNq
jYnAx/xrKamHi0A+akf4SXcarNOKbmzMG4JDuTrb7P8O4TmOrYKqPAv+nl4R
dr2DgnfyX4slyo6g2Q8rTwuxKdS1afEiR7dhwu2btFiN77DrvKzLvG8hztyd
lzf+yIDESDXrQkU2PvMPX5l5vR/dPgU+/TnCwvDZ+pWWUj2olm2zUHQ3H/Ut
d1YcbxiA6DlRu+Y8JoZUeP/ryBvGZYtCv7Hv8PDlk6NDKXEcFBLhL/GMnoAt
e7S2xLgJekjNLslxDy72iGslYEU/UFfriMa40VDZW4xS9JgGAWePOGU6t8Mr
8VXas7osrJExv2SUTMRdS4qMzmnyUCamYJfQkmH8LbpuZTuVin33NFJWm07A
iaxHY6XvJ3HU8U/rH1kayH/V876lzYWHpPqRzDUV+B8z/cLsDxo+vPwsfMm1
CbilGxVxN5+HFrcS1O9/jQN3e66ti2Bvs7sdHcUF/cK2Py5e1ouHLTLNGesm
CoGV+SSbeo2AYg3m3u6WdFhoV3EqqaEBxrI26mp0cNCp/vCvPe8F+Xd1ROOc
dB/awH1KZzod2ma81Qu3CrjgbeI95wkBRzImKl1/kMHFvlTSdBsH5oqvBwZh
Ay6jtxDkvlBAXDbTnL9oEl8YOtWHlkzBz4Obzl6vGUDPLOPY8acEiIswvzHC
Z0GjbfQlO4c6tPI1ZxeVsaHTyd2u6jAVjXbtm3a3I8OJryf+sYMZMJPDhNcC
Xs3uvxC0aFEt5sgZH1nqyoIkh/OeSkZcsCe/bFxBIaJWslKxOf0+qOeE3ZEi
8UDsiVPt4yI29LUYt1Tl1WGHWPD97XJcPKz/YaPaaDb6aN6fJd6kYVvI33eb
ZSk4r8O2NP+Vic2uvnHigh55mcsuDyPSkfa3Q0w/gg4y628oFsZyQD1z1sFn
ewJ+jxnda/aLgN+8P8gejSGD3OiszNatbNwbvmDV3OEeKDofJ2NFFnDs2Yb1
D4e7wNBVr+XOvXYw2rXxzSIWGwZeD9lFXulCHe+43Z7lfCgjMrLWm1Jx5PLy
Ta0v6LD99YWlSxQ4eM1xU1/FrSFwieWe7m/l4syIo2hMQQs0nAn/JRc0hpMe
r9IWa3Hxx12fSrc7TMg6cmrj3gOTGBPO3mv4Hw8j71BNt2dWQ1Gm5oCzOQuz
HVuuT9YzcHvrlYWhQe3w4MH0/n4CE2NNFBWq1owDQeFQ2v4+JpZ3CJ12OlsC
K67sp6d60jFa7mpB2K1RcHav63xPZWDaiKWq6aU0yF8c7+QZyMG41lUlotLF
8DaxVbVP4L+auaPyw07DmBaSnfxmARtXHm/r4JEf4hWZ7yVndvJgSebhubwR
CjCTlmquUSHhmOMllf0KNDju9+mFth4D9l1dZVy3mwxq1LkPZwuYQHheuHMu
Pwf3VoLst5opeGa65HPGHxqapdt5Su8RcN1mJXp4vECPE4rVGdNdWBlXT9xJ
pODpqcpSLSM6+jh+XBZfEIJhV9iXxCl8vEVqsvOfFPApw2uX6ZkUTC0SXiTV
QELKBo/WjjcUfP/+cVifGhPEJuPfKnh/RmOjNeXCZwnwkHDU3Y/CgO335zw6
TrFhpbqdiLp1LWa7mi5wO8wDD+WQZvYuAkiHJxWmwRT45Z0++zyuGE/FHZw9
9YmDQ1WJv9euqALh+zNjTmdpEFTyNWLfbQoqP65VVtVkYUxc+b7NZkR4/G33
fH3yIPaZJ6SrNbHQLvUhSpewMNophbKOScEfs868v+EM2MIRFjnd042dUkUR
465U1Px82s+dxITNx4vHgm/Q8ZuLXV43hQRuvt9i5+0oELmAYt2fP4mSMwnb
Aph00N8a0bU7n4JmxpGPH+2awg08je6yG5/QNSDqrXEjE5vviueZC/x3r9bS
F1s8e9Bae+K0XDMVPzKEJZ6sH4Q75Y09R0kcVLlUG+DvUYF2ko4LdqxlQP36
FpaSyTfYOBOp80mSCQlZCs9vPKqAPOPHx8haPDRzTvvUhTywGG+WPtjfj2bC
5X+VP1Pww3k/aeWmJmjuKw4ul6Nhw0ZjrdoGMuzRCitZ+5YCv/w+LXCZaUDP
YrrTmco+OGKVcqJ9OwcsHWTP3GsZA5nhyMMZFBos6lF8mH6Ah5pEz1WXE6sg
umL3xyVukdBWd37FQSYDG1Wd7z7WncCDMy7HM0zZ+HKFeJ+2Khkvjzh70jsm
YOeqXPP1pwaByHrkVlXIwQ/L2u2DOmjQun/T5avVE2C8QFtIOZiOk732ubNr
qNDt0q/3tKAIGsqjbla/Z4NF8pHffFsWCK1fR1N7UgI31zTsE7r8FKaWHiN4
/KLjBnVe6JdIArxTFWXbXGbgi6m6nGsjHLB1UH7+cnctXlV+OZzYzoX7LGOH
87UVWK4kWpzqxwSDcJ/EhKAJ3FZj1Uy8OgG/aXkLtwjT0NZbf/ramWH0/O3i
HK/EBe8fd3ZJUArBvZB69G/aFLy2WH90wTgT2GpazzvCXqEfQSWQJVIOM+ny
ERtPcXH4Wermy8WNOLi6auOLUD5q95C/yh2kQxCxNb0jcgKffd2w4kg2Gacc
f7v8G+Ng2blGxUQdMj64nr3VezEbs9KVuhbPkbFuKfYlmLNB3OuJEzV+Etpe
tKdNsOgQtzKcYL1wCl9zGmO3ePfi8jbxJQbmNCxrY9T/Uh6G219RycCCBUoi
C1x06APYS7YQDrccQs08onxROgMkWpuuD/MnYWobL+t+PhNNl7JJYaFMKIus
TJP6S4Nv7pMPdm9rRlf+qZWM4zyUOBVEbD9Hh1q5ZOMQ9UHY+uao/a/JNnSO
jSxMNuTi18UWUTvWEyBM2dMyt52DAV7yH6cNemBn77/C6KMMNPLjvqwT6gaT
Z8d79jnzIOehkeOtGyy0Cfa6K/ziG/Cl/ISQxQNZiSZicGkNjlo1a3yILIBn
jSZDYx5TeIJyrDtLqAfaDJOS1U1YqLPhfdX4AirQB685HD5HwLS1KXeEDKhY
pGR0OPrFBBRnhdvK3+KCgv/u8S9mA6DuLmol+mwCdxWpasj1kCFK3S6/PbMI
mqt0p91zeCgtt0Z7EeU73v3edXbOrRrMj9nO3emZxEmSt0SfFhH6FkW0hvyj
wqEjgbuJ2jRkFxON0iopsNdvgkKIocGeD5I35mx7oYj28dCy2yxY4eFx6mwG
CXfkv7mm8YSF9wy37FL8yselBfdDJ85XgZqMseGOIS7094VLKSwngdGHby5G
enzc4/a0zvHiIEpGHLvaIc1Fi60d/+ZefoXhgduBoyfYGHTHR3FwgozXSxaW
vnKgw/ci7UWSjv1wZZnQ0ddGJGBXOEaFBk2CkbpJV4YOB+zymOmXSwU8JM5i
QhQXYl5MPDok3YWrys745bwlg+I6OZkRRS6eua1u6bJFcL+i3L72K+N4siOi
ut2bhYTNXnqNPpW4sogh40tqAQ2n+zUyZnzYZf8gdUPeBDQ5RhTMl9BQeM1H
yf42OvS8Uxozr+gEjeN7bQqjJ9Hwccq78FYicnbEZUnco+Nr/paSGyKTeBBW
NXHMJvG5qoi5Zo3AX/P1baJGiHDoqP0jI2Um3i4o3lRqRcLUU72ffyIT4iNi
j49oEIGvxg6MiuCDblLi3SP9HIx8RR/gjxZBWWrOr3EqCSQ1Agzf5gj6nfhf
zTvWXGTkblYWUSxB7T1WDfpKTLijmHVW/fEkGsudL314tQ93ZFtqyyzhgcoC
i/olC7nw9r9DfwM+9kB8/tJrPc1c9LlNAuvn9XC544Tt5Jce2LIkavtSTSo+
G/BlGJ3shpHFLqeSk9lon3Gx/z63GxjpEz+tejlYUhg6ZE2gIEn6aXKyID+i
XhZcd/xIATsT28L10xQMLZY+d+AzCeOGA4QZdRxwijau+JXBRPtsuzTeNRKK
rtjFJdRRMVsogVS4aQw3S70oiDsh0H3HVFrW1QFwv8p8HZg2CSFfMvOcskjg
O8cnv95MR8bB4CERAhWKDzvpXJ5kg5OqvYtn0QhKPWsZehjBgo9+O00ezA2i
8Lp9pFd/JuHHewc92ToyuKGUufTPSfDwN9bwkaJjyAH28mAKCy6AhXFaeD+s
31QuLybI/0PtCUV3o9m4qPBm94kDdNj0hPn759YuVJG6Ke3uz0WRSo8MYbFu
rGxOmDERmwCbh/Tf7vfZ8OzDAsfopHZo9P/Yvr5YwEcTcF0ynAMe9Ulfbun3
wbTR+kc3bIhQ21sk4/mChB7t7+qeZrIhz2dryqPTQ7D8wCM/3e9cOJJQR2s2
q4Vz6TouaZU0KCPZfNrOHQU5y0yVnaepQPEZ0boSSMV3YYf737xngA61zvD+
YhLYK3PFDJJdMZqmzZrcycStX1rMWt3YeHuN0h7/+x3Y2u7bbBNKxtQ3Kz5W
K1CwvhD/BgVRIcQh/4C+GwFCZgM+eW9iw7iL2EkDSRJK7aR9100g43Md2eFf
LlR8teBVzEQeD4xvxbc9mO8B05dn7vJN+OhDyoUy1R6YKf00kdzKBUKn/mKn
6SRcA3dtS4/G4sDu1d/4FlQ0uEWYMlQdw+H+ybJmKzJsbyUfUrnLgnyDQv3k
VDL8SttWuCeGjafZWwvivgiSvuya3pWmCRQz/vnqUKHAz/3VzRx7uBghL1a5
YqoLnGQLp3zf0OD6Ca+Vd2OIUEq8o+odXgFv710fdpTngaTOwXvnDEhQs/vS
QlY3Hc16/RWDqtjgMPNfnaojAbf/1X7EHB7DsjEDh7vVZLjd88TxfTsH5MOD
eP0Bg7D3j8eU0chzFP/+Kf/FYSbcEj30fUMEH6ueDC9feyAP/D/G+zKHxuF6
lFlO9UI2ypkJrSIGd+OztYS3PG8uqL2eeEfdOYGDtBSxTr9x6Je9+8U2hYRu
udccvN8zMHU3TXk2nQgStBjnAutJdP3ypo2pywNrA++8I/dKIMoqa+j85n5w
a+loFdpKgQ9HmCinyMHR98SFHip18PGuLoWUSsVQw4Djdo0kkL/7+NmFp6lg
o7e07tIUExO6uKEXbXlYuqrqP7WtA1ihcXGnnWDfxSnnuxQpg1if1JnxU5MG
q9/ovN67g4PdRS5EOrUJx9dfObbyEwOWbYlQOE8pBc89CnlTL3kwxftl91aH
CRYbb1JfDFPgjUV0cnEiG3d/mLlSOzoK7d0WB0hCDCz02HrP/8c4PiYsa9pv
04mzTpNiC8Q50LI9ov72iX7kOGRve5zNhN716lv2zhEgUq4+wrCHCgS3VS1h
jmzYOEDNcm4jYJW28vv+4DGs3R163K2WjVpDlq93baTindZsW4UQIkTmXVMo
UnwJh5tLxbe85qD95pu/XjqPYNLdE24p82xQ2W/HPzbNgYcxDc9GVd/Bz3ay
ZvcuHrikbQg60DSA5383WhzyHoEvP4+5HlRjwboR04bydjqUZ9yqT9InQ2vC
y1uc63wobpeX8D1cDPPrLluH7uNi1fj1J/Un3LBuhb7ZKgHP27dXvZv63Iob
JW1ndlZQQbR9JmP+PQHnZpxynTzZ+FpxeftKpy6wjJXMdEsX8EBu92IJ4QlQ
cxs0yR79gIFuwvovYnmgZJu8fXUGAzVXto2I7aFi7WW7QnoaHUwSKPNXz9Lw
52U1rclrVXBbKJ26o0LAMXprv0TMkrBjhlisPDYJujfnQ/fu56Put/mkn4Vd
WLdx9d/Hq7l4xZp64g+44NOkTDPjryQUmtbKDizgwJ+TYe4zD8px9/ZB3/ZI
NsQ5PrHYkzsKc11yQktlGeAzyhfZPDoCc7/26Tl78lFudbVW7oqP6NO3cuea
nRx4HvnLP+NmOay5mL9MtpOPjsdvFHzXpEAjYZG09hgLWvu2K5UWclExIvkz
524RkKtkA0wu9cH8vQTd17IMrLSDb+lWBDTdo3rJe5oN2hUUn/ceQ7A/gt6Z
dIqG99xi/SwFfd7mULB03zESNNee/P2xrxXyFRSOLxP0sVrloaPH+RRc5ESf
6XIm4IeStpn2SiZ8/vDfs37xZhDz2rNlgWQvysuvslmzZwozVzp372uhY1P0
069abmQ0tM+ROJROxJpBswW5J1hwRaZkfFPAMBy7Gf3l8yUmijsn8pZ2UMHc
yF+hbH4ALvSfllTdLuhvStxZp+UEMOFL5SkoMZEpGxdhq01A63wN07ZpQf7G
qrbF80m4t8t3nbAQG65tPp1jtm0Iy9PcjXSi03Dl4znTMmcG/BG+Nh1g04wj
is0Biy+xcT6w0+tBOB2yxVWvzibR4adqxHIf31bMKzOpHj/Pg8h01QO1i4jg
uj3axMGQB/+Wu/bdOklHt2fimWI7KDBWR0ofEPResd7JJROZTfA/p97pag==

          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1.2434141081185461`, 
       1.1978949622784731`}, {-1.153044560120668, 1.1765470063800332`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {193.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 0, 1], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQPLGL8dK6urdYDwRBwi6iUWqUXD+CoOhpcUpD8p
w/h6DgJFHxazCML4Jg5lJzct+Pu7Bsq3dGh9fKA2fDmMb+fwRKOb59dmKL/B
0aGH1+ZSZRNM3sWhyX0+648ImLybg4o7g6JOAkze0+FQ1jGT9HfVUHlvh4Bz
XyscX0H5DH4O095WbhJ7CeU7BDjUON3W2zoZpj7Qoext09nb66D8A0EOMmp5
/623wPSHOMwOK5jTNg2mP9TBJ1QqJNQbpj/MQSzuw4eFXjD94Q5fDMt6JsjC
9Ec6dO3zEmu1rXYAAFDhXew=
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"Tr\"", TraditionalForm]},
      AxesOrigin->{0, 431.94497979806573`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {433.84779020471547`, 471.90399833771005`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {580.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMrUtefjj58zh7CE3GYnto10SbmIJSv4jD5+OOz
v8NOQPl6Dmcj/S+rHr4C5Zs4vPFZGcAQvw3Kt3RY6/NK1GLKXSjfzuEYU9qq
iUaXIPwGRwc1K7bK2KmXofIuDr/WLRBw6Iea3+DmcCLy2Bz/1HtQeU+HIoGI
XxIS16Hy3g7yMqeOpUScgsr7OWg+r7lXZnIYwncIcDBYWnHbMfcAVH2gg/fi
iCOx+Xcg/ANBDp4Lzk7avAZmf4jDuzkr3s56AeU7hDq8/VPf1xlwH6o/zMFz
VczEKLFDUP3hDqdWWJWfuXMGqj/SYaXe7nmef17aAwBPimfC
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"n\"", TraditionalForm], 
        FormBox["\"Tr\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100.}, {0, 0.8120468235224126}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {967.5, -140.87228258248675}, 
     ImageScaled[{0.5, 0.5}], {360., 268.32815729997475}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.69976238305608*^9, 3.6997624030069494`*^9}, 
   3.699783852902853*^9, 3.699785014680996*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\guifr\\\\Desktop\\\\plot4.pdf\>\"", ",", "plot4", ",", 
   "\"\<PDF\>\""}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["\<\"C:\\\\Users\\\\guifr\\\\Desktop\\\\plot4.pdf\"\>"], "Output",
 CellChangeTimes->{3.6997850687148976`*^9}]
}, Open  ]]
},
WindowSize->{749, 672},
WindowMargins->{{Automatic, 223}, {48, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 320, 6, 88, "Input"],
Cell[CellGroupData[{
Cell[903, 30, 1830, 47, 259, "Input"],
Cell[2736, 79, 1650, 49, 111, "Output"],
Cell[4389, 130, 950, 24, 111, "Output"],
Cell[5342, 156, 956, 24, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6335, 185, 429, 8, 50, "Input"],
Cell[6767, 195, 4367, 148, 146, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11171, 348, 382, 11, 50, "Input"],
Cell[11556, 361, 11501, 372, 146, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23094, 738, 170, 3, 30, "Input"],
Cell[23267, 743, 556, 17, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23860, 765, 1543, 51, 52, "Input"],
Cell[25406, 818, 523, 17, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25966, 840, 188, 5, 30, "Input"],
Cell[26157, 847, 682, 19, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26876, 871, 261, 6, 50, "Input"],
Cell[27140, 879, 6854, 172, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34031, 1056, 494, 12, 30, "Input"],
Cell[34528, 1070, 497, 16, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35062, 1091, 293, 7, 30, "Input"],
Cell[35358, 1100, 520, 17, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35915, 1122, 709, 16, 33, "Input"],
Cell[36627, 1140, 623, 19, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37287, 1164, 196, 5, 30, "Input"],
Cell[37486, 1171, 2921, 91, 121, "Output"]
}, Open  ]],
Cell[40422, 1265, 222, 3, 126, "Input"],
Cell[40647, 1270, 3085, 84, 432, "Input"],
Cell[43735, 1356, 3946, 108, 183, "Input"],
Cell[CellGroupData[{
Cell[47706, 1468, 2919, 75, 145, "Input"],
Cell[50628, 1545, 26739, 471, 164, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77404, 2021, 185, 5, 30, "Input"],
Cell[77592, 2028, 121, 1, 87, "Output"]
}, Open  ]],
Cell[77728, 2032, 3145, 103, 240, "Input"],
Cell[CellGroupData[{
Cell[80898, 2139, 2359, 68, 145, "Input"],
Cell[83260, 2209, 26944, 475, 164, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110241, 2689, 185, 5, 30, "Input"],
Cell[110429, 2696, 121, 1, 30, "Output"]
}, Open  ]],
Cell[110565, 2700, 9803, 265, 993, "Input"],
Cell[120371, 2967, 2657, 89, 240, "Input"],
Cell[CellGroupData[{
Cell[123053, 3060, 2208, 65, 145, "Input"],
Cell[125264, 3127, 26809, 472, 164, "Output"]
}, Open  ]],
Cell[152088, 3602, 2730, 90, 240, "Input"],
Cell[CellGroupData[{
Cell[154843, 3696, 2290, 67, 145, "Input"],
Cell[157136, 3765, 26880, 475, 164, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184053, 4245, 185, 5, 30, "Input"],
Cell[184241, 4252, 123, 1, 30, "Output"]
}, Open  ]],
Cell[184379, 4256, 3091, 98, 240, "Input"],
Cell[CellGroupData[{
Cell[187495, 4358, 2290, 67, 145, "Input"],
Cell[189788, 4427, 26688, 472, 164, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216513, 4904, 185, 5, 30, "Input"],
Cell[216701, 4911, 123, 1, 30, "Output"]
}, Open  ]]
}
]
*)

